<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/27/2016 10:00:18 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="046-DEBBCHAVEZ"
  DTS:CreatorName="APS\e104090"
  DTS:DTSID="{FAE1F49B-1128-461F-BD1C-EC871B0E6120}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5058.0"
  DTS:LocaleID="1033"
  DTS:MaxErrorCount="2"
  DTS:ObjectName="Create Member Days"
  DTS:PackageType="5"
  DTS:VersionBuild="4"
  DTS:VersionGUID="{B160EEF0-2C8C-428F-866D-72356D99DEEE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SYNERGYDBDC.ST_Production.APSImport]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{A91B1E5D-4E81-4881-BDCF-00F14F613D96}"
      DTS:ObjectName="SYNERGYDBDC.ST_Production.APSImport">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SYNERGYDBDC;User ID=APSImport;Initial Catalog=ST_Production;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAF7DjJK4DMUyFmnQmtFmMiAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACVc+wyM8VqV8UMahuga6+RAAAAAASAAACgAAAAEAAAAK9jf0hQdqGiJHRHQfUAVs8wAAAABplM5NPTvyJQAfQPi4BCvM+DvtTuyiXHBtll35BRQ243P5fyhr8BCeDPxZF0odvqFAAAAHbuNSBGS0jixrscgkTIimp83wxz</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{AA1C1867-13E7-419C-8206-F61C91DDFBE9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="2"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A91B1E5D-4E81-4881-BDCF-00F14F613D96}"
          SQLTask:SqlStatementSource="DROP TABLE STUDENT_SCHOOL_MEMBERDAYS&#xA;&#xA;&#xA;CREATE TABLE STUDENT_SCHOOL_MEMBERDAYS&#xA;(&#xA; startDate datetime,&#xA; endDate datetime,&#xA; org_year_gu VARCHAR (200),&#xA; STUID VARCHAR (9),&#xA; ORIGENTERDATE DATE,&#xA; SCHOOL VARCHAR (50),&#xA; MEMBER_DAYS VARCHAR (3),&#xA;SCHOOL_CODE VARCHAR (3)&#xA; )&#xA; &#xA;&#xA;declare @startDate datetime;&#xA;declare @endDate datetime;&#xA;declare @org_year_gu uniqueidentifier;&#xA;DECLARE @STUID VARCHAR (9);&#xA;DECLARE @ORIGENTERDATE DATE;&#xA;DECLARE @SCHOOL VARCHAR (50);&#xA;DECLARE @SCHOOL_CODE VARCHAR (3)&#xA;&#xA;deallocate x_cur;  --after the first time running you'll need this to avoid warning&#xA;declare x_cur cursor for&#xA;&#xA;&#xA;&#xA;SELECT                    --ENR.ENTER_DATE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--'2016-02-03' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case when enter_date &lt; '20160811' then '20160811' else ENTER_DATE end as new_enter_date&#xA;                    ,CASE WHEN LEAVE_DATE IS NULL OR LEAVE_DATE &gt; GETDATE() THEN GETDATE() &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE LEAVE_DATE END AS NEWLEAVE&#xA;                    ,ORGANIZATION_YEAR_GU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,ENR.SIS_NUMBER&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,ENTER_DATE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,SCHOOL_NAME&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,SCHOOL_CODE&#xA;&#xA;             FROM&#xA;             APS.StudentEnrollmentDetails AS ENR&#xA;&#x9;&#x9;&#x9; INNER JOIN &#xA;&#x9;&#x9;&#x9; rev.EPC_STU AS STU&#xA;&#x9;&#x9;&#x9; ON &#xA;&#x9;&#x9;&#x9; STU.STUDENT_GU = ENR.STUDENT_GU&#xA;&#x9;&#x9;&#x9;&#xA;             WHERE&#xA;             SCHOOL_YEAR = '2016'&#xA;             AND EXTENSION = 'R'&#xA;             --AND SCHOOL_CODE BETWEEN '200' AND '599'&#xA;             AND SCHOOL_CODE != '533'&#xA;             AND (ENTER_DATE &lt;= GETDATE() AND LEAVE_DATE IS NULL OR LEAVE_DATE BETWEEN '20160811' AND GETDATE() or LEAVE_DATE &gt; GETDATE())&#xA;&#x9;&#x9;&#x9;&#xA;&#xA;open x_cur&#xA; fetch next from x_cur into&#xA;@startDate,&#xA;@endDate,&#xA;@org_year_gu,&#xA;@STUID&#xA;,@ORIGENTERDATE&#xA;,@SCHOOL&#xA;,@SCHOOL_CODE&#xA;--select 'first', @startDate as startdate, @endDate as enddate, @org_year_gu org_gu&#xA;&#xA;--print @@fetch_status&#xA;while @@FETCH_STATUS = 0 &#xA;begin&#xA;&#xA;INSERT INTO STUDENT_SCHOOL_MEMBERDAYS&#xA;&#xA;SELECT&#xA;&#x9;@startDate&#xA;&#x9;,@endDate&#xA;&#x9;,@org_year_gu&#xA;&#x9;,@STUID&#xA;&#x9;,@ORIGENTERDATE&#xA;&#x9;,@SCHOOL&#xA;&#x9;&#xA;,CASE &#xA;-- if the passed date is large than the last day, then return zero as invalid&#xA;WHEN @endDate &lt; @startDate THEN 0&#xA;-- else we calculate the difference between the passed date and the first day an each orgYear&#xA;-- stripping out weekends and holidays&#xA;ELSE&#xA;(DATEDIFF(dd, (CASE WHEN @startDate&lt;START_DATE THEN START_DATE ELSE @startDate END), @endDate) + 1) -- Number of days difference between 2 dates (start date and day looked up)&#xA;-(DATEDIFF(wk, (CASE WHEN @startDate&lt;START_DATE THEN START_DATE ELSE @startDate END), @endDate) * 2) -- Number of weeks difference (*2) - removes weekends&#xA;-(CASE WHEN DATENAME(dw, @endDate) IN ('Saturday','Sunday') THEN 1 ELSE 0 END) -- subtract one if the end day is on a (weekend) Not sure what we want to do hear&#xA;- NumNonDays -- number of holidays &#xA;END&#xA;AS MemberDay&#xA;,@SCHOOL_CODE&#xA;&#xA;FROM&#xA;-- this subselect gives you first and last day of calendar along with number of holidays before passed date&#xA;(&#xA;SELECT&#xA;CalOption.ORG_YEAR_GU&#xA;,CASE WHEN @startDate&lt;MIN(CalOption.START_DATE) THEN MIN(CalOption.START_DATE) ELSE @startDate END AS START_DATE&#xA;,CASE WHEN @endDate&lt;MIN(CalOption.END_DATE) THEN MIN(CalOption.END_DATE) ELSE @endDate END AS END_DATE&#xA;,COUNT(*) * CASE WHEN SchoolCal.SCHOOL_YEAR_GU IS NULL THEN 0 ELSE 1 END AS NumNonDays&#xA;FROM&#xA;REV.EPC_SCH_ATT_CAL_OPT AS CalOption&#xA;&#xA;LEFT JOIN&#xA;REV.EPC_SCH_ATT_CAL AS SchoolCal&#xA;ON&#xA;SchoolCal.SCHOOL_YEAR_GU = CalOption.ORG_YEAR_GU&#xA;AND SchoolCal.HOLIDAY IN ('Hol','Sta')&#xA;AND CAL_DATE &lt;= @endDate&#xA;AND CAL_DATE &gt;= @startDate&#xA;where ORG_YEAR_GU = @org_year_gu&#xA;GROUP BY&#xA;CalOption.ORG_YEAR_GU&#xA;-- used to identify calendars with no holidays between start and passed date&#xA;,CASE WHEN SchoolCal.SCHOOL_YEAR_GU IS NULL THEN 0 ELSE 1 END&#xA;)NumDays&#xA;&#xA;--print 'after'&#xA;--print @org_year_gu&#xA;--print @startDate&#xA;--print @endDate&#xA;&#xA; fetch next from x_cur into&#xA;@startDate,&#xA;@endDate,&#xA;@org_year_gu,&#xA;@STUID&#xA;,@ORIGENTERDATE&#xA;,@SCHOOL&#xA;,@SCHOOL_CODE&#xA;--select @startDate as startdate, @endDate as enddate, @org_year_gu org_gu&#xA;&#xA;end&#xA;&#xA;close x_cur&#xA;go&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Execute SQL Task"
          TopLeft="21.7142860840778,9.17647071693184" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>