/*
Pull data for for Beata
Council of the Great City Schools CGCS
KPI Request
*/


--***********************************************************
--total student enrollments from RDAVM/Synergy Data Set 1
; WITH STUDENTCTE 
AS
(
SELECT 
		'2015-2016' AS [SURVEY SCHOOL YEAR]
		,BS.SIS_NUMBER AS [APS ID]
		,[STUDENT ID] AS [STATE ID]
		--,ORG.ORGANIZATION_NAME AS [SCHOOL NAME]
		,BS.GENDER
		--,BS.HISPANIC_INDICATOR
		,BS.RACE_1
		,BS.RACE_2
		,BS.RACE_3
		,BS.RACE_4
		,BS.RACE_5
		,BS.RESOLVED_RACE
		,CASE	
			WHEN SPED_STATUS = 'Y' and GIFTED_STATUS = 'Y' 
				THEN 'N'
			WHEN SPED_STATUS = 'N' AND GIFTED_STATUS = 'N'
				THEN 'N'
			WHEN SPED_STATUS = 'Y' AND GIFTED_STATUS = 'N'
				THEN 'Y'
		END AS SPED_STATUS
		,BS.PRIMARY_DISABILITY_CODE
		,LU.VALUE_DESCRIPTION AS [PRIMARY DISABILITY DESCRIPTION]
		,CASE
			WHEN [ENGLISH PROFICIENCY] = '0' THEN 'Never Enrolled'
			WHEN [ENGLISH PROFICIENCY] = '1' THEN 'Currently Enrolled'
			WHEN [ENGLISH PROFICIENCY] = '2' THEN 'Exited One Year'
			WHEN [ENGLISH PROFICIENCY] = '3' THEN 'Exited Two Years'
			WHEN [ENGLISH PROFICIENCY] = '4' THEN 'Exited Three + Years'
		END AS [ELL STATUS]
		,E.EXIT_DATE
		,STARS.[ECONOMIC STATUS /FOOD PGM PARTICIPATION/] AS FRPL_STATUS
		,[CURRENT GRADE LEVEL] AS [STUDENT GRADE LEVEL 2015]
		,isnull(C.AP_INDICATOR, 'N') AS AP_INDICATOR
		--,isnull(p.DUAL_CREDIT, 'N') AS DUAL_CREDIT
		--,ISNULL(c.IB_INDICATOR, 'N') AS IB_INDICATOR
		,ROW_NUMBER() over(partition by BS.SIS_NUMBER order by BS.SIS_NUMBER, C.AP_INDICATOR DESC) as RN
	FROM
	[RDAVM.APS.EDU.ACTD].[db_STARS_History].[dbo].[STUD_SNAPSHOT]  AS STARS
	LEFT JOIN 
	rev.EPC_SCH AS SCH
	ON
	STARS.[LOCATION CODE] = SCH.STATE_SCHOOL_CODE
	INNER JOIN 
	APS.BasicStudentWithMoreInfo AS BS
	ON
	BS.SIS_NUMBER = [ALTERNATE STUDENT ID]
	LEFT JOIN 
	APS.LookupTable('K12.SpecialEd','DISABILITY_CODE') AS LU
	ON
	LU.VALUE_CODE = BS.PRIMARY_DISABILITY_CODE	
	LEFT JOIN 
	rev.EPC_STU_PGM_ELL e
	ON
	E.STUDENT_GU = BS.STUDENT_GU
	left join
	aps.ScheduleDetailsAsOf('2016-05-22') P
	on
	p.SIS_NUMBER = bs.SIS_NUMBER
	left join
	rev.EPC_CRS C
	on
	p.COURSE_GU = c.COURSE_GU
	WHERE
	[Period] = '2015-12-15'
	AND [District Code] = '001'
)
--SELECT * FROM STUDENTCTE where RN = 1 AND   [APS ID] = 100012202
,STUDENTCTE1
AS
(
SELECT
	*
FROM
	STUDENTCTE
WHERE
	RN = 1
)
SELECT * FROM STUDENTCTE1 
,ENROLLED_GRADE2014
AS
(
SELECT
	S.[APS ID],
	STARS.[CURRENT GRADE LEVEL] AS [GRADE LEVEL 2014]
FROM
	STUDENTCTE1 S
LEFT JOIN
	[RDAVM.APS.EDU.ACTD].[db_STARS_History].[dbo].[STUD_SNAPSHOT]  AS STARS
ON
	S.[APS ID] = STARS.[ALTERNATE STUDENT ID]
LEFT JOIN 
	rev.EPC_SCH AS SCH
ON
	STARS.[LOCATION CODE] = SCH.STATE_SCHOOL_CODE
INNER JOIN 
	APS.BasicStudentWithMoreInfo AS BS
ON
	BS.SIS_NUMBER = [ALTERNATE STUDENT ID]

WHERE
	PERIOD = '2014-12-15'
)
--SELECT * FROM ENROLLED_GRADE2014
/*
EXAM information for Data Set 1
AP
*/

,AP_EXAM
AS
(
SELECT 
	SIS_NUMBER,
	TEST_NAME,
	PL,
	TEST_SCORE,
	ADMIN_DATE
FROM
(
SELECT 
         ROW_NUMBER () OVER (PARTITION BY SIS_NUMBER, TEST_NAME, ADMIN_DATE ORDER BY TEST_NAME DESC) AS RN
		,CAST (SIS_NUMBER AS INT) AS SIS_NUMBER
		,TEST.TEST_NAME
		,STU_PART.PERFORMANCE_LEVEL AS PL
		,SCORES.TEST_SCORE
		,STUDENTTEST.ADMIN_DATE
FROM
		rev.EPC_STU_TEST AS StudentTest
JOIN
		rev.EPC_TEST_PART AS PART
ON 
		StudentTest.TEST_GU = PART.TEST_GU
JOIN
		rev.EPC_STU_TEST_PART AS STU_PART
ON
		PART.TEST_PART_GU = STU_PART.TEST_PART_GU
		AND STU_PART.STUDENT_TEST_GU = StudentTest.STUDENT_TEST_GU
INNER JOIN
		rev.EPC_STU_TEST_PART_SCORE AS SCORES
ON
		SCORES.STU_TEST_PART_GU = STU_PART.STU_TEST_PART_GU
LEFT JOIN
		rev.EPC_TEST_SCORE_TYPE AS SCORET
ON
		SCORET.TEST_GU = StudentTest.TEST_GU
		AND SCORES.TEST_SCORE_TYPE_GU = SCORET.TEST_SCORE_TYPE_GU
LEFT JOIN
		rev.EPC_TEST_DEF_SCORE AS SCORETDEF
ON
		SCORETDEF.TEST_DEF_SCORE_GU = SCORET.TEST_DEF_SCORE_GU
LEFT JOIN
		rev.EPC_TEST AS TEST
ON
		TEST.TEST_GU = StudentTest.TEST_GU
INNER JOIN
		rev.EPC_STU AS Student
ON
		Student.STUDENT_GU = StudentTest.STUDENT_Gu
INNER JOIN
		rev.REV_PERSON AS Person
ON
		Person.PERSON_GU = StudentTest.STUDENT_GU
LEFT JOIN
       APS.PrimaryEnrollmentsAsOf(GETDATE()) AS Enroll
ON
       StudentTest.STUDENT_GU = Enroll.STUDENT_GU
LEFT JOIN
       rev.REV_ORGANIZATION_YEAR AS OrgYear
ON
       Enroll.ORGANIZATION_YEAR_GU = OrgYear.ORGANIZATION_YEAR_GU
LEFT JOIN
       rev.REV_ORGANIZATION AS Org
ON
       OrgYear.ORGANIZATION_GU = Org.ORGANIZATION_GU
LEFT JOIN
       APS.LookupTable('K12','Grade') AS GradeLevel
ON
       Enroll.GRADE = GradeLevel.VALUE_CODE
LEFT JOIN
		REV.EPC_GRAD_REQ_DEF_TST_GRPYT AS TST_GRPYT
ON
		TEST.TEST_GU = TST_GRPYT.TEST_GU
		AND PART.TEST_PART_GU = TST_GRPYT.TEST_PART_GU
LEFT JOIN
		REV.EPC_GRAD_REQ_DEF_TST_GRPY AS TST_GRPY
ON 
		TST_GRPY.GRAD_REQ_DEF_TST_GRPY_GU = TST_GRPYT.GRAD_REQ_DEF_TST_GRPY_GU
LEFT JOIN
		REV.EPC_GRAD_REQ_DEF_GRPYT_REQ AS DEF_GRPYT
ON
		 DEF_GRPYT.TEST_GU = TEST.TEST_GU
		AND DEF_GRPYT.GRAD_REQ_DEF_TST_GRPTY_GU = TST_GRPYT.GRAD_REQ_DEF_TST_GRPTY_GU
LEFT JOIN
		REV.EPC_GRAD_REQ_DEF_GRPYT_PL AS GRPYT_PL
ON
		 GRPYT_PL.GRAD_REQ_DEF_TST_GRPTY_GU = DEF_GRPYT.GRAD_REQ_DEF_TST_GRPTY_GU
WHERE
		1 = 1
		AND TEST_NAME LIKE 'AP %'
		AND YEAR(ADMIN_DATE) = '2015'
) AS T1
WHERE RN = 1
)
----SELECT * FROM AP_EXAM where sis_number = 100016054

--Found students who had N as AP Indicator but had test results for an AP Exam
--example:  100016310 who was enrolled in AP EngLitComp12 but entered and left on the
--same date, but who has an exam score
--most of the AP indicators who are N were registered for an AP class and left
--before the school year was over but took the test
--others took the test but were not in AP classes - 100104884 didn't pass the test
,AP_RESULTS
AS
(
SELECT 
	*
FROM STUDENTCTE1 S
inner JOIN	
	AP_EXAM E
ON
	S.[APS ID] = E.SIS_NUMBER
PIVOT
(
	MAX(TEST_SCORE)
	FOR TEST_NAME
	IN ([AP Calculus BC],[AP German Language], [AP Physics C Mechanics], [AP Spanish Literature], [AP Biology], [AP Chemistry], [AP English Language and Composition], [AP Italian Language And Culture],
	[AP Microeconomics], [AP Music Theory], [AP Physics C Electricity and Magnetism], [AP Psychology], [AP Spanish Language], [AP Studio Art Drawing],  [AP US History], [ [AP US History], 
	[AP Caluclus AB], [AP Government and Politics: United States], [AP English Literature And Composition], [AP Japanese Language And Culture], [AP Studio Art: 2-D Design], [AP Chinese Language and Culture],
	[AP Computer Science A], [AP Environmental Science], [AP European History], [AP French Language], [AP Human Geography], [AP Macroeconomics], [AP Statistics],
	[AP Studio Art: 3-D Design], [AP World History])
	) AS PIVTBL
)
--SELECT * FROM AP_RESULTS 

,DUAL_CREDIT
as
(
SELECT
	ROW_NUMBER() OVER (PARTITION BY SIS_NUMBER ORDER BY SIS_NUMBER, DUAL_CREDIT DESC) AS RN,
	SIS_NUMBER,
	COURSE.COURSE_SHORT_TITLE, 
	DUAL_CREDIT,
	CREDIT_COMPLETED
FROM
	APS.BasicSchedule AS [BASIC_SCHEDULE]	
	INNER JOIN
	rev.EPC_CRS AS [COURSE]
	ON
	[BASIC_SCHEDULE].[COURSE_GU] = [COURSE].[COURSE_GU]
	
	INNER JOIN	 
	rev.REV_YEAR AS [RevYear] -- Contains the School Year
	ON 
	[BASIC_SCHEDULE].[YEAR_GU] = [RevYear].[YEAR_GU]
	
	INNER JOIN
	rev.EPC_STU AS [STUDENT]
	ON
	[BASIC_SCHEDULE].[STUDENT_GU] = [STUDENT].[STUDENT_GU]
	
    -- Get school name
	INNER JOIN 
	rev.REV_ORGANIZATION AS [Organization] -- Contains the School Name
	ON 
	[BASIC_SCHEDULE].[ORGANIZATION_GU] = [Organization].[ORGANIZATION_GU]
    
    -- Get school number
	LEFT JOIN 
	rev.EPC_SCH AS [School] -- Contains the School Code / Number
	ON 
	[BASIC_SCHEDULE].[ORGANIZATION_GU] = [School].[ORGANIZATION_GU]

	LEFT HASH JOIN 
	(	 SELECT  CREDIT_COMPLETED, MARK, TERM_CODE, STU.STUDENT_GU, COURSE_ID, SECTION_ID
	 
	 FROM 

			rev.EPC_STU_CRS_HIS AS HIS
			INNER JOIN 
			REV.EPC_STU AS STU
			ON
			HIS.STUDENT_GU = STU.STUDENT_GU
			LEFT JOIN
			[rev].[EPC_REPEAT_TAG] AS [Repeat]
			ON
			HIS.[REPEAT_TAG_GU]=[Repeat].[REPEAT_TAG_GU]
) AS CRSHIST
ON
CRSHIST.STUDENT_GU = STUDENT.STUDENT_GU
AND COURSE.COURSE_ID = CRSHIST.COURSE_ID
	
WHERE
	[RevYear].[SCHOOL_YEAR] IN ('2015')
	AND [RevYear].[EXTENSION] = 'R'
	and  SUBJECT_AREA_1 <> 'NOC'
	--and SIS_NUMBER = 100004712	
) 
--SELECT * FROM DUAL_CREDIT
, DUAL_CREDIT1
AS
(
SELECT 
	SIS_NUMBER,
	DUAL_CREDIT,
		MAX(CASE WHEN D.RN = 1 AND DUAL_CREDIT = 'Y' THEN CREDIT_COMPLETED END) AS DUAL_CREDIT1,
		MAX(CASE WHEN D.RN = 2 AND DUAL_CREDIT = 'Y'THEN CREDIT_COMPLETED END) as DUAL_CREDIT2,
		MAX(CASE WHEN D.RN = 3 AND DUAL_CREDIT = 'Y'THEN CREDIT_COMPLETED END) AS DUAL_CREDIT3,
		MAX(CASE WHEN D.RN = 4 AND DUAL_CREDIT = 'Y'THEN CREDIT_COMPLETED END) AS DUAL_CREDIT4,
		MAX(CASE WHEN D.RN = 5 AND DUAL_CREDIT = 'Y'THEN CREDIT_COMPLETED END) AS DUAL_CREDIT5,
		MAX(CASE WHEN D.RN = 6 AND DUAL_CREDIT = 'Y'THEN CREDIT_COMPLETED END) AS DUAL_CREDIT6,
		MAX(CASE WHEN D.RN = 7 AND DUAL_CREDIT = 'Y'THEN CREDIT_COMPLETED END) AS DUAL_CREDIT7,
		MAX(CASE WHEN D.RN = 8 AND DUAL_CREDIT = 'Y'THEN CREDIT_COMPLETED END) AS DUAL_CREDIT8,
		MAX(CASE WHEN D.RN = 9 AND DUAL_CREDIT = 'Y'THEN CREDIT_COMPLETED END) AS DUAL_CREDIT9


FROM
	 DUAL_CREDIT D
LEFT JOIN
	STUDENTCTE1 S
ON
	D.SIS_NUMBER = S.[APS ID]
GROUP BY SIS_NUMBER, DUAL_CREDIT
)
SELECT * FROM DUAL_CREDIT1 
ORDER BY SIS_NUMBER, DUAL_CREDIT DESC
	

,SEMESTER_GRADE
AS
(
SELECT
	SIS_NUMBER,
	AP_INDICATOR,
	MARK,
	DUAL_CREDIT,
	[DUAL CREDIT COMPLETED],
	IB_INDICATOR,
	TERM_CODE
  FROM
       (
       SELECT
		  RN,
          SIS_NUMBER,
		  AP_INDICATOR,
		  DUAL_CREDIT,
		  [DUAL CREDIT COMPLETED],
		  IB_INDICATOR,
		  MARK
       FROM
		Test
       ) AS ST
       
	  GROUP BY rn, SIS_NUMBER, AP_INDICATOR, MARK, DUAL_CREDIT, [DUAL CREDIT COMPLETED], IB_INDICATOR
)
SELECT * FROM SEMESTER_GRADE
--SELECT * FROM SEMESTER_GRADE
,RESULTSCTE
as
(
SELECT
    row_number() over (partition by [APS ID],[STATE ID] order by [STATE ID]) as Rownum,
	S.[SURVEY SCHOOL YEAR],
	S.[APS ID],
	S.[STATE ID],
	S.GENDER,
	S.RACE_1,
	S.RACE_2,
	S.RACE_3,
	S.RACE_4,
	S.RACE_5,
	S.RESOLVED_RACE,
	S.[PRIMARY DISABILITY DESCRIPTION],
	S.[ELL STATUS],
	S.EXIT_DATE,
	S.LUNCH_STATUS,
	S.[STUDENT GRADE LEVEL 2015],
	ISNULL(G.AP_INDICATOR, 'N') AS AP_INDICATOR,
	ISNULL(G.S1MARK, '') AS S1_MARK,
	ISNULL(G.S2MARK,'') AS S2_MARK,
	isnull(G.DUAL_CREDIT, 'N') as DUAL_CREDIT,
	G.[DUAL CREDIT COMPLETED],
	ISNULL(G.IB_INDICATOR, 'N') AS IB_INDICATOR
FROM 
	STUDENTCTE S
LEFT  JOIN
	SEMESTER_GRADE G
ON
	S.[APS ID] = G.SIS_NUMBER
)
select
	*
from
	ResultsCTE
WHERE 1 = 1
and	ROWNUM = 1
AND [APS ID] IS NOT NULL
and dual_credit = 'Y'

	


