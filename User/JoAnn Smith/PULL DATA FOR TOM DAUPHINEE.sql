/*
Pull data for for Tom Dauphinee


Requesting APS administrative data end of year 2016-17 (baseline)
Refresh at intervals indicated below in school years 2017-18, 2018-19, 2019-20, 2020-21:

I AM REALLY NOT SURE WHAT THIS IS OR WHERE IT COMES FROM:
•         Teacher ratings from the Walkthrough Assessment (Differentiated Instruction items; end of year). Ratings from consenting teachers (UNM-CEPR and Lanny Leyba will provide list)


*/
--GUIDS
--roosevelt 8D50ABCA-A562-481C-B54F-969A5A6B3999
--sandia base CFC6326C-D678-4338-AA70-21C5ADC4753E
--san antonito C2362AA6-6CA4-4CA3-882F-4EF5B7AC3E30

--Sandia Base Elementary School
--San Antonito Elementary School
--Roosevelt Middle School

--***********************************************************

/*for the following procedure, replace the GUID for the school with one of the
above and replace the school name with the corresponding GUID 
*/

BEGIN

declare @SCHOOL_GU UNIQUEIDENTIFIER = 'CFC6326C-D678-4338-AA70-21C5ADC4753E'
declare @AsOfDate datetime2 = '2017-05-25'
declare @FallAsOfDate datetime2 = '2016-12-23'
declare @YearEndDate datetime2 = '2017-05-25'
declare @SchoolName nvarchar(50) = 'Sandia Base Elementary School'
declare @SchoolYear nvarchar(4) = '2016'

	----IF @SCHOOL_GU = 'CFC6326C-D678-4338-AA70-21C5ADC4753E' GOTO Sandia_Antonito_Branch
	----IF @SCHOOL_GU = '8D50ABCA-A562-481C-B54F-969A5A6B3999' GOTO Roosevelt_Branch
	----IF @SCHOOL_GU = 'C2362AA6-6CA4-4CA3-882F-4EF5B7AC3E30' GOTO Sandia_Antonito_Branch

/*
Sandia Base ES
•         Scale scores and performance levels from interim assessments (3 sets per year grades K-6; 
		  PARCC and IReady (Fall Winter Spring)
•         Unexcused absences end of fall semester and end of year (grades K-5)
•         Scale scores and performance levels PARCC assessment in math on end of year (grades 3-8)

San Antonito ES
•         Scale scores and performance levels from interim assessments (3 sets per year grades K-5, end of fall semester and end of year), 
•         Unexcused absences end of fall semester and end of year (grades K-5), 
•         Scale scores and performance levels PARCC assessment in math on end of year (grades 3-5).


	taqkes 21 minutes to run
	From Tom Dauphinee meeting on 11/2/2017
	wants to know kids who were in the original baseline but left so that would be next pull
	use 40-day for time period and end of year
	needs data for both Iready and PARCC
	demographics --grade level, gender, ethnicity, race, ELL, SPED, military family status

*/
--declare @AsOfDate datetime2 = '2017-05-25'
--declare @SCHOOL_GU UNIQUEIDENTIFIER = 'C2362AA6-6CA4-4CA3-882F-4EF5B7AC3E30'


Sandia_Antonito_Branch:
; WITH STUDENTCTE 
AS
(
SELECT 
row_number() over (partition by bs.SIS_NUMBER order by bs.SIS_NUMBER) as rn,
	sd.ORGANIZATION_NAME AS SCHOOL_NAME,
	sch.SCHOOL_CODE,
	BS.SIS_NUMBER
	,BS.STUDENT_GU
	,LU1.VALUE_DESCRIPTION AS GRADE
	,BS.GENDER
	,BS.RACE_1
	,BS.RACE_2
	,BS.RACE_3
	,BS.RACE_4
	,BS.RACE_5
	,BS.RESOLVED_RACE
	,BS.HISPANIC_INDICATOR
	,CASE	
		WHEN SPED_STATUS = 'Y' and GIFTED_STATUS = 'Y' 
			THEN 'N'
		WHEN SPED_STATUS = 'N' AND GIFTED_STATUS = 'N'
			THEN 'N'
		WHEN SPED_STATUS = 'Y' AND GIFTED_STATUS = 'N'
			THEN 'Y' 
		ELSE
			'N'

	END AS SPED_STATUS
	,bs.ELL_STATUS
	,ISNULL(LU.VALUE_DESCRIPTION, '') AS PRIMARY_DISABILITY
	,isnull(up.ACTIVE_MILITARY, 'N') as ACTIVE_MILITARY

FROM
	APS.BasicStudentWithMoreInfo AS BS
left join
	rev.epc_stu_parent sp
on
	bs.STUDENT_GU = sp.STUDENT_GU
left join
	rev.epc_parent p
on
	p.parent_gu = sp.PARENT_GU
left join
	rev.ud_parent up
on
	up.PARENT_GU = sp.PARENT_GU
LEFT JOIN 
	APS.LookupTable('K12.SpecialEd','DISABILITY_CODE') AS LU
ON
	LU.VALUE_CODE = BS.PRIMARY_DISABILITY_CODE	
left JOIN 
	rev.EPC_STU_PGM_ELL e
ON
	E.STUDENT_GU = BS.STUDENT_GU	
left join
	aps.ScheduleDetailsAsOf(@AsOfDate) sd
on
	sd.SIS_NUMBER = bs.SIS_NUMBER
inner join
	rev.EPC_CRS C
on
	sd.COURSE_GU = c.COURSE_GU
inner join
	rev.epc_sch sch
on
	sch.ORGANIZATION_GU = @SCHOOL_GU
left join
	aps.LookupTable('K12', 'Grade') LU1
on
	SD.ENROLLMENT_GRADE_LEVEL = LU1.VALUE_CODE
WHERE sd.ENROLLMENT_GRADE_LEVEL IN ('100', '110', '120', '130', '140', '150')
and
	sd.ORGANIZATION_GU = @SCHOOL_GU
)
--SELECT * FROM STUDENTCTE where rn = 1


/*
it's 2 or more periods for half day and full day,
the difference is full day is 50% or more of their
scheduled of classes for that day

so if they have 7 or 8 classes 2 is only half day, but if they only have 2 or 3 or 4 classes,
the 2 periods is full day

*/
,TOTAL_ABSENCES_END_FALL
AS
(
SELECT
	ROW_NUMBER() OVER (PARTITION BY SA.[SIS Number] ORDER BY SA.[SIS Number]) AS RN,
	 SA.[SIS Number] as [Student APS ID],
	 ISNULL(SA.[Total Unexcused],0)  as  TOTAL_UNEXCUSED_FALL,
	 SC.ORGANIZATION_GU,
	 SC.SCHOOL_CODE
	 
FROM 
	STUDENTCTE S
LEFT JOIN
	aps.AttendanceExcUnexTotalsAsOf(@FallAsOfDate) sa
ON
	SA.[SIS Number] = S.SIS_NUMBER	
INNER JOIN
	REV.EPC_SCH SC
ON
	SA.[School Code] = SC.SCHOOL_CODE
AND
	SC.ORGANIZATION_GU = @SCHOOL_GU
)
--SELECT * FROM TOTAL_ABSENCES_END_FALL
,TOTAL_ABSENCES_END_FALL_2
AS
(
SELECT
	*
FROM
	TOTAL_ABSENCES_END_FALL F
WHERE
	RN = 1
)

--select * from TOTAL_ABSENCES_END_FALL_2

,TOTAL_ABSENCES_END_YEAR
AS
(
SELECT
	ROW_NUMBER() OVER (PARTITION BY SA.[SIS Number] ORDER BY SA.[SIS Number]) AS RN,
	 SA.[SIS Number] as [Student APS ID],
	 ISNULL(SA.[Total Unexcused],0)  as  TOTAL_UNEXCUSED_YEAR,
	 SC.ORGANIZATION_GU,
	 SC.SCHOOL_CODE
	 
FROM 
	STUDENTCTE S
LEFT JOIN
	aps.AttendanceExcUnexTotalsAsOf(@AsOfDate) sa
ON
	SA.[SIS Number] = S.SIS_NUMBER	
INNER JOIN
	REV.EPC_SCH SC
ON
	SA.[School Code] = SC.SCHOOL_CODE
AND
	SC.ORGANIZATION_GU = @SCHOOL_GU
)
,TOTAL_ABSENCES_END_YEAR_2
AS
(
SELECT
	*
FROM
	TOTAL_ABSENCES_END_YEAR
WHERE
	RN = 1
)
--select * from TOTAL_ABSENCES_END_YEAR_2

,PARCC_ASSESSMENTS
AS
(
SELECT
	P.[Student APS ID],
	E.GRADE,
	P.SUBJECT,
	P.PERF_LEVEL,
	P.SCALED_SCORE
FROM
	DBO.PARCC_ELA_MATH_2016 P
INNER JOIN
	APS.BASICSTUDENT BS
ON
	P.[STUDENT APS ID] = BS.SIS_NUMBER
INNER JOIN
	APS.PRIMARYENROLLMENTSASOF(@YearEndDate) E
ON
	E.STUDENT_GU = BS.STUDENT_GU

WHERE
	E.GRADE IN ('90', '100', '110', '120', '130', '140', '150')
and
	subject = 'math'
)
--SELECT * FROM PARCC_ASSESSMENTS
,IREADY_ASSESSMENT_FALL
AS
(
SELECT
	m.SCHOOL_YEAR,
	m.TEST_ADMIN_PERIOD,
	m.TEST_DATE,
	m.STUDENT_APS_ID,
	m.GRADE_LEVEL,
	m.PROFICIENCY_LEVEL,
	m.TEST_SCORE_VALUE,
	s.ORGANIZATION_NAME

FROM
	DBO.IREADY_FALL_MATH_SCORES_2016 M
INNER JOIN
	APS.SCHEDULEASOF(@ASoFDATE) s
ON
	s.SIS_NUMBER = M.STUDENT_APS_ID
where 
	ORGANIZATION_NAME = @SchoolName
)

,IREADY_ASSESSMENT_WINTER
AS
(
SELECT
	m.SCHOOL_YEAR,
	m.TEST_ADMIN_PERIOD,
	m.TEST_DATE,
	m.STUDENT_APS_ID,
	m.GRADE_LEVEL,
	m.PROFICIENCY_LEVEL,
	m.TEST_SCORE_VALUE,
	s.ORGANIZATION_NAME

FROM
	DBO.IREADY_WINTER_MATH_SCORES_2016 M
INNER JOIN
	APS.SCHEDULEASOF(@AsOfDate) s
ON
	s.SIS_NUMBER = M.STUDENT_APS_ID
where 
	ORGANIZATION_NAME = @SchoolName
)

,IREADY_ASSESSMENT_SPRING
AS
(
SELECT
	m.SCHOOL_YEAR,
	m.TEST_ADMIN_PERIOD,
	m.TEST_DATE,
	m.STUDENT_APS_ID,
	m.GRADE_LEVEL,
	m.PROFICIENCY_LEVEL,
	m.TEST_SCORE_VALUE,
	s.ORGANIZATION_NAME

FROM
	DBO.IREADY_SPRING_MATH_SCORES_2016 M
INNER JOIN
	APS.SCHEDULEASOF(@AsOfDate) s
ON
	s.SIS_NUMBER = M.STUDENT_APS_ID
where 
	ORGANIZATION_NAME = @SchoolName
)
,RESULTSCTE
AS
(
SELECT
	ROW_NUMBER() OVER (PARTITION BY s.sis_number ORDER BY s.sis_number) AS ROWNUM,
	S.SIS_NUMBER,
	S.SCHOOL_NAME,
	ISNULL(F2.SCHOOL_CODE, '') AS SCHOOL_CODE,
	S.GENDER,
	S.RESOLVED_RACE,
	S.HISPANIC_INDICATOR,
	S.SPED_STATUS,
	S.ELL_STATUS,
	S.GRADE,
	ISNULL(S.ACTIVE_MILITARY, '') AS ACTIVE_MILITARY,
	ISNULL(p.PERF_LEVEL, '') AS PARCC_PERF_LEVEL,
	ISNULL(p.SCALED_SCORE, 0) AS PARCC_SCALED_SCORE,
	ISNull(p.SUBJECT, '') as PARCC_SUBJECT,
	ISNULL(F3.TEST_ADMIN_PERIOD, '') AS IREADY_ADMIN_PERIOD_1,
	CASE WHEN F3.TEST_DATE IS NULL THEN '' ELSE CONVERT(varchar(50), F3.TEST_DATE, 101) END AS IREADY_TEST_DATE_1,
	ISNULL(F3.PROFICIENCY_LEVEL, '') AS IREADY_PROFICIENCY_LEVEL_1,
	isnull(f3.TEST_SCORE_VALUE, 0) as IREADY_TEST_SCORE_1,
	ISNULL(W.TEST_ADMIN_PERIOD,'') AS IREADY_ADMIN_PERIOD_2,
	CASE WHEN W.TEST_DATE IS NULL THEN '' ELSE CONVERT(varchar(50), W.TEST_DATE, 101) END AS IREADY_TEST_DATE_2,
	isnull(W.PROFICIENCY_LEVEL, '') AS IREADY_PROFICIENCY_LEVEL_2,
	ISNULL(W.TEST_SCORE_VALUE, 0) AS IREADY_TEST_SCORE_2,
	isnull(SP.TEST_ADMIN_PERIOD, '') AS IREADY_ADMIN_PERIOD_3,
	CASE WHEN SP.TEST_DATE IS NULL THEN '' ELSE CONVERT(varchar(50), SP.TEST_DATE, 101) END AS IREADY_TEST_DATE_3,
	isnull(SP.PROFICIENCY_LEVEL, '') AS IREADY_PROFICIENCY_LEVEL_3,
	ISNULL(SP.TEST_SCORE_VALUE, 0) AS IREADY_TEST_SCORE_3,
	ISNULL(F2.TOTAL_UNEXCUSED_FALL,0) AS TOTAL_UNEXCUSED_FALL,
	ISNULL(Y2.TOTAL_UNEXCUSED_YEAR,0) AS TOTAL_UNEXCUSED_YEAR

FROM
	STUDENTCTE S
LEFT JOIN
	TOTAL_ABSENCES_END_FALL_2 F2
ON
	F2.[Student APS ID] = S.SIS_NUMBER
LEFT JOIN
	TOTAL_ABSENCES_END_YEAR_2 Y2
ON
	Y2.[Student APS ID] = S.SIS_NUMBER
LEFT JOIN
	PARCC_ASSESSMENTS P
ON
	P.[STUDENT APS ID] = S.SIS_NUMBER	
LEFT JOIN
	IREADY_ASSESSMENT_FALL F3
ON
	F3.STUDENT_APS_ID = S.SIS_NUMBER
LEFT JOIN
	IREADY_ASSESSMENT_WINTER W
ON
	W.STUDENT_APS_ID = S.SIS_NUMBER
LEFT JOIN
	IREADY_SPRING_MATH_SCORES_2016 SP
ON
	SP.STUDENT_APS_ID = S.SIS_NUMBER

)
SELECT * FROM RESULTSCTE WHERE ROWNUM = 1
order by SIS_NUMBER
-------------------------------------------------------------------------------------------------------------------------------------------

/*
TAKES 19 MINUTES TO RUN
Roosevelt MS
•         Scale scores and performance levels from interim assessments (3 sets per year grades 6-8, end of fall semester and end of year),
•         Unexcused absences end of fall semester and end of year (grades 6-8), 
•         Grades in core courses in math and science end of fall semester and end of year (grade 6), 
•         Scale scores and performance levels PARCC assessment in math on end of year (grades 6-8).

*/
Roosevelt_Branch:

; WITH STUDENTCTE 
AS
(
SELECT 
row_number() over (partition by bs.SIS_NUMBER order by bs.SIS_NUMBER) as rn,
	sd.ORGANIZATION_NAME AS SCHOOL_NAME,
	sch.SCHOOL_CODE,
	BS.SIS_NUMBER
	,BS.STUDENT_GU
	,LU1.VALUE_DESCRIPTION AS GRADE
	,BS.GENDER
	,BS.RACE_1
	,BS.RACE_2
	,BS.RACE_3
	,BS.RACE_4
	,BS.RACE_5
	,BS.RESOLVED_RACE
	,BS.HISPANIC_INDICATOR
	,CASE	
		WHEN SPED_STATUS = 'Y' and GIFTED_STATUS = 'Y' 
			THEN 'N'
		WHEN SPED_STATUS = 'N' AND GIFTED_STATUS = 'N'
			THEN 'N'
		WHEN SPED_STATUS = 'Y' AND GIFTED_STATUS = 'N'
			THEN 'Y' 
		ELSE
			'N'
	END AS SPED_STATUS
	,bs.ELL_STATUS
	,ISNULL(LU.VALUE_DESCRIPTION, '') AS PRIMARY_DISABILITY
	,isnull(up.ACTIVE_MILITARY, 'N') as ACTIVE_MILITARY

FROM
	APS.BasicStudentWithMoreInfo AS BS
left join
	rev.epc_stu_parent sp
on
	bs.STUDENT_GU = sp.STUDENT_GU
left join
	rev.epc_parent p
on
	p.parent_gu = sp.PARENT_GU
left join
	rev.ud_parent up
on
	up.PARENT_GU = sp.PARENT_GU
LEFT JOIN 
	APS.LookupTable('K12.SpecialEd','DISABILITY_CODE') AS LU
ON
	LU.VALUE_CODE = BS.PRIMARY_DISABILITY_CODE	
left JOIN 
	rev.EPC_STU_PGM_ELL e
ON
	E.STUDENT_GU = BS.STUDENT_GU
left join
	aps.ScheduleDetailsAsOf(@AsOfDate) sd
on
	sd.SIS_NUMBER = bs.SIS_NUMBER
inner join
	rev.EPC_CRS C
on
	sd.COURSE_GU = c.COURSE_GU
inner join
	rev.epc_sch sch
on
	sch.ORGANIZATION_GU = @SCHOOL_GU
left join
	aps.LookupTable('K12', 'Grade') LU1
on
	SD.ENROLLMENT_GRADE_LEVEL = LU1.VALUE_CODE

WHERE sd.ENROLLMENT_GRADE_LEVEL IN ('160', '170', '180')
and
	sd.ORGANIZATION_GU = @SCHOOL_GU
)
--SELECT * FROM STUDENTCTE 

,CORE_MATH_END_OF_FALL
AS
(
SELECT
	ROW_NUMBER() OVER(PARTITION BY [SIS_NUMBER], H.COURSE_TITLE, H.TERM_CODE ORDER BY [SIS_NUMBER], term_code desc) AS RN,
	S.SIS_NUMBER,
	h.COURSE_TITLE AS FALL_MATH_COURSE_TITLE,
	H.TERM_CODE,
	h.MARK AS FALL_MATH_GRADE
from
	STUDENTCTE S
LEFT JOIN
	REV.EPC_STU_CRS_HIS H
ON
	S.STUDENT_GU = H.STUDENT_GU
INNER JOIN
	REV.EPC_CRS C
ON
	C.COURSE_GU = H.COURSE_GU
where 1 = 1		
AND
	C.DEPARTMENT = 'MATH'
AND
	H.SCHOOL_YEAR = @SchoolYear
AND	
	s.grade in ('06', '07', '08')
AND
	TERM_CODE = 'S1'	
)
,CORE_MATH_END_OF_FALL_2
AS
(
SELECT * FROM CORE_MATH_END_OF_FALL WHERE RN = 1
)

,CORE_MATH_END_OF_YEAR
AS
(
SELECT
	ROW_NUMBER() OVER(PARTITION BY [SIS_NUMBER], H.COURSE_TITLE, H.TERM_CODE ORDER BY [SIS_NUMBER], term_code desc) AS RN,
	S.SIS_NUMBER,
	h.COURSE_TITLE AS EOY_MATH_COURSE_TITLE,
	H.TERM_CODE,
	h.MARK AS EOY_MATH_GRADE
from
	STUDENTCTE S
LEFT JOIN
	REV.EPC_STU_CRS_HIS H
ON
	S.STUDENT_GU = H.STUDENT_GU
INNER JOIN
	REV.EPC_CRS C
ON
	C.COURSE_GU = H.COURSE_GU
where 1 = 1		
AND
	C.DEPARTMENT = 'MATH'
AND
	H.SCHOOL_YEAR = @SchoolYear
AND	
	s.GRADE IN ('06', '07', '08')
AND
	TERM_CODE = 'S2'	
)
,CORE_MATH_END_OF_YEAR_2
AS
(
SELECT * FROM CORE_MATH_END_OF_YEAR WHERE RN = 1
)
--SELECT * FROM CORE_MATH_END_OF_YEAR_2

,CORE_SCIENCE_END_OF_FALL
AS
(
SELECT
	ROW_NUMBER() OVER(PARTITION BY [SIS_NUMBER], H.COURSE_TITLE, H.TERM_CODE ORDER BY [SIS_NUMBER], term_code desc) AS RN,
	s.SIS_NUMBER,
	h.course_title AS FALL_SCI_COURSE_TITLE,
	H.TERM_CODE,
	h.MARK AS [FALL_SCIENCE_GRADE]
from
	STUDENTCTE S
LEFT JOIN
	REV.EPC_STU_CRS_HIS H
ON
	S.STUDENT_GU = H.STUDENT_GU
INNER JOIN
	REV.EPC_CRS C
ON
	C.COURSE_GU = H.COURSE_GU
where 1 = 1		
AND
	C.DEPARTMENT = 'SCI'
AND
	H.SCHOOL_YEAR = @SchoolYear
AND	
	s.grade IN ('06', '07', '08')
AND
	TERM_CODE = 'S1'

)
,CORE_SCIENCE_END_OF_FALL_2
AS
(
SELECT * FROM CORE_SCIENCE_END_OF_FALL WHERE RN =1	
)

--=============================================

,CORE_SCIENCE_END_OF_YEAR
AS
(
SELECT
	ROW_NUMBER() OVER(PARTITION BY [SIS_NUMBER], H.COURSE_TITLE, H.TERM_CODE ORDER BY [SIS_NUMBER], term_code desc) AS RN,
	s.SIS_NUMBER,
	h.course_title AS EOY_SCI_COURSE_TITLE,
	H.TERM_CODE,
	h.MARK AS [EOY_SCIENCE_GRADE]
from
	STUDENTCTE S
LEFT JOIN
	REV.EPC_STU_CRS_HIS H
ON
	S.STUDENT_GU = H.STUDENT_GU
INNER JOIN
	REV.EPC_CRS C
ON
	C.COURSE_GU = H.COURSE_GU
where 1 = 1		
AND
	C.DEPARTMENT = 'SCI'
AND
	H.SCHOOL_YEAR = @SchoolYear
AND	
	s.grade IN ('06', '07', '08')
AND
	TERM_CODE = 'S2'

)
,CORE_SCIENCE_END_OF_YEAR_2
AS
(
SELECT * FROM CORE_SCIENCE_END_OF_YEAR WHERE RN =1	
)



/*
it's 2 or more periods for half day and full day,
the difference is full day is 50% or more of their
scheduled of classes for that day

so if they have 7 or 8 classes 2 is only half day, but if they only have 2 or 3 or 4 classes,
the 2 periods is full day

*/
,TOTAL_ABSENCES_END_FALL
AS
(
SELECT
	ROW_NUMBER() OVER (PARTITION BY SA.[SIS Number] ORDER BY SA.[SIS Number]) AS RN,
	 SA.[SIS Number] as SIS_NUMBER,
	 ISNULL(SA.[Total Unexcused],0)  as  TOTAL_UNEXCUSED_FALL,
	 SC.ORGANIZATION_GU,
	 SC.SCHOOL_CODE
	 
FROM 
	STUDENTCTE S
LEFT JOIN
	aps.AttendanceExcUnexTotalsAsOf(@FallAsOfDate) sa
ON
	SA.[SIS Number] = S.SIS_NUMBER	
INNER JOIN
	REV.EPC_SCH SC
ON
	SA.[School Code] = SC.SCHOOL_CODE
AND
	SC.ORGANIZATION_GU = @SCHOOL_GU

)
--SELECT * FROM TOTAL_ABSENCES_END_FALL
,TOTAL_ABSENCES_END_FALL_2
AS
(
SELECT
	*
FROM
	TOTAL_ABSENCES_END_FALL F
WHERE
	RN = 1
)

--select * from TOTAL_ABSENCES_END_FALL_2

,TOTAL_ABSENCES_END_YEAR
AS
(
SELECT
	ROW_NUMBER() OVER (PARTITION BY SA.[SIS Number] ORDER BY SA.[SIS Number]) AS RN,
	 SA.[SIS Number] as SIS_NUMBER,
	 ISNULL(SA.[Total Unexcused],0)  as  TOTAL_UNEXCUSED_YEAR,
	 SC.ORGANIZATION_GU,
	 SC.SCHOOL_CODE
	 
FROM 
	STUDENTCTE S
LEFT JOIN
	aps.AttendanceExcUnexTotalsAsOf(@YearEndDate) sa
ON
	SA.[SIS Number] = S.SIS_NUMBER	
INNER JOIN
	REV.EPC_SCH SC
ON
	SA.[School Code] = SC.SCHOOL_CODE
AND
	SC.ORGANIZATION_GU = @SCHOOL_GU
)
,TOTAL_ABSENCES_END_YEAR_2
AS
(
SELECT
	*
FROM
	TOTAL_ABSENCES_END_YEAR
WHERE
	RN = 1
)
--select * from TOTAL_ABSENCES_END_YEAR_2

,PARCC_ASSESSMENTS
AS
(
SELECT
	P.[Student APS ID],
	E.GRADE,
	P.SUBJECT,
	P.PERF_LEVEL,
	P.SCALED_SCORE
FROM
	DBO.PARCC_ELA_MATH_2016 P
INNER JOIN
	APS.BASICSTUDENT BS
ON
	P.[STUDENT APS ID] = BS.SIS_NUMBER
INNER JOIN
	APS.PRIMARYENROLLMENTSASOF(@AsOfDate) E
ON
	E.STUDENT_GU = BS.STUDENT_GU

WHERE
	E.GRADE IN ('160', '170', '180')
AND
	SUBJECT = 'MATH'
)
--SELECT * FROM PARCC_ASSESSMENTS

,IREADY_ASSESSMENT_FALL
AS
(
SELECT
	m.SCHOOL_YEAR,
	m.TEST_ADMIN_PERIOD,
	m.TEST_DATE,
	m.STUDENT_APS_ID,
	m.GRADE_LEVEL,
	m.PROFICIENCY_LEVEL,
	m.TEST_SCORE_VALUE,
	s.ORGANIZATION_NAME

FROM
	DBO.IREADY_FALL_MATH_SCORES_2016 M
INNER JOIN
	APS.SCHEDULEASOF(@ASoFDATE) s
ON
	s.SIS_NUMBER = M.STUDENT_APS_ID
where 
	ORGANIZATION_NAME = @SchoolName
)

,IREADY_ASSESSMENT_WINTER
AS
(
SELECT
	m.SCHOOL_YEAR,
	m.TEST_ADMIN_PERIOD,
	m.TEST_DATE,
	m.STUDENT_APS_ID,
	m.GRADE_LEVEL,
	m.PROFICIENCY_LEVEL,
	m.TEST_SCORE_VALUE,
	s.ORGANIZATION_NAME

FROM
	DBO.IREADY_WINTER_MATH_SCORES_2016 M
INNER JOIN
	APS.SCHEDULEASOF(@AsOfDate) s
ON
	s.SIS_NUMBER = M.STUDENT_APS_ID
where 
	ORGANIZATION_NAME = @SchoolName
)

,IREADY_ASSESSMENT_SPRING
AS
(
SELECT
	m.SCHOOL_YEAR,
	m.TEST_ADMIN_PERIOD,
	m.TEST_DATE,
	m.STUDENT_APS_ID,
	m.GRADE_LEVEL,
	m.PROFICIENCY_LEVEL,
	m.TEST_SCORE_VALUE,
	s.ORGANIZATION_NAME

FROM
	DBO.IREADY_SPRING_MATH_SCORES_2016 M
INNER JOIN
	APS.SCHEDULEASOF(@AsOfDate) s
ON
	s.SIS_NUMBER = M.STUDENT_APS_ID
where 
	ORGANIZATION_NAME = @SchoolName
)

,RESULTSCTE
AS
(
SELECT

	ROW_NUMBER() OVER (PARTITION BY s.sis_number ORDER BY s.sis_number) AS ROWNUM,
	S.SIS_NUMBER,
	S.SCHOOL_NAME,
	ISNULL(F2.SCHOOL_CODE, '') AS SCHOOL_CODE,
	S.GENDER,
	S.RESOLVED_RACE,
	S.HISPANIC_INDICATOR,
	S.SPED_STATUS,
	S.ELL_STATUS,
	S.GRADE,
	ISNULL(S.ACTIVE_MILITARY, '') AS ACTIVE_MILITARY,
	ISNULL(p.PERF_LEVEL, '') AS PARCC_PERF_LEVEL,
	ISNULL(p.SCALED_SCORE, 0) AS PARCC_SCALED_SCORE,
	ISNull(p.SUBJECT, '') as PARCC_SUBJECT,
	ISNULL(F3.TEST_ADMIN_PERIOD, '') AS IREADY_ADMIN_PERIOD_1,
	CASE WHEN F3.TEST_DATE IS NULL THEN '' ELSE CONVERT(varchar(50), F3.TEST_DATE, 101) END AS IREADY_TEST_DATE_1,
	ISNULL(F3.PROFICIENCY_LEVEL, '') AS IREADY_PROFICIENCY_LEVEL_1,
	isnull(f3.TEST_SCORE_VALUE, 0) as IREADY_TEST_SCORE_1,
	ISNULL(W.TEST_ADMIN_PERIOD,'') AS IREADY_ADMIN_PERIOD_2,
	CASE WHEN W.TEST_DATE IS NULL THEN '' ELSE CONVERT(varchar(50), W.TEST_DATE, 101) END AS IREADY_TEST_DATE_2,
	isnull(W.PROFICIENCY_LEVEL, '') AS IREADY_PROFICIENCY_LEVEL_2,
	ISNULL(W.TEST_SCORE_VALUE, 0) AS IREADY_TEST_SCORE_2,
	isnull(SP.TEST_ADMIN_PERIOD, '') AS IREADY_ADMIN_PERIOD_3,
	CASE WHEN SP.TEST_DATE IS NULL THEN '' ELSE CONVERT(varchar(50), SP.TEST_DATE, 101) END AS IREADY_TEST_DATE_3,
	isnull(SP.PROFICIENCY_LEVEL, '') AS IREADY_PROFICIENCY_LEVEL_3,
	ISNULL(SP.TEST_SCORE_VALUE, 0) AS IREADY_TEST_SCORE_3,
	ISNULL(F2.TOTAL_UNEXCUSED_FALL,0) AS TOTAL_UNEXCUSED_FALL,
	ISNULL(Y2.TOTAL_UNEXCUSED_YEAR,0) AS TOTAL_UNEXCUSED_YEAR

FROM
	STUDENTCTE S
LEFT JOIN
	TOTAL_ABSENCES_END_FALL_2 F2
ON
	F2.SIS_NUMBER = S.SIS_NUMBER
LEFT JOIN
	TOTAL_ABSENCES_END_YEAR_2 Y2
ON
	Y2.SIS_NUMBER = S.SIS_NUMBER
LEFT JOIN
	PARCC_ASSESSMENTS P
ON
	P.[STUDENT APS ID] = S.SIS_NUMBER	
LEFT JOIN
	IREADY_ASSESSMENT_FALL F3
ON
	F3.STUDENT_APS_ID = S.SIS_NUMBER
LEFT JOIN
	IREADY_ASSESSMENT_WINTER W
ON
	W.STUDENT_APS_ID = S.SIS_NUMBER
LEFT JOIN
	IREADY_SPRING_MATH_SCORES_2016 SP
ON
	SP.STUDENT_APS_ID = S.SIS_NUMBER

)


SELECT * FROM RESULTSCTE WHERE ROWNUM = 1
order by SIS_NUMBER


end
