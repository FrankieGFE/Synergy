/*
Pull specific information for APS Graduates furnished by Brenda Martinez Papponi

Written by:		JoAnn Smith
Date Written:	7/27/2017

This script will pull Student Info (ELL, Gender, Gifted, etc.) for a student
in the file provided by Brenda.  GPA is also included as well as test results
from a file generated in Versafit/K12INTEL (DBO.ALLTESTRESULTS).

This command creates a file from the .csv file provided by Brenda.
--EXECUTE AS LOGIN='QueryFileUser'
--GO


--select
--	*
--into
--	dbo.APSGrads	 
--from OPENROWSET (
--		'Microsoft.ACE.OLEDB.12.0', 
--		'Text;Database=\\SYNTEMPSSIS\Files\TempQuery;',
--		'SELECT * from APSGraduates.csv'
--                ) AS [T1]

--SELECT * FROM DBO.APSGrads

Following is the meat of the script.
*/

;with StudentCTE
as
(
select
	G.ID,
	G.FIRST_NAME,
	G.LAST_NAME,
	G.HIGH_SCHOOL_CODE,
	G.HIGH_SCHOOL_GRAD_DATE,
	bs.GENDER,
	bs.RESOLVED_RACE,
	bs.SPED_STATUS,
	bs.GIFTED_STATUS,
	isnull(bs.LUNCH_STATUS, ' ') as LUNCH_STATUS,
	bs.ELL_STATUS
from
	DBO.APSGrads g
left join
	rev.epc_stu s
on
	cast(g.ID as nvarchar) = s.SIS_NUMBER
left join
	aps.BasicStudentWithMoreInfo BS
on
	g.ID = BS.SIS_NUMBER
)
--select * from StudentCTE


,GPA
AS
(
SELECT 
	s.ID
	,max(CASE WHEN SCHOOL_YEAR = 2008 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2008
	,MAX(CASE WHEN SCHOOL_YEAR = 2008 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2008

	,max(CASE WHEN SCHOOL_YEAR = 2009 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2009
	,MAX(CASE WHEN SCHOOL_YEAR = 2009 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2009

	,max(CASE WHEN SCHOOL_YEAR = 2010 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2010
	,MAX(CASE WHEN SCHOOL_YEAR = 2010 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2010

	,max(CASE WHEN SCHOOL_YEAR = 2011 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2011
	,MAX(CASE WHEN SCHOOL_YEAR = 2011 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2011

	,max(CASE WHEN SCHOOL_YEAR = 2012 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2012
	,MAX(CASE WHEN SCHOOL_YEAR = 2012 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2012

	,max(CASE WHEN SCHOOL_YEAR = 2013 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2013
	,MAX(CASE WHEN SCHOOL_YEAR = 2013 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2013

	,max(CASE WHEN SCHOOL_YEAR = 2014 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2014
	,MAX(CASE WHEN SCHOOL_YEAR = 2014 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2014

	,max(CASE WHEN SCHOOL_YEAR = 2015 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2015
	,MAX(CASE WHEN SCHOOL_YEAR = 2015 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2015

	,max(CASE WHEN SCHOOL_YEAR = 2016 THEN [HS Cum Flat] ELSE 0 END) AS GPA_HS_CUM_FLAT_2016
	,MAX(CASE WHEN SCHOOL_YEAR = 2016 THEN [HS Cum Weighted] ELSE 0 END) AS GPA_HS_CUM_WEIGHTED_2016



from
	StudentCTE S
left join
	aps.CumGPA gpa
on
	s.[ID] = gpa.SIS_NUMBER
GROUP BY
	S.id
)
--SELECT * FROM GPA
,RESULTS
AS
(
SELECT
	s.id,
	S.FIRST_NAME,
	S.LAST_NAME,
	S.HIGH_SCHOOL_CODE,
	S.HIGH_SCHOOL_GRAD_DATE,
	s.ELL_STATUS,
	s.GENDER,
	s.GIFTED_STATUS,
	s.LUNCH_STATUS,
	s.RESOLVED_RACE,
	s.SPED_STATUS,
	G.GPA_HS_CUM_FLAT_2008,
	G.GPA_HS_CUM_FLAT_2009,
	G.GPA_HS_CUM_FLAT_2010,
	G.GPA_HS_CUM_FLAT_2011,
	G.GPA_HS_CUM_FLAT_2012,
	G.GPA_HS_CUM_FLAT_2013,
	G.GPA_HS_CUM_FLAT_2014,
	G.GPA_HS_CUM_FLAT_2015,
	G.GPA_HS_CUM_FLAT_2016,
	T.ACT_SCORE_2008,
	T.ACT_SCORE_2009,
	T.ACT_SCORE_2010,
	T.ACT_SCORE_2011, 
	T.ACT_SCORE_2012,
	T.ACT_SCORE_2013,
	T.ACT_SCORE_2014,
	T.ACT_SCORE_2015,
	T.ACT_SCORE_2016,
	T.PARCC_ALGEBRA_I_SCORE_2008,
	T.PARCC_ALGEBRA_I_SCORE_2009,
	T.PARCC_ALGEBRA_I_SCORE_2010, 
	T.PARCC_ALGEBRA_I_SCORE_2011,
	T.PARCC_ALGEBRA_I_SCORE_2012,
	T.PARCC_ALGEBRA_I_SCORE_2013,
	T.PARCC_ALGEBRA_I_SCORE_2014,
	T.PARCC_ALGEBRA_I_SCORE_2015,
	T.PARCC_ALGEBRA_I_SCORE_2016,
	T.PARCC_ALGEBRA_II_SCORE_2008,
	T.PARCC_ALGEBRA_II_SCORE_2009,
	T.PARCC_ALGEBRA_II_SCORE_2010,
	T.PARCC_ALGEBRA_II_SCORE_2011,
	T.PARCC_ALGEBRA_II_SCORE_2012,
	T.PARCC_ALGEBRA_II_SCORE_2013,
	T.PARCC_ALGEBRA_II_SCORE_2014,
	T.PARCC_ALGEBRA_II_SCORE_2015,
	T.PARCC_ALGEBRA_II_SCORE_2016,
	T.PARCC_GEOMETRY_SCORE_2008,
	T.PARCC_GEOMETRY_SCORE_2009,
	T.PARCC_GEOMETRY_SCORE_2010,
	T.PARCC_GEOMETRY_SCORE_2011,
	T.PARCC_GEOMETRY_SCORE_2012,
	T.PARCC_GEOMETRY_SCORE_2013,
	T.PARCC_GEOMETRY_SCORE_2014,
	T.PARCC_GEOMETRY_SCORE_2015,
	T.PARCC_GEOMETRY_SCORE_2016,
	T.PARCC_INT_MATH_SCORE_2008,
	T.PARCC_INT_MATH_SCORE_2009,
	T.PARCC_INT_MATH_SCORE_2010,
	T.PARCC_INT_MATH_SCORE_2011,
	T.PARCC_INT_MATH_SCORE_2013,
	T.PARCC_INT_MATH_SCORE_2014,
	T.PARCC_INT_MATH_SCORE_2015,
	T.PARCC_INT_MATH_SCORE_2016,
	T.SAT_MATH_SCORE_2011,
	T.SAT_MATH_SCORE_2012,
	T.SAT_MATH_SCORE_2013,
	T.SAT_MATH_SCORE_2014,
	T.SAT_MATH_SCORE_2015,
	T.SAT_MATH_SCORE_2016,
	T.SAT_READING_SCORE_2011,
	T.SAT_READING_SCORE_2012,
	T.SAT_READING_SCORE_2013,
	T.SAT_READING_SCORE_2014,
	T.SAT_READING_SCORE_2015,
	T.SAT_READING_SCORE_2016
	
FROM
	StudentCTE S
left join
	GPA G
on
	S.ID = G.ID
LEFT JOIN
	DBO.ALLTESTRESULTS T
ON 
	S.ID = T.SIS_NUMBER
)
SELECT * FROM RESULTS