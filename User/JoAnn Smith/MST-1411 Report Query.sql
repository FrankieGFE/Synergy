declare @Year uniqueidentifier = 'A3F9F1FB-4706-49AA-B3A3-21F153966191'
declare @School uniqueidentifier = 'E4D86B77-D978-437F-9A23-47099AE588CA'
declare @Term nvarchar(10) = '%'


SELECT
	SCHOOL_NAME
	,SCHOOL_CODE
	,ZONE
	,SCHOOL_YEAR
	,TERM_CODE
	,STUDENT_COUNT
	,MAX_STUDENTS
	,COURSE_TITLE
	,COURSE_ID
	,SECTION_ID
	,ROOM_NAME
	,PERIOD_BEGIN
	,PERIOD_END
	,MEETING_DAYS
	,STAFF_NAME
	,BADGE_NUM
	,STATE_COURSE_CODE
	,ORGANIZATION_GU
FROM
(
SELECT DISTINCT
	SCHOOL_NAME
	,SCHOOL_CODE
	,ZONE
	,SCHOOL_YEAR
	,EXTENSION
	,TERM_CODE
	,STUDENT_COUNT
	,MAX_STUDENTS
	,COURSE_TITLE
	,COURSE_ID
	,SECTION_ID
	,ROOM_NAME
	,PERIOD_BEGIN
	,PERIOD_END
	,MEETING_DAYS
	,STAFF_NAME
	,BADGE_NUM
	,STATE_COURSE_CODE
	,ORGANIZATION_GU

FROM
(

SELECT
	ORG.[ORGANIZATION_NAME] AS [SCHOOL_NAME]
	,YR.SCHOOL_YEAR
	,yr.extension
	,SECT.TERM_CODE
	,TOTAL_FEMALE + TOTAL_MALE AS STUDENT_COUNT
	,CASE WHEN TOTAL_FEMALE IS NULL THEN 0 ELSE TOTAL_FEMALE END AS TOTAL_FEMALE
	,CASE WHEN TOTAL_MALE IS NULL THEN 0 ELSE TOTAL_MALE END AS TOTAL_MALE
	,SECT.MAX_STUDENTS
	,CRSE.COURSE_TITLE AS COURSE_TITLE
	,CRSE.COURSE_ID AS COURSE_ID
	,SECT.SECTION_ID
	,SECT.ROOM_SIMPLE
	,SECT.PERIOD_BEGIN
	,SECT.PERIOD_END
	,CLASS.ENTER_DATE
	,CLASS.LEAVE_DATE
	, STUFF((SELECT ','+ left(symd.MEET_DAY_CODE,1)
	         FROM rev.EPC_SCH_YR_SECT        sec 	
	         JOIN rev.EPC_SCH_YR_SECT_MET_DY sysmd ON sysmd.SECTION_GU      = sec.SECTION_GU
	         JOIN rev.EPC_SCH_YR_MET_DY      symd  ON symd.SCH_YR_MET_DY_GU = sysmd.SCH_YR_MET_DY_GU
	       WHERE sec.SECTION_GU  = sect.SECTION_GU	
	       ORDER BY symd.ORDERBY	
	       FOR XML PATH('')
	     ),1,1,'') AS [MEETING_DAYS]
	,PER.FIRST_NAME + ' ' + PER.LAST_NAME AS STAFF_NAME
	,STAF.BADGE_NUM AS BADGE_NUM
	,CRSE.STATE_COURSE_CODE AS STATE_COURSE_CODE
	,CASE WHEN TAG.TAG IS NULL THEN '' ELSE TAG.TAG END AS TAG
	,ORG.ORGANIZATION_GU
	,SCH.SCHOOL_CODE
	,SCH.ALT_ID AS ZONE
	,ROOM.ROOM_NAME
FROM
rev.EPC_SCH_YR_SECT as sect
 JOIN
rev.REV_ORGANIZATION_YEAR orgy
on
orgy.ORGANIZATION_YEAR_GU = sect.ORGANIZATION_YEAR_GU
JOIN
rev.epc_sch_yr_crs crs
on
crs.SCHOOL_YEAR_COURSE_GU = sect.SCHOOL_YEAR_COURSE_GU

join
REV.EPC_CRS AS CRSE
ON CRSE.COURSE_GU = CRS.COURSE_GU

left JOIN
REV.EPC_STU_CLASS AS CLASS
ON CLASS.SECTION_GU = SECT.SECTION_GU

JOIN 
REV.REV_ORGANIZATION AS ORG
ON ORG.ORGANIZATION_GU = ORGY.ORGANIZATION_GU

JOIN
REV.EPC_SCH SCH
ON SCH.ORGANIZATION_GU = ORG.ORGANIZATION_GU

LEFT JOIN 
REV.EPC_STAFF_SCH_YR AS STY
ON STY.STAFF_SCHOOL_YEAR_GU = SECT.STAFF_SCHOOL_YEAR_GU

LEFT JOIN
REV.EPC_STAFF STAF
ON STAF.STAFF_GU = STY.STAFF_GU

LEFT JOIN
REV.REV_PERSON AS PER
ON PER.PERSON_GU = STY.STAFF_GU

JOIN
REV.REV_YEAR AS YR
ON YR.YEAR_GU = ORGY.YEAR_GU

LEFT OUTER JOIN
REV.UD_SECTION_TAG AS TAG
ON TAG.SECTION_GU = SECT.SECTION_GU

LEFT JOIN
REV.EPC_SCH_ROOM AS ROOM
ON ROOM.ROOM_GU = sect.ROOM_GU


WHERE 1 = 1
and
	 @Year = yr.year_gu
) AS MST_1411
WHERE 1 = 1
            AND [ORGANIZATION_GU] LIKE @School
            AND [TERM_CODE] LIKE @Term

UNION

SELECT DISTINCT
	SCHOOL_NAME
	,SCHOOL_CODE
	,ZONE
	,SCHOOL_YEAR
	,EXTENSION
	,TERM_CODE
	,STUDENT_COUNT
	,MAX_STUDENTS
	,COURSE_TITLE
	,COURSE_ID
	,SECTION_ID
	,ROOM_NAME
	,PERIOD_BEGIN
	,PERIOD_END
	,MEETING_DAYS
	,STAFF_NAME
	,BADGE_NUM
	,STATE_COURSE_CODE
	,ORGANIZATION_GU

FROM
(
SELECT
	ORG.[ORGANIZATION_NAME] AS [SCHOOL_NAME]
	,YR.SCHOOL_YEAR
	,yr.extension
	,SECT.TERM_CODE
	,TOTAL_FEMALE + TOTAL_MALE AS STUDENT_COUNT
	,CASE WHEN TOTAL_FEMALE IS NULL THEN 0 ELSE TOTAL_FEMALE END AS TOTAL_FEMALE
	,CASE WHEN TOTAL_MALE IS NULL THEN 0 ELSE TOTAL_MALE END AS TOTAL_MALE
	,SECT.MAX_STUDENTS
	,CRSE.COURSE_TITLE AS COURSE_TITLE
	,CRSE.COURSE_ID AS COURSE_ID
	,SECT.SECTION_ID
	,SECT.ROOM_SIMPLE
	,SECT.PERIOD_BEGIN
	,SECT.PERIOD_END
	,CLASS.ENTER_DATE
	,CLASS.LEAVE_DATE
	, STUFF((SELECT ','+ left(symd.MEET_DAY_CODE,1)
	         FROM rev.EPC_SCH_YR_SECT        sec 	
	         JOIN rev.EPC_SCH_YR_SECT_MET_DY sysmd ON sysmd.SECTION_GU      = sec.SECTION_GU
	         JOIN rev.EPC_SCH_YR_MET_DY      symd  ON symd.SCH_YR_MET_DY_GU = sysmd.SCH_YR_MET_DY_GU
	       WHERE sec.SECTION_GU  = sect.SECTION_GU	
	       ORDER BY symd.ORDERBY	
	       FOR XML PATH('')
	     ),1,1,'') AS [MEETING_DAYS]
	,PER.FIRST_NAME + ' ' + PER.LAST_NAME AS STAFF_NAME
	,STAF.BADGE_NUM AS BADGE_NUM
	,CRSE.STATE_COURSE_CODE AS STATE_COURSE_CODE
	,CASE WHEN TAG.TAG IS NULL THEN '' ELSE TAG.TAG END AS TAG
	,ORG.ORGANIZATION_GU
	,SCH.SCHOOL_CODE
	,SCH.ALT_ID AS ZONE
	,ROOM.ROOM_NAME
FROM
rev.EPC_SCH_YR_SECT as sect
 JOIN
rev.REV_ORGANIZATION_YEAR orgy
on
orgy.ORGANIZATION_YEAR_GU = sect.ORGANIZATION_YEAR_GU
JOIN
rev.epc_sch_yr_crs crs
on
crs.SCHOOL_YEAR_COURSE_GU = sect.SCHOOL_YEAR_COURSE_GU

join
REV.EPC_CRS AS CRSE
ON CRSE.COURSE_GU = CRS.COURSE_GU

left JOIN
REV.EPC_STU_CLASS AS CLASS
ON CLASS.SECTION_GU = SECT.SECTION_GU

JOIN 
REV.REV_ORGANIZATION AS ORG
ON ORG.ORGANIZATION_GU = ORGY.ORGANIZATION_GU

JOIN
REV.EPC_SCH SCH
ON SCH.ORGANIZATION_GU = ORG.ORGANIZATION_GU

LEFT JOIN 
REV.EPC_STAFF_SCH_YR AS STY
ON STY.STAFF_SCHOOL_YEAR_GU = SECT.STAFF_SCHOOL_YEAR_GU

LEFT JOIN
REV.EPC_STAFF STAF
ON STAF.STAFF_GU = STY.STAFF_GU

LEFT JOIN
REV.REV_PERSON AS PER
ON PER.PERSON_GU = STY.STAFF_GU

JOIN
REV.REV_YEAR AS YR
ON YR.YEAR_GU = ORGY.YEAR_GU

LEFT OUTER JOIN
REV.UD_SECTION_TAG AS TAG
ON TAG.SECTION_GU = SECT.SECTION_GU

LEFT JOIN
REV.EPC_SCH_ROOM AS ROOM
ON ROOM.ROOM_GU = sect.ROOM_GU

WHERE 1 = 1
and
	 @Year = yr.year_gu
) AS MST_1411
WHERE 1 = 1
            AND [ORGANIZATION_GU] LIKE @School
            AND [TERM_CODE] LIKE @Term
) UNIONED
ORDER BY
	[SCHOOL_NAME]
	,[STAFF_NAME]
	,[COURSE_ID]

