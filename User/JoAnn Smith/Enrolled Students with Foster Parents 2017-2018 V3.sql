/*
Written by:	JoAnn Smith
Date:		1/5/2018
Modified:	1/10/2018
Frank – first thing after the break, please work on pulling the data for this request as soon as possible.  Please pull a file of active 17-18 students who have any Parent/Guardian that has a Relation=Foster Father or Mother (see my screen shot further below).
Please include the fields listed below and also include the Foster Parent Name.  Thanks - Andy

1-10-2018
Hi, Andy.

It looks like we need additional data for the foster students that were pulled for us.  Is it possible to get the following information for each of these students?

SPED Status
Enrollment History (Mobility – number of schools attended)
Test Scores – (Is there an indicator that identifies if they are performing at grade level?)

*/

;with Students
as
(
select
	row_number() over(Partition by stu.student_gu, RELATION_TYPE ORDER BY stu.STUDENT_GU) AS RN,
	stu.FOSTER_HOME,
	BS.SIS_NUMBER,
	bs.FIRST_NAME,
	bs.LAST_NAME,
	bs.BIRTH_DATE,
	bs.SPED_STATUS,
	lu.VALUE_DESCRIPTION as GRADE,
	E.ORGANIZATION_YEAR_GU,
	o.ORGANIZATION_NAME,
	pe.first_name as PARENT_FIRST_NAME,
	pe.last_name AS PARENT_LAST_NAME,
	sp.RELATION_TYPE,
	lu1.VALUE_DESCRIPTION as RELATIONSHIP,
	e.STUDENT_GU,
	SP.STUDENT_GU AS SP_STUDENT_GU,
	SP.PARENT_GU AS SP_PARENT_GU,
	P.PARENT_GU AS P_PARENT_GU,
	PE.PERSON_GU

from
	aps.PrimaryEnrollmentsAsOf(getdate()) e
left join
	aps.BasicStudentWithMoreInfo bs
on
	bs.STUDENT_GU = e.STUDENT_GU
left join
	rev.epc_stu stu
on
	e.student_gu = stu.student_gu
left join
	rev.REV_ORGANIZATION_YEAR oy
on
	oy.ORGANIZATION_YEAR_GU = E.ORGANIZATION_YEAR_GU
left join
	rev.rev_organization o
on
	oy.ORGANIZATION_GU = o.ORGANIZATION_gu
LEFT JOIN
	APS.LookupTable('K12', 'Grade') lu
on
	lu.VALUE_CODE = e.GRADE
left join
	rev.epc_stu_parent sp
on
	sp.student_gu = stu.student_gu
left join
	rev.epc_parent p
on
	sp.PARENT_GU = p.PARENT_GU
left join
	rev.rev_person pe
on
	sp.PARENT_GU = pE.PERSON_GU
left join
	APS.LookupTable('K12','RELATION_TYPE') AS lu1
on	
	sp.RELATION_type = lu1.value_code
where
	RELATION_TYPE IN ('FF', 'FM')
or
	FOSTER_HOME = 'Y'
)
--select * from Students where rn = 1
,NumberofSchoolsAttended
as
(
select
	SED.SIS_NUMBER,
	SED.SCHOOL_NAME
from
	Students r
LEFT join
	aps.StudentEnrollmentDetails sed
on
	r.SIS_NUMBER = sed.SIS_NUMBER
WHERE
	EXCLUDE_ADA_ADM IS NULL
GROUP BY
	SED.SIS_NUMBER, SED.SCHOOL_NAME
)
--SELECT * FROM NumberofSchoolsAttended where sis_number = 104063789

,Count_Schools
as
(
select
	SIS_NUMBER,
	count(SCHOOL_NAME) AS NUMBER_OF_SCHOOLS_ATTENDED
from
	 NumberofSchoolsAttended n
GROUP BY
	SIS_NUMBER
)
--SELECT * FROM COUNT_SCHOOLS
,I_READY_MATH
AS
(
SELECT 
    STUDENT_ID AS SIS_NUMBER
    --,TEST_NAME
    ,DTBL_SCHOOLS.SCHOOL_CODE
    ,TEST_STUDENT_GRADE
       ,TEST_PRIMARY_RESULT AS TIER
       ,TEST_RAW_SCORE
       ,TEST_SECONDARY_RESULT
    ,YEAR_VALUE AS YEAR
    ,TEST_PRODUCT 
    ,TEST_SUBJECT AS CONTENT_AREA
    ,DTBL_CALENDAR_DATES.DATE_VALUE AS TEST_DATE
    ,TEST_SCORE_VALUE AS SCORE
    ,TEST_PRIMARY_RESULT AS PERFORMANCE_LEVEL
    ,TEST_NAME
    ,SIS_SCHOOL_YEAR
    ,TEST_CLASS
    ,TEST_GROUP
    ,TEST_SUBGROUP
    ,TEST_ADMIN_PERIOD
FROM [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.FTBL_TEST_SCORES
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_TESTS
ON DTBL_TESTS.TESTS_KEY = FTBL_TEST_SCORES.TESTS_KEY 
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_STUDENTS 
ON DTBL_STUDENTS.STUDENT_KEY = FTBL_TEST_SCORES.STUDENT_KEY 
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_SCHOOLS
ON DTBL_SCHOOLS.SCHOOL_KEY = FTBL_TEST_SCORES.SCHOOL_KEY
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_CALENDAR_DATES
ON DTBL_CALENDAR_DATES.CALENDAR_DATE_KEY= FTBL_TEST_SCORES.CALENDAR_DATE_KEY
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_SCHOOL_DATES
ON DTBL_SCHOOL_DATES.SCHOOL_DATES_KEY = FTBL_TEST_SCORES.SCHOOL_DATES_KEY 
WHERE
1 = 1
and TEST_PRODUCT like 'i%'
and test_name = 'I-Ready Mathematics Overall Score'
--AND TEST_SUBGROUP IN ('TOT','Composite')
--AND LOCAL_SCHOOL_YEAR = '2016-2017'
AND TEST_ADMIN_PERIOD = 'FALL'
and SIS_SCHOOL_YEAR = '2017'
--order by DTBL_CALENDAR_DATES.DATE_VALUE desc

)
--SELECT * FROM I_READY_MATH
,I_READY_ELA
AS
(
SELECT 
    STUDENT_ID AS SIS_NUMBER
    --,TEST_NAME
    ,DTBL_SCHOOLS.SCHOOL_CODE
    ,TEST_STUDENT_GRADE
       ,TEST_PRIMARY_RESULT AS TIER
       ,TEST_RAW_SCORE
       ,TEST_SECONDARY_RESULT
    ,YEAR_VALUE AS YEAR
    ,TEST_PRODUCT 
    ,TEST_SUBJECT AS CONTENT_AREA
    ,DTBL_CALENDAR_DATES.DATE_VALUE AS TEST_DATE
    ,TEST_SCORE_VALUE AS SCORE
    ,TEST_PRIMARY_RESULT AS PERFORMANCE_LEVEL
    ,TEST_NAME
    ,SIS_SCHOOL_YEAR
    ,TEST_CLASS
    ,TEST_GROUP
    ,TEST_SUBGROUP
    ,TEST_ADMIN_PERIOD
FROM [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.FTBL_TEST_SCORES
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_TESTS
ON DTBL_TESTS.TESTS_KEY = FTBL_TEST_SCORES.TESTS_KEY 
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_STUDENTS 
ON DTBL_STUDENTS.STUDENT_KEY = FTBL_TEST_SCORES.STUDENT_KEY 
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_SCHOOLS
ON DTBL_SCHOOLS.SCHOOL_KEY = FTBL_TEST_SCORES.SCHOOL_KEY
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_CALENDAR_DATES
ON DTBL_CALENDAR_DATES.CALENDAR_DATE_KEY= FTBL_TEST_SCORES.CALENDAR_DATE_KEY
INNER JOIN [VERSIFIT.APS.EDU.ACTD].[K12INTEL].K12INTEL_DW.DTBL_SCHOOL_DATES
ON DTBL_SCHOOL_DATES.SCHOOL_DATES_KEY = FTBL_TEST_SCORES.SCHOOL_DATES_KEY 
WHERE
1 = 1
and TEST_PRODUCT like 'i%'
and test_name = 'I-Ready ELA Overall Score'
--AND TEST_SUBGROUP IN ('TOT','Composite')
--AND LOCAL_SCHOOL_YEAR = '2016-2017'
AND TEST_ADMIN_PERIOD = 'FALL'
and SIS_SCHOOL_YEAR = '2017'
--order by DTBL_CALENDAR_DATES.DATE_VALUE desc
)
--SELECT * FROM I_READY_ELA
,Details
as
(
select
	s.*,
	c.NUMBER_OF_SCHOOLS_ATTENDED,
	IM.TEST_NAME AS I_READY_MATH,
	IM.PERFORMANCE_LEVEL AS I_READY_MATH_PERF_LEVEL,
	IE.TEST_NAME AS I_READY_ELA,
	IE.PERFORMANCE_LEVEL AS I_READY_ELA_PERF_LEVEL
from
	Students S
left join
	Count_Schools c
on
	c.SIS_NUMBER = s.SIS_NUMBER
LEFT JOIN
	I_READY_MATH IM
ON
	S.SIS_NUMBER = IM.SIS_NUMBER
LEFT JOIN
	I_READY_ELA IE
ON
	S.SIS_NUMBER = IE.SIS_NUMBER

)
,Results
as
(
select
	 *
from
	 dETAILS
)
SELECT * FROM Results
--order by ORGANIZATION_NAME, SIS_NUMBER
