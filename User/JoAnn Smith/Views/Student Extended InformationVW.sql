USE [ST_Production]
GO

/****** Object:  View [APS].[ExtendedStudentInformation]    Script Date: 3/30/2017 9:49:20 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



ALTER VIEW [APS].[ExtendedStudentInformation] AS


with StudentCTE
as
(
select
		ROW_NUMBER() OVER (PARTITION BY Student.SIS_NUMBER ORDER BY Student.SIS_NUMBER) AS ROWNUM
		,[Student].[STUDENT_GU]
	   ,[Enrollments].ORGANIZATION_GU AS [ORGANIZATION_GU]
       ,[Student].[FIRST_NAME]
       ,[Student].[LAST_NAME]
       ,[Student].[MIDDLE_NAME]
       ,[Student].[SIS_NUMBER]
       ,[Student].[ELL_STATUS]
       ,[Student].[SPED_STATUS]
       ,[Student].[CONTACT_LANGUAGE]
       ,[Student].[GENDER]
       ,Student.RESOLVED_RACE          
       ,[Student].[CLASS_OF]
       ,CONVERT(VARCHAR(10),[Student].[BIRTH_DATE],101) AS [BIRTH_DATE]
       ,[Enrollments].[GRADE] AS [GRADE_LEVEL]
		,[Enrollments].[SCHOOL_NAME]
		,[Enrollments].[SCHOOL_CODE]
       ,CASE WHEN [Student].[MAIL_ADDRESS] IS NULL THEN [Student].[HOME_ADDRESS] ELSE [Student].[MAIL_ADDRESS] END AS [ADDRESS]
		,CASE WHEN [Student].[MAIL_ADDRESS] IS NULL THEN [Student].[HOME_ADDRESS_2] ELSE [Student].[MAIL_ADDRESS_2] END AS [ADDRESS_2]
		,CASE WHEN [Student].[MAIL_CITY] IS NULL THEN [Student].[HOME_CITY] ELSE [Student].[MAIL_CITY] END AS [CITY]
		,CASE WHEN [Student].[MAIL_STATE] IS NULL THEN [Student].[HOME_STATE] ELSE [Student].[MAIL_STATE] END AS [STATE]
		,CASE WHEN [Student].[MAIL_ZIP] IS NULL THEN [Student].[HOME_ZIP] ELSE [Student].[MAIL_ZIP] END AS [ZIP]
       ,PER.EMAIL AS STUDENT_EMAIL
       ,[Student].[PRIMARY_PHONE]
       ,SCH.[TEACHER NAME] AS TEACHER_NAME
       ,SCH.[PERIOD_BEGIN]
	   ,STUDENT_EXCEPTIONS.EXCLUDE_BUSINESS
	   ,STUDENT_EXCEPTIONS.EXCLUDE_MILITARY
	   ,STUDENT_EXCEPTIONS.EXCLUDE_UNIVERSITY

FROM
       APS.PrimaryEnrollmentDetailsAsOf(getdate()) AS [Enrollments]
       
       INNER JOIN
       APS.BasicStudentWithMoreInfo AS [Student] 
       ON
       [Enrollments].[STUDENT_GU] = [Student].[STUDENT_GU]
 
       LEFT JOIN
       rev.[UD_STU] AS [STUDENT_EXCEPTIONS]
       ON
       [Student].[STUDENT_GU] = [STUDENT_EXCEPTIONS].[STUDENT_GU]

       INNER JOIN
       REV.REV_PERSON AS PER
       ON STUDENT.STUDENT_GU = PER.PERSON_GU

       INNER join 
       aps.scheduledetailsasof(getdate()) as SCH
       on sch.STUDENT_GU = student.STUDENT_GU

	   
		inner join
		aps.TermDatesAsOf(getdate()) TDA on TDA.OrgYearGU = Enrollments.ORGANIZATION_YEAR_GU
				and tda.TermCode = SCH.Term_code

          
       inner join
       rev.epc_sch_yr_opt OPT
       ON OPT.HOMEROOM_PERIOD = SCH.PERIOD_BEGIN
          AND OPT.ORGANIZATION_YEAR_GU = Enrollments.ORGANIZATION_YEAR_GU  
)      
--select * from studentCTE WHERE ROWNUM = 1
,PARENTCTE
AS

(
       SELECT
		  ROW_NUMBER() OVER (PARTITION BY PARENT_GU ORDER BY STUDENT_GU) AS ROWNUM,
		  PARENT_GU,
		  STUDENT_GU,
		  LAST_NAME + ', ' + FIRST_NAME AS [PARENT_NAME],
		  RELATION_TYPE,
		  ORDERBY
       FROM
       REV.EPC_STU_PARENT PAR
		JOIN
	    REV.REV_PERSON PER
		ON
		PAR.PARENT_GU = PER.PERSON_GU
 
)
,PARENTINFO
AS
(
	

 SELECT 
	STUDENT_GU
	,MAX(CASE WHEN RN = 1 THEN PARENT_GU END) AS P1GU
	,MAX(CASE WHEN RN = 1 THEN LAST_NAME END) AS P1LN
	,MAX(CASE WHEN RN = 1 THEN FIRST_NAME END) AS P1FN
	,MAX(CASE WHEN RN = 1 THEN VALUE_DESCRIPTION END) AS P1TYPE
	,MAX(CASE WHEN RN = 1 THEN EMAIL END) AS P1EMAIL
	,MAX(CASE WHEN RN = 1 THEN PRIMARY_PHONE END) AS P1PHONE
	,MAX(CASE WHEN RN = 2 THEN PARENT_GU END) AS P2GU
	,MAX(CASE WHEN RN = 2 THEN LAST_NAME END) AS P2LN
	,MAX(CASE WHEN RN = 2 THEN FIRST_NAME END) AS P2FN
	,MAX(CASE WHEN RN = 2 THEN VALUE_DESCRIPTION END) AS P2TYPE
	,MAX(CASE WHEN RN = 2 THEN PRIMARY_PHONE END) AS P2PHONE
	,MAX(CASE WHEN RN = 2 THEN EMAIL END) AS P2EMAIL
	,MAX(CASE WHEN RN = 3 THEN PARENT_GU END) AS P3GU
	,MAX(CASE WHEN RN = 3 THEN LAST_NAME END) AS P3LN
	,MAX(CASE WHEN RN = 3 THEN FIRST_NAME END) AS P3FN
	,MAX(CASE WHEN RN = 3 THEN VALUE_DESCRIPTION END) AS P3TYPE
	,MAX(CASE WHEN RN = 3 THEN EMAIL END) AS P3EMAIL
	,MAX(CASE WHEN RN = 3 THEN PRIMARY_PHONE END) AS P3PHONE


  FROM
       (
       SELECT 
          STUDENT_GU
          ,PARENT_GU
		  ,PER.LAST_NAME
		  ,PER.FIRST_NAME
		  ,PER.EMAIL
		  ,PER.PRIMARY_PHONE
          ,ORDERBY
		  ,VALUE_DESCRIPTION
		  ,ROW_NUMBER() OVER (PARTITION BY STUDENT_GU ORDER BY ORDERBY ) AS RN
       FROM
       REV.EPC_STU_PARENT AS PAR
	   INNER JOIN 
	   APS.LookupTable('K12','RELATION_TYPE') AS LU
	   ON
	   PAR.RELATION_TYPE = LU.VALUE_CODE
	   INNER JOIN
	   REV.REV_PERSON PER
	   ON
	   PARENT_GU = PER.PERSON_GU
       ) AS ST
       
	  GROUP BY STUDENT_GU 
	
)

--SELECT * FROM PARENTCTE WHERE ROWNUM = 1
--ORDER BY STUDENT_GU
,STUPAR
AS
(
SELECT
	row_number() over (partition by s.student_gu order by SIS_NUMBER) as RN,
	S.STUDENT_GU,
	s.ORGANIZATION_GU,
	S.SCHOOL_NAME,
	S.GRADE_LEVEL,
	S.FIRST_NAME + ' ' + S.LAST_NAME AS STU_NAME,
	S.SIS_NUMBER,
	S.BIRTH_DATE,
	S.GENDER,
	S.RESOLVED_RACE,
	S.ELL_STATUS,
	S.SPED_STATUS,
	S.CLASS_OF,
	S.TEACHER_NAME,
	S.[ADDRESS],
	S.CITY,
	S.[STATE],
	S.ZIP,
	S.CONTACT_LANGUAGE,
	S.PRIMARY_PHONE,
	S.STUDENT_EMAIL,
	I.P1FN + ' ' + I.P1LN AS P1_NAME,
	I.P1TYPE,
	I.P1EMAIL,
	I.P1PHONE,
	I.P2FN + ' ' + I.P2LN AS P2_NAME,
	I.P2TYPE,
	I.P2EMAIL,
	I.P2PHONE,
	I.P3FN + ' ' + I.P3LN AS P3_NAME,
	I.P3TYPE,
	I.P3EMAIL,
	I.P3PHONE,
	P.ORDERBY,
	S.EXCLUDE_BUSINESS,
	S.EXCLUDE_MILITARY,
	S.EXCLUDE_UNIVERSITY
FROM
	StudentCTE S
INNER JOIN
	PARENTCTE P
ON
	P.STUDENT_GU = S.STUDENT_GU
INNER JOIN
	PARENTINFO I
ON
	I.P1GU = P.PARENT_GU
)

SELECT
	ST.STUDENT_GU,
	ST.ORGANIZATION_GU,
	ST.SCHOOL_NAME,
	ST.GRADE_LEVEL,
	ST.STU_NAME,
	ST.SIS_NUMBER,
	ST.BIRTH_DATE,
	ST.GENDER,
	ST.RESOLVED_RACE,
	ST.ELL_STATUS,
	ST.SPED_STATUS,
	ST.CLASS_OF,
	ST.TEACHER_NAME AS [HOMEROOM TEACHER],
	ST.[ADDRESS],
	ST.CITY,
	ST.STATE,
	ST.ZIP,
	ST.CONTACT_LANGUAGE,
	ST.PRIMARY_PHONE,
	ST.STUDENT_EMAIL,
	ST.P1_NAME AS [PARENT 1 NAME],
	ST.P1TYPE AS [PARENT 1 RELATION],
	ST.P1EMAIL AS [PARENT 1 EMAIL],
	ST.P1PHONE AS [PARENT 1 PHONE],
	ST.P2_NAME AS [PARENT 2 NAME],
	ST.P2TYPE AS [PARENT 2 RELATION],
	ST.P2EMAIL AS [PARENT 2 EMAIL],
	ST.P2PHONE AS [PARENT 2 PHONE],
	ST.P3_NAME AS [PARENT 3 NAME],
	ST.P3TYPE AS [PARENT 3 RELATION],
	ST.P3EMAIL AS [PARENT 3 EMAIL],
	ST.P3PHONE AS [PARENT 3 PHONE],
	ST.EXCLUDE_BUSINESS,
	ST.EXCLUDE_MILITARY,
	ST.EXCLUDE_UNIVERSITY,
	ST.ORDERBY	 
FROM STUPAR st where RN = 1


GO


