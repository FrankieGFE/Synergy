

EXECUTE AS LOGIN='QueryFileUser'
GO

SELECT
	*
	,CASE WHEN ([AGE] BETWEEN 18 AND 21 ) AND [NEW_ENROLL] = 'Y' THEN 'Y' ELSE 'N' END AS [NEWLY_ENROLLED_OVER_18]
FROM
	(
	SELECT --DISTINCT
		PRIM.[SCHOOL_NAME] AS SCHOOL_NAME
		,[STU].SIS_NUMBER
		,[STU].[BIRTH_DATE]
		,DATEDIFF(DD,[STU].[BIRTH_DATE],GETDATE()) / 365 AS [AGE]
		,PRIM.GRADE AS GRADE
		
		,[SHED_CTECH].[TOTAL] AS [TOTAL_COURSES]
		,[SHED_CTECH].[DISTANCE_ED]
		,[SHED_CTECH].[CTE_TOTAL] AS [TOTAL_CTE_COURSES]
		
		,[CREDIT_RECOVERY].[TOTAL] AS [CREDIT_RECOVERY_COUNT]
		
		,CASE WHEN [SHED_CTECH].[TOTAL] < 7 THEN 'Y' ELSE 'N' END AS [SHORT_DAY_SCHEDULE]
		
		,[OLD_ENROLL].[SCHOOL_CODE] AS [OLD_SCHOOL_CODE]
		,[OLD_ENROLL].[SCHOOL_NAME] AS [OLD_SCHOOL]
		,[OLD_ENROLL].[SCHOOL_YEAR] AS [OLD_YEAR]
		,[OLD_ENROLL].[ENTER_DATE] AS [OLD_ENTER_DATE]
		,[OLD_ENROLL].[LEAVE_DATE] AS [OLD_LEAVE_DATE]
		,[OLD_ENROLL].[RN] AS [OLD_ROW_NUMBER]
		
		,CASE WHEN [OLD_ENROLL].[ENTER_DATE] >= '10/8/2014' THEN 'Y' ELSE 'N' END AS [NEW_ENROLL]
		
		,CASE WHEN (PRIM.[SCHOOL_CODE] BETWEEN '590' AND '599'
		OR PRIM.[SCHOOL_CODE] = '192') THEN 'Y' ELSE 'N' END AS [ALTERNATE_HIGH_SCHOOL]
		
		,[SUMMER_ENROLL].[SCHOOL_CODE] AS [SUMMER_SCHOOL_CODE]
		,[SUMMER_ENROLL].[SCHOOL_NAME] AS [SUMMER_SCHOOL_NAME]
		,[SUMMER_ENROLL].[ENTER_DATE] AS [SUMMER_ENTER_DATE]
		,[SUMMER_ENROLL].[LEAVE_DATE] AS [SUMMER_LEAVE_DATE]
		
		,CASE WHEN [SUMMER_ENROLL].[ENTER_DATE] IS NOT NULL THEN 'Y' ELSE 'N' END AS [ATTEND_SUMMER_SCHOOL]		
		
	FROM 
		APS.ELLAsOf(GETDATE()) AS [ELL]
		
		INNER JOIN
		APS.PrimaryEnrollmentDetailsAsOf(GETDATE()) AS [PRIM]
		ON
		ELL.STUDENT_GU = PRIM.STUDENT_GU
		
		INNER JOIN
		aps.BasicStudent AS [STU]
		ON
		ELL.STUDENT_GU = STU.STUDENT_GU
		
		LEFT OUTER JOIN
		(
		SELECT
			[PRIM].[STUDENT_SCHOOL_YEAR_GU]
			,COUNT([SHED].[COURSE_ID]) AS [TOTAL]
			,SUM(CASE WHEN [SHED].[COURSE_ID] LIKE '%DE' THEN 1 ELSE 0 END) AS [DISTANCE_ED]
			,COUNT([FILE].[COURSEID]) AS [CTE_TOTAL]
		FROM
			APS.PrimaryEnrollmentDetailsAsOf(GETDATE()) AS [PRIM]
			
			INNER JOIN
			APS.ScheduleAsOf(GETDATE()) AS [SHED]
			ON
			[PRIM].[STUDENT_SCHOOL_YEAR_GU] = [SHED].[STUDENT_SCHOOL_YEAR_GU]
			
			LEFT OUTER JOIN
			OPENROWSET (
					'Microsoft.ACE.OLEDB.12.0', 
					'Text;Database=\\SynTempSSIS\Files\TempQuery\;',
					'SELECT * from CTECOURSES.CSV' 
				)AS [FILE]
			ON
			[SHED].[COURSE_ID] = [FILE].[COURSEID]
		GROUP BY
			[PRIM].[STUDENT_SCHOOL_YEAR_GU]
		) AS [SHED_CTECH]
		ON
		[PRIM].[STUDENT_SCHOOL_YEAR_GU] = [SHED_CTECH].[STUDENT_SCHOOL_YEAR_GU]
		
		LEFT OUTER JOIN
		(
		SELECT
			*
			,ROW_NUMBER() OVER (PARTITION BY STUDENT_GU ORDER BY ENTER_DATE) AS RN
		FROM
			APS.StudentEnrollmentDetails
		WHERE
			--SCHOOL_YEAR = '2014'
			--AND EXTENSION = 'R'
			EXCLUDE_ADA_ADM IS NULL
			AND ENTER_DATE IS NOT NULL	
		)  AS [OLD_ENROLL]
		ON
		[PRIM].[STUDENT_GU] = [OLD_ENROLL].[STUDENT_GU]
		AND [OLD_ENROLL].[RN] = 1
		
		LEFT OUTER JOIN
		(
		SELECT
			*
			,ROW_NUMBER() OVER (PARTITION BY STUDENT_GU, SCHOOL_YEAR ORDER BY ENTER_DATE) AS RN
		FROM
			APS.StudentEnrollmentDetails
		WHERE
			SCHOOL_YEAR = '2014'
			AND EXTENSION = 'S'
			AND EXCLUDE_ADA_ADM IS NULL
			AND ENTER_DATE IS NOT NULL	
		)  AS [SUMMER_ENROLL]
		ON
		[PRIM].[STUDENT_GU] = [SUMMER_ENROLL].[STUDENT_GU]
		
		LEFT OUTER JOIN
		(
		SELECT
			[COURSE_HISTORY].[STUDENT_GU]
			,COUNT([COURSE_HISTORY].[COURSE_ID]) AS [TOTAL]
		FROM
			rev.[EPC_STU_CRS_HIS] AS [COURSE_HISTORY]
			
		WHERE
			[COURSE_HISTORY].[REPEAT_TAG_GU] = '2F61B66B-B374-41C1-8A97-AA4DDC57ED90'
			
		GROUP BY
			[COURSE_HISTORY].[STUDENT_GU]
		) AS [CREDIT_RECOVERY]
		ON
		[PRIM].[STUDENT_GU] = [CREDIT_RECOVERY].[STUDENT_GU]
		
		
	WHERE
		(PRIM.[SCHOOL_CODE] BETWEEN '500' AND '599'
		OR PRIM.[SCHOOL_CODE] = '192')
	) AS [LCE_STUDENTS]
	
REVERT
GO