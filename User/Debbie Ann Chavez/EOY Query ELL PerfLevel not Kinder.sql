

SELECT 

	SIS_NUMBER
	,GRADES.VALUE_DESCRIPTION
	/*
	,CASE WHEN LEVEL.VALUE_DESCRIPTION = 'Advanced' THEN 'FEP Bridging/Reaching'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'Beginning' THEN 'Entering'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'Bridging' THEN 'Expanding'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'Early Intermediate' THEN 'Emerging'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'ELL' THEN 'Entering'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'FEP' THEN 'FEP Bridging/Reaching'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'Intermediate' THEN 'Expanding'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'LEP' THEN 'Entering'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'NEP' THEN 'Emerging'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'Proficient' THEN 'FEP Bridging/Reaching'
		  WHEN LEVEL.VALUE_DESCRIPTION = 'Reaching' THEN 'FEP Bridging/Reaching'
	ELSE LEVEL.VALUE_DESCRIPTION END AS NEW_PERFORMANCE_LEVEL
	*/
	,LEVEL.VALUE_DESCRIPTION
	,TESTS.TEST_NAME
 FROM
APS.LCELatestEvaluationAsOf(GETDATE()) AS TESTS
INNER JOIN
APS.LookupTable('K12.TestInfo', 'PERFORMANCE_LEVELS') AS LEVEL
ON
TESTS.PERFORMANCE_LEVEL = LEVEL.VALUE_CODE

	INNER JOIN
	APS.PrimaryEnrollmentsAsOf (GETDATE()) AS PRIM
	ON
	PRIM.STUDENT_GU = TESTS.STUDENT_GU

	INNER JOIN
	APS.LookupTable ('K12','Grade') AS GRADES
	ON
	GRADES.VALUE_CODE = PRIM.GRADE

		INNER JOIN
	rev.EPC_STU AS STU
	ON
	STU.STUDENT_GU = TESTS.STUDENT_GU

WHERE
	LEVEL.VALUE_DESCRIPTION  = 'ELL'
	AND GRADES.VALUE_DESCRIPTION != 'K'