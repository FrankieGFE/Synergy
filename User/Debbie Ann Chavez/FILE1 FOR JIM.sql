
USE ST_Production
GO

--DECLARE @ASOFDATE DATE = '2014-08-22'

SELECT 
			[File Date]
			,[Location Number]
			,[Course Number]
			,[Section Number]
			,[Course Description]
			,CASE WHEN PIVOTME.ALSSH  IS NOT NULL THEN 'Y' ELSE 'N' END AS [TAG_ALS]
			,CASE WHEN PIVOTME.ALSED  IS NOT NULL THEN 'Y' ELSE 'N' END AS [TAG_ELD]
			,CASE WHEN PIVOTME.ALSES  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_ESL]
			,CASE WHEN PIVOTME.ALSSH  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_SC]
			,CASE WHEN PIVOTME.ALSLA  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_LA]
			,CASE WHEN PIVOTME.ALSMA  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_MATH]
			,CASE WHEN PIVOTME.ALSSC  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_SCI]
			,CASE WHEN PIVOTME.ALSSS  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_SS]
			,CASE WHEN PIVOTME.ALSOT  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_OTH]
			,CASE WHEN PIVOTME.ALSMP  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_BIL_MAINT]
			,CASE WHEN PIVOTME.ALS2W  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_BIL_TWO_WAY]
			,[Teacher_Last_Name]
			,[Teacher_First_Name]
			,[APS_Teacher_ID]
			,[Teacher_License_Number]
			,[Debug Total Students]
			,0 AS ADD_STAFF

FROM (

SELECT 
--*
--COUNT (*)
		GETDATE () AS [File Date]
		,SCH.SCHOOL_CODE AS [Location Number]
		, CRS.COURSE_ID AS [Course Number]
		,SEC.SECTION_ID AS [Section Number]
		,CRS.COURSE_TITLE AS [Course Description]
		,TAG.TAG	
		,PERSON.LAST_NAME AS [Teacher_Last_Name]
		,PERSON.FIRST_NAME AS [Teacher_First_Name]
		, BADGE_NUM AS [APS_Teacher_ID]
		,CRED.DOCUMENT_NUMBER	AS [Teacher_License_Number]
		,SEC.TOTAL_FEMALE + SEC.TOTAL_MALE AS [Debug Total Students]

 FROM
rev.UD_SECTION_TAG AS TAG	
INNER JOIN
rev.EPC_SCH_YR_SECT AS SEC
ON
TAG.SECTION_GU = SEC.SECTION_GU
AND SEC.TERM_CODE IN ('S1', 'YR', 'Q1', 'Q2')

INNER JOIN
rev.REV_ORGANIZATION_YEAR AS OY
ON
OY.ORGANIZATION_YEAR_GU = SEC.ORGANIZATION_YEAR_GU

INNER JOIN 
rev.REV_ORGANIZATION AS ORG
ON
OY.ORGANIZATION_GU = ORG.ORGANIZATION_GU

INNER JOIN
rev.EPC_SCH_YR_CRS AS SYC
ON
SYC.ORGANIZATION_YEAR_GU = OY.ORGANIZATION_YEAR_GU
AND 
SEC.SCHOOL_YEAR_COURSE_GU = SYC.SCHOOL_YEAR_COURSE_GU

INNER JOIN
rev.EPC_CRS AS CRS
ON
CRS.COURSE_GU = SYC.COURSE_GU

INNER JOIN
rev.EPC_SCH AS SCH
ON
SCH.ORGANIZATION_GU = ORG.ORGANIZATION_GU

/*
--(DONT REALLY NEED THIS JOIN) ALL RECORDS ARE IN 2014 ANYWAY
INNER JOIN
rev.REV_YEAR AS YR
ON
YR.YEAR_GU = OY.YEAR_GU
*/

-- 7,707 RECORDS INNER JOIN PULLS 7,668... MADE A LEFT
LEFT JOIN
rev.EPC_STAFF_SCH_YR AS STAFFYR
ON
STAFFYR.STAFF_SCHOOL_YEAR_GU = SEC.STAFF_SCHOOL_YEAR_GU


--SAME
LEFT JOIN
rev.EPC_STAFF AS STAFF
ON
STAFFYR.STAFF_GU = STAFF.STAFF_GU

--SAME
LEFT JOIN
rev.REV_PERSON AS PERSON
ON
PERSON.PERSON_GU = STAFF.STAFF_GU

LEFT JOIN
rev.EPC_STAFF_CRD AS CRED
ON
CRED.STAFF_GU = STAFF.STAFF_GU


--WHERE
--SCHOOL_YEAR = '2014'
--AND SEC.ADD_DATE_TIME_STAMP < = @ASOFDATE
) AS T1

PIVOT
(
MAX(TAG)
FOR TAG IN ([ALSSH], [ALSED], [ALSES], [ALSLA], [ALSMA], [ALSSC], [ALSSS], [ALSOT], [ALSMP], [ALS2W])
) AS PIVOTME



/************************************************************************************************************************
PULL THE SAME EXCEPT FOR ADDITIONAL STAFF ONLY

************************************************************************************************************************/
UNION

SELECT 
			[File Date]
			,[Location Number]
			,[Course Number]
			,[Section Number]
			,[Course Description]
			,CASE WHEN PIVOTME.ALSSH  IS NOT NULL THEN 'Y' ELSE 'N' END AS [TAG_ALS]
			,CASE WHEN PIVOTME.ALSED  IS NOT NULL THEN 'Y' ELSE 'N' END AS [TAG_ELD]
			,CASE WHEN PIVOTME.ALSES  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_ESL]
			,CASE WHEN PIVOTME.ALSSH  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_SC]
			,CASE WHEN PIVOTME.ALSLA  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_LA]
			,CASE WHEN PIVOTME.ALSMA  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_MATH]
			,CASE WHEN PIVOTME.ALSSC  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_SCI]
			,CASE WHEN PIVOTME.ALSSS  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_SS]
			,CASE WHEN PIVOTME.ALSOT  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_HL_OTH]
			,CASE WHEN PIVOTME.ALSMP  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_BIL_MAINT]
			,CASE WHEN PIVOTME.ALS2W  IS NOT NULL THEN 'Y' ELSE 'N' END  AS [TAG_BIL_TWO_WAY]
			,[Teacher_Last_Name]
			,[Teacher_First_Name]
			,[APS_Teacher_ID]
			,[Teacher_License_Number]
			,[Debug Total Students]
			,1 AS ADD_STAFF

FROM (

SELECT 
--*
--COUNT (*)
		GETDATE () AS [File Date]
		,SCH.SCHOOL_CODE AS [Location Number]
		, CRS.COURSE_ID AS [Course Number]
		,SEC.SECTION_ID AS [Section Number]
		,CRS.COURSE_TITLE AS [Course Description]
		,TAG.TAG	
		,PERSON.LAST_NAME AS [Teacher_Last_Name]
		,PERSON.FIRST_NAME AS [Teacher_First_Name]
		, BADGE_NUM AS [APS_Teacher_ID]
		,CRED.DOCUMENT_NUMBER	AS [Teacher_License_Number]
		,SEC.TOTAL_FEMALE + SEC.TOTAL_MALE AS [Debug Total Students]

 FROM
rev.UD_SECTION_TAG AS TAG	
INNER JOIN
rev.EPC_SCH_YR_SECT AS SEC
ON
TAG.SECTION_GU = SEC.SECTION_GU
AND SEC.TERM_CODE IN ('S1', 'YR', 'Q1', 'Q2')

INNER JOIN
rev.REV_ORGANIZATION_YEAR AS OY
ON
OY.ORGANIZATION_YEAR_GU = SEC.ORGANIZATION_YEAR_GU

INNER JOIN 
rev.REV_ORGANIZATION AS ORG
ON
OY.ORGANIZATION_GU = ORG.ORGANIZATION_GU

INNER JOIN
rev.EPC_SCH_YR_CRS AS SYC
ON
SYC.ORGANIZATION_YEAR_GU = OY.ORGANIZATION_YEAR_GU
AND 
SEC.SCHOOL_YEAR_COURSE_GU = SYC.SCHOOL_YEAR_COURSE_GU

INNER JOIN
rev.EPC_CRS AS CRS
ON
CRS.COURSE_GU = SYC.COURSE_GU

INNER JOIN
rev.EPC_SCH AS SCH
ON
SCH.ORGANIZATION_GU = ORG.ORGANIZATION_GU

/*
--(DONT REALLY NEED THIS JOIN) ALL RECORDS ARE IN 2014 ANYWAY
INNER JOIN
rev.REV_YEAR AS YR
ON
YR.YEAR_GU = OY.YEAR_GU
*/

--SAME, FOR ADDITIONAL STAFF ONLY
INNER JOIN
	rev.EPC_SCH_YR_SECT_STF AS ADDSTAFF
	ON
	ADDSTAFF.SECTION_GU = SEC.SECTION_GU

	INNER JOIN
	rev.EPC_STAFF_SCH_YR AS STAFFYR
	ON
	STAFFYR.STAFF_SCHOOL_YEAR_GU = ADDSTAFF.STAFF_SCHOOL_YEAR_GU

	INNER JOIN
	rev.EPC_STAFF AS STAFF
	ON
	STAFF.STAFF_GU = STAFFYR.STAFF_GU
	
--SAME
INNER JOIN
rev.REV_PERSON AS PERSON
ON
PERSON.PERSON_GU = STAFF.STAFF_GU

LEFT JOIN
rev.EPC_STAFF_CRD AS CRED
ON
CRED.STAFF_GU = STAFF.STAFF_GU


--WHERE
--SCHOOL_YEAR = '2014'
--AND SEC.ADD_DATE_TIME_STAMP < = @ASOFDATE
) AS T1

PIVOT
(
MAX(TAG)
FOR TAG IN ([ALSSH], [ALSED], [ALSES], [ALSLA], [ALSMA], [ALSSC], [ALSSS], [ALSOT], [ALSMP], [ALS2W])
) AS PIVOTME

ORDER BY [Location Number], [Course Number], [Section Number]
