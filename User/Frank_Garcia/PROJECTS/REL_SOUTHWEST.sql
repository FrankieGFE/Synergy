/**
 * 
 * $CreatedBy: Frank Garcia
 * $Date: 10/10/2016 $
 * Requested by Andy Gutierez
   Frank - since Shayne is handling the YDI request, can you please work on this one to try to complete by 10/14 also.  
   Please look through the attachments indicating the SY's and data being requested and let me know if you'd like to meet with Deb and I to go over.  
   The sample file layout shows one row per student for all years, don't know if we can possibly handle this with a pivot, but we can discuss.  
   Thanks - Andy
 */

/**/

WITH SP_LAS_LINKS_SCALE AS
(
SELECT 
	STUDENT_ID
	,[2009] AS 'SP LAS LINKS SCALE 2009-2010'
	,[2010] AS 'SP LAS LINKS SCALE 2010-2011'
	,[2011] AS 'SP LAS LINKS SCALE 2011-2012'
	,[2012] AS 'SP LAS LINKS SCALE 2012-2013'
	,[2013] AS 'SP LAS LINKS SCALE 2013-2014'
	,[2014] AS 'SP LAS LINKS SCALE 2014-2015'
FROM
(
SELECT
       CAST (SIS_NUMBER AS INT) AS STUDENT_ID
	   --,SCORE_DESCRIPTION
	   ,CASE WHEN DATENAME(month, admin_date) IN ('AUGUST','SEPTEMBER','OCTOBER','NOVEMBER','DECEMBER') THEN CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT) ELSE CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT)-1 END  AS SY
       ,SCORES.TEST_SCORE
FROM
       rev.EPC_STU_TEST AS StudentTest

       JOIN
       rev.EPC_TEST_PART AS PART
       ON StudentTest.TEST_GU = PART.TEST_GU

       JOIN
       rev.EPC_STU_TEST_PART AS STU_PART
       ON PART.TEST_PART_GU = STU_PART.TEST_PART_GU
       AND STU_PART.STUDENT_TEST_GU = StudentTest.STUDENT_TEST_GU

    INNER JOIN
    rev.EPC_STU_TEST_PART_SCORE AS SCORES
    ON
    SCORES.STU_TEST_PART_GU = STU_PART.STU_TEST_PART_GU

    LEFT JOIN
    rev.EPC_TEST_SCORE_TYPE AS SCORET
    ON
    SCORET.TEST_GU = StudentTest.TEST_GU
    AND SCORES.TEST_SCORE_TYPE_GU = SCORET.TEST_SCORE_TYPE_GU

    LEFT JOIN
    rev.EPC_TEST_DEF_SCORE AS SCORETDEF
    ON
    SCORETDEF.TEST_DEF_SCORE_GU = SCORET.TEST_DEF_SCORE_GU

       LEFT JOIN
       rev.EPC_TEST AS TEST
       ON TEST.TEST_GU = StudentTest.TEST_GU

       INNER JOIN
       rev.EPC_STU AS Student
       ON Student.STUDENT_GU = StudentTest.STUDENT_GU

       INNER JOIN
       rev.REV_PERSON AS Person
       ON Person.PERSON_GU = StudentTest.STUDENT_GU
WHERE
1 = 1
AND TEST_NAME = 'SP-LAS-LINKS'
AND SCORE_DESCRIPTION = 'SCALE'
)AS LAS_LINKS

PIVOT
	(MAX([TEST_SCORE]) FOR SY IN ([2009],[2010],[2011],[2012],[2013],[2014])) AS UP1
WHERE 1 = 1
) 


,SP_LAS_LINKS_OVERALL AS
(
SELECT 
	STUDENT_ID
	,[2009] AS 'SP LAS LINKS OVERALL LP 2009-2010'
	,[2010] AS 'SP LAS LINKS OVERALL LP 2010-2011'
	,[2011] AS 'SP LAS LINKS OVERALL LP 2011-2012'
	,[2012] AS 'SP LAS LINKS OVERALL LP 2012-2013'
	,[2013] AS 'SP LAS LINKS OVERALL LP 2013-2014'
	,[2014] AS 'SP LAS LINKS OVERALL LP 2014-2015'
FROM
(
SELECT
       CAST (SIS_NUMBER AS INT) AS STUDENT_ID
	   --,SCORE_DESCRIPTION
	   ,CASE WHEN DATENAME(month, admin_date) IN ('AUGUST','SEPTEMBER','OCTOBER','NOVEMBER','DECEMBER') THEN CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT) ELSE CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT)-1 END  AS SY
       --,SCORES.TEST_SCORE
	   ,PERFORMANCE_LEVEL
FROM
       rev.EPC_STU_TEST AS StudentTest

       JOIN
       rev.EPC_TEST_PART AS PART
       ON StudentTest.TEST_GU = PART.TEST_GU

       JOIN
       rev.EPC_STU_TEST_PART AS STU_PART
       ON PART.TEST_PART_GU = STU_PART.TEST_PART_GU
       AND STU_PART.STUDENT_TEST_GU = StudentTest.STUDENT_TEST_GU

    INNER JOIN
    rev.EPC_STU_TEST_PART_SCORE AS SCORES
    ON
    SCORES.STU_TEST_PART_GU = STU_PART.STU_TEST_PART_GU

    LEFT JOIN
    rev.EPC_TEST_SCORE_TYPE AS SCORET
    ON
    SCORET.TEST_GU = StudentTest.TEST_GU
    AND SCORES.TEST_SCORE_TYPE_GU = SCORET.TEST_SCORE_TYPE_GU

    LEFT JOIN
    rev.EPC_TEST_DEF_SCORE AS SCORETDEF
    ON
    SCORETDEF.TEST_DEF_SCORE_GU = SCORET.TEST_DEF_SCORE_GU

       LEFT JOIN
       rev.EPC_TEST AS TEST
       ON TEST.TEST_GU = StudentTest.TEST_GU

       INNER JOIN
       rev.EPC_STU AS Student
       ON Student.STUDENT_GU = StudentTest.STUDENT_GU

       INNER JOIN
       rev.REV_PERSON AS Person
       ON Person.PERSON_GU = StudentTest.STUDENT_GU
WHERE
1 = 1
AND TEST_NAME = 'SP-LAS-LINKS'
AND SCORE_DESCRIPTION = 'Overall LP'
)AS LAS_LINKS

PIVOT
	(MAX([PERFORMANCE_LEVEL]) FOR SY IN ([2009],[2010],[2011],[2012],[2013],[2014])) AS UP1
)

,SP_LAS_LINKS_OVERALL_NUMBER AS
(
SELECT 
	STUDENT_ID
	,[2009] AS 'SP LAS LINKS OVERALL NUM 2009-2010'
	,[2010] AS 'SP LAS LINKS OVERALL NUM 2010-2011'
	,[2011] AS 'SP LAS LINKS OVERALL NUM 2011-2012'
	,[2012] AS 'SP LAS LINKS OVERALL NUM 2012-2013'
	,[2013] AS 'SP LAS LINKS OVERALL NUM 2013-2014'
	,[2014] AS 'SP LAS LINKS OVERALL NUM 2014-2015'
	,SCORE_DESCRIPTION
FROM
(
SELECT
       CAST (SIS_NUMBER AS INT) AS STUDENT_ID
	   --,SCORE_DESCRIPTION
	   ,CASE WHEN DATENAME(month, admin_date) IN ('AUGUST','SEPTEMBER','OCTOBER','NOVEMBER','DECEMBER') THEN CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT) ELSE CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT)-1 END  AS SY
       ,SCORES.TEST_SCORE
	   ,SCORE_DESCRIPTION
FROM
       rev.EPC_STU_TEST AS StudentTest

       JOIN
       rev.EPC_TEST_PART AS PART
       ON StudentTest.TEST_GU = PART.TEST_GU

       JOIN
       rev.EPC_STU_TEST_PART AS STU_PART
       ON PART.TEST_PART_GU = STU_PART.TEST_PART_GU
       AND STU_PART.STUDENT_TEST_GU = StudentTest.STUDENT_TEST_GU

    INNER JOIN
    rev.EPC_STU_TEST_PART_SCORE AS SCORES
    ON
    SCORES.STU_TEST_PART_GU = STU_PART.STU_TEST_PART_GU

    LEFT JOIN
    rev.EPC_TEST_SCORE_TYPE AS SCORET
    ON
    SCORET.TEST_GU = StudentTest.TEST_GU
    AND SCORES.TEST_SCORE_TYPE_GU = SCORET.TEST_SCORE_TYPE_GU

    LEFT JOIN
    rev.EPC_TEST_DEF_SCORE AS SCORETDEF
    ON
    SCORETDEF.TEST_DEF_SCORE_GU = SCORET.TEST_DEF_SCORE_GU

       LEFT JOIN
       rev.EPC_TEST AS TEST
       ON TEST.TEST_GU = StudentTest.TEST_GU

       INNER JOIN
       rev.EPC_STU AS Student
       ON Student.STUDENT_GU = StudentTest.STUDENT_GU

       INNER JOIN
       rev.REV_PERSON AS Person
       ON Person.PERSON_GU = StudentTest.STUDENT_GU
WHERE
1 = 1
AND TEST_NAME = 'SP-LAS-LINKS'
AND SCORE_DESCRIPTION = 'Overall LP'
)AS LAS_LINKS

PIVOT
	(MAX([TEST_SCORE]) FOR SY IN ([2009],[2010],[2011],[2012],[2013],[2014])) AS UP1
WHERE 1 = 1
) 

, SP_PRE_LAS_PL AS
(
SELECT
	STUDENT_ID
	,[2009] AS 'SP PRE LAS PL 2009-2010'
	,[2010] AS 'SP PRE LAS PL 2010-2011'
	,[2011] AS 'SP PRE LAS PL 2011-2012'
	,[2012] AS 'SP PRE LAS PL 2012-2013'
	,[2013] AS 'SP PRE LAS PL 2013-2014'
	,[2014] AS 'SP PRE LAS PL 2014-2015'
FROM
(
SELECT
       CAST (SIS_NUMBER AS INT) AS STUDENT_ID
	   --,SCORE_DESCRIPTION
	   ,CASE WHEN DATENAME(month, admin_date) IN ('AUGUST','SEPTEMBER','OCTOBER','NOVEMBER','DECEMBER') THEN CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT) ELSE CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT)-1 END  AS SY
       ,SCORES.TEST_SCORE
	   --,TEST_NAME
	   --,PERFORMANCE_LEVEL
FROM
       rev.EPC_STU_TEST AS StudentTest

       JOIN
       rev.EPC_TEST_PART AS PART
       ON StudentTest.TEST_GU = PART.TEST_GU

       JOIN
       rev.EPC_STU_TEST_PART AS STU_PART
       ON PART.TEST_PART_GU = STU_PART.TEST_PART_GU
       AND STU_PART.STUDENT_TEST_GU = StudentTest.STUDENT_TEST_GU

    INNER JOIN
    rev.EPC_STU_TEST_PART_SCORE AS SCORES
    ON
    SCORES.STU_TEST_PART_GU = STU_PART.STU_TEST_PART_GU

    LEFT JOIN
    rev.EPC_TEST_SCORE_TYPE AS SCORET
    ON
    SCORET.TEST_GU = StudentTest.TEST_GU
    AND SCORES.TEST_SCORE_TYPE_GU = SCORET.TEST_SCORE_TYPE_GU

    LEFT JOIN
    rev.EPC_TEST_DEF_SCORE AS SCORETDEF
    ON
    SCORETDEF.TEST_DEF_SCORE_GU = SCORET.TEST_DEF_SCORE_GU

       LEFT JOIN
       rev.EPC_TEST AS TEST
       ON TEST.TEST_GU = StudentTest.TEST_GU

       INNER JOIN
       rev.EPC_STU AS Student
       ON Student.STUDENT_GU = StudentTest.STUDENT_GU

       INNER JOIN
       rev.REV_PERSON AS Person
       ON Person.PERSON_GU = StudentTest.STUDENT_GU
WHERE
1 = 1
AND TEST_NAME = 'SP-PRE-LAS'
)AS LAS_LINKS

PIVOT
	(MAX([TEST_SCORE]) FOR SY IN ([2009],[2010],[2011],[2012],[2013],[2014])) AS UP1
) 
,SP_PRE_LAS_RAW AS 
(
SELECT
	STUDENT_ID
	,[2009] AS 'SP PRE LAS RAW 2009-2010'
	,[2010] AS 'SP PRE LAS RAW 2010-2011'
	,[2011] AS 'SP PRE LAS RAW 2011-2012'
	,[2012] AS 'SP PRE LAS RAW 2012-2013'
	,[2013] AS 'SP PRE LAS RAW 2013-2014'
	,[2014] AS 'SP PRE LAS RAW 2014-2015'
FROM
(
SELECT
       CAST (SIS_NUMBER AS INT) AS STUDENT_ID
	   --,SCORE_DESCRIPTION
	   ,CASE WHEN DATENAME(month, admin_date) IN ('AUGUST','SEPTEMBER','OCTOBER','NOVEMBER','DECEMBER') THEN CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT) ELSE CAST(LEFT(CONVERT(VARCHAR ,ADMIN_DATE,121),4) AS INT)-1 END  AS SY
       --,SCORES.TEST_SCORE
	   ,TEST_NAME
	   ,PERFORMANCE_LEVEL
FROM
       rev.EPC_STU_TEST AS StudentTest

       JOIN
       rev.EPC_TEST_PART AS PART
       ON StudentTest.TEST_GU = PART.TEST_GU

       JOIN
       rev.EPC_STU_TEST_PART AS STU_PART
       ON PART.TEST_PART_GU = STU_PART.TEST_PART_GU
       AND STU_PART.STUDENT_TEST_GU = StudentTest.STUDENT_TEST_GU

    INNER JOIN
    rev.EPC_STU_TEST_PART_SCORE AS SCORES
    ON
    SCORES.STU_TEST_PART_GU = STU_PART.STU_TEST_PART_GU

    LEFT JOIN
    rev.EPC_TEST_SCORE_TYPE AS SCORET
    ON
    SCORET.TEST_GU = StudentTest.TEST_GU
    AND SCORES.TEST_SCORE_TYPE_GU = SCORET.TEST_SCORE_TYPE_GU

    LEFT JOIN
    rev.EPC_TEST_DEF_SCORE AS SCORETDEF
    ON
    SCORETDEF.TEST_DEF_SCORE_GU = SCORET.TEST_DEF_SCORE_GU

       LEFT JOIN
       rev.EPC_TEST AS TEST
       ON TEST.TEST_GU = StudentTest.TEST_GU

       INNER JOIN
       rev.EPC_STU AS Student
       ON Student.STUDENT_GU = StudentTest.STUDENT_GU

       INNER JOIN
       rev.REV_PERSON AS Person
       ON Person.PERSON_GU = StudentTest.STUDENT_GU
WHERE
1 = 1
AND TEST_NAME = 'SP-PRE-LAS'
)AS LAS_LINKS

PIVOT
	(MAX([PERFORMANCE_LEVEL]) FOR SY IN ([2009],[2010],[2011],[2012],[2013],[2014])) AS UP1
)
,ACCESS_SCALE AS
(
SELECT
	STUDENT_ID
	,CAST ([2009] AS VARCHAR)  AS 'ACCESS SCALE 2009-2010'
	,CAST ([2010] AS VARCHAR) AS 'ACCESS SCALE 2010-2011'
	,CAST ([2011] AS VARCHAR) AS 'ACCESS SCALE 2011-2012'
	,CAST ([2012] AS VARCHAR) AS 'ACCESS SCALE 2012-2013'
	,CAST ([2013] AS VARCHAR) AS 'ACCESS SCALE 2013-2014'
	,CAST ([2014] AS VARCHAR) AS 'ACCESS SCALE 2014-2015'
FROM
(
SELECT 
    STUDENT_ID
    ,TEST_PRODUCT 
    ,TEST_SUBJECT AS CONTENT_AREA
    ,TEST_SCORE_VALUE AS SCORE
    --,TEST_PRIMARY_RESULT AS PERFORMANCE_LEVEL
	,SIS_SCHOOL_YEAR
FROM [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.FTBL_TEST_SCORES
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_TESTS
ON DTBL_TESTS.TESTS_KEY = FTBL_TEST_SCORES.TESTS_KEY 
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_STUDENTS 
ON DTBL_STUDENTS.STUDENT_KEY = FTBL_TEST_SCORES.STUDENT_KEY 
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_SCHOOLS
ON DTBL_SCHOOLS.SCHOOL_KEY = FTBL_TEST_SCORES.SCHOOL_KEY
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_CALENDAR_DATES
ON DTBL_CALENDAR_DATES.CALENDAR_DATE_KEY= FTBL_TEST_SCORES.CALENDAR_DATE_KEY
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_SCHOOL_DATES
ON DTBL_SCHOOL_DATES.SCHOOL_DATES_KEY = FTBL_TEST_SCORES.SCHOOL_DATES_KEY 
WHERE TEST_PRODUCT = 'ACCESS'
AND TEST_SUBJECT = 'OVERALL'
--AND LOCAL_SCHOOL_YEAR = '2009-2010'
) AS ACC
PIVOT
	(MAX([SCORE]) FOR SIS_SCHOOL_YEAR IN ([2009],[2010],[2011],[2012],[2013],[2014],[2015])) AS UP1
)
,ACCESS_PL AS
(
SELECT
	STUDENT_ID
	,[2009] AS 'ACCESS PL 2009-2010'
	,[2010] AS 'ACCESS PL 2010-2011'
	,[2011] AS 'ACCESS PL 2011-2012'
	,[2012] AS 'ACCESS PL 2012-2013'
	,[2013] AS 'ACCESS PL 2013-2014'
	,[2014] AS 'ACCESS PL 2014-2015'
FROM
(
SELECT 
    STUDENT_ID
    ,TEST_PRODUCT 
    ,TEST_SUBJECT AS CONTENT_AREA
    --,TEST_SCORE_VALUE AS SCORE
    ,TEST_PRIMARY_RESULT AS PL
	,SIS_SCHOOL_YEAR
FROM [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.FTBL_TEST_SCORES
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_TESTS
ON DTBL_TESTS.TESTS_KEY = FTBL_TEST_SCORES.TESTS_KEY 
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_STUDENTS 
ON DTBL_STUDENTS.STUDENT_KEY = FTBL_TEST_SCORES.STUDENT_KEY 
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_SCHOOLS
ON DTBL_SCHOOLS.SCHOOL_KEY = FTBL_TEST_SCORES.SCHOOL_KEY
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_CALENDAR_DATES
ON DTBL_CALENDAR_DATES.CALENDAR_DATE_KEY= FTBL_TEST_SCORES.CALENDAR_DATE_KEY
INNER JOIN [VERSIFIT.APS.EDU.ACTD].K12INTEL.K12INTEL_DW.DTBL_SCHOOL_DATES
ON DTBL_SCHOOL_DATES.SCHOOL_DATES_KEY = FTBL_TEST_SCORES.SCHOOL_DATES_KEY 
WHERE TEST_PRODUCT = 'ACCESS'
AND TEST_SUBJECT = 'OVERALL'
--AND LOCAL_SCHOOL_YEAR = '2009-2010'
) AS ACC
PIVOT
	(MAX([PL]) FOR SIS_SCHOOL_YEAR IN ([2009],[2010],[2011],[2012],[2013],[2014],[2015])) AS UP1
)
,STU_GRADE AS
(
SELECT
	student_id
	,CASE WHEN [2009] IS NULL THEN 'Missing' ELSE [2009] END AS 'Current Grade 2009-2010'
	,CASE WHEN [2010] IS NULL THEN 'Missing' ELSE [2010] END AS 'Current Grade 2010-2011'
	,CASE WHEN [2011] IS NULL THEN 'Missing' ELSE [2011] END AS 'Current Grade 2011-2012'
	,CASE WHEN [2012] IS NULL THEN 'Missing' ELSE [2012] END AS 'Current Grade 2012-2013'
	,CASE WHEN [2013] IS NULL THEN 'Missing' ELSE [2013] END AS 'Current Grade 2013-2014'
	,CASE WHEN [2014] IS NULL THEN 'Missing' ELSE [2014] END AS 'Current Grade 2014-2015'
FROM
(
SELECT 
	ENR.SIS_NUMBER AS student_id
	,GRADE AS grade
	,ENR.SCHOOL_YEAR

FROM
	APS.StudentEnrollmentDetails AS ENR WITH (NOLOCK)
	LEFT JOIN
	rev.EPC_STU AS STU WITH (NOLOCK)
	ON ENR.SIS_NUMBER = STU.SIS_NUMBER

	LEFT JOIN
	rev.REV_PERSON AS PER WITH (NOLOCK)
	ON PER.PERSON_GU = STU.STUDENT_GU

	LEFT JOIN
	APS.BasicStudentWithMoreInfo AS BS WITH (NOLOCK)
	ON BS.SIS_NUMBER = ENR.SIS_NUMBER
WHERE 
	1 = 1
	AND EXTENSION = 'R'
	AND SCHOOL_YEAR IN ('2009','2010','2011','2012','2013','2014')
	--AND ENR.LEAVE_DATE IS NULL
	AND ENR.EXCLUDE_ADA_ADM IS NULL
	AND ENR.ENTER_DATE IS NOT NULL
) AS SG

PIVOT
	(MAX([grade]) FOR school_year IN ([2009],[2010],[2011],[2012],[2013],[2014])) AS UP1
WHERE [2009] = 'K' OR [2010] = 'K'
) 

SELECT
	STUDENT.STATE_STUDENT_NUMBER
	,[Current Grade 2009-2010]
	,[Current Grade 2010-2011]
	,[Current Grade 2011-2012]
	,[Current Grade 2012-2013]
	,[Current Grade 2013-2014]
	,[Current Grade 2014-2015]
	,CASE WHEN [ACCESS SCALE 2009-2010] IS NULL THEN 'Missing' ELSE [ACCESS SCALE 2009-2010] END AS 'English Proficiency SCALE 2009-2010'
	,CASE WHEN [ACCESS PL 2009-2010] IS NULL THEN 'Missing' ELSE [ACCESS PL 2009-2010] END AS 'English Proficiency PL 2009-2010'
	,CASE WHEN [ACCESS SCALE 2010-2011] IS NULL THEN 'Missing' ELSE [ACCESS SCALE 2010-2011] END AS 'English Proficiency SCALE 2010-2011'
	,CASE WHEN [ACCESS PL 2010-2011] IS NULL THEN 'Missing' ELSE [ACCESS PL 2010-2011] END AS 'English Proficiency PL 2010-2011'
	,CASE WHEN [ACCESS SCALE 2011-2012] IS NULL THEN 'Missing' ELSE [ACCESS SCALE 2011-2012] END AS 'English Proficiency SCALE 2011-2012'
	,CASE WHEN [ACCESS PL 2011-2012] IS NULL THEN 'Missing' ELSE [ACCESS PL 2011-2012] END AS 'English Proficiency PL 2011-2012'
	,CASE WHEN [ACCESS SCALE 2012-2013] IS NULL THEN 'Missing' ELSE [ACCESS SCALE 2012-2013] END AS 'English Proficiency SCALE 2012-2013'
	,CASE WHEN [ACCESS PL 2012-2013] IS NULL THEN 'Missing' ELSE [ACCESS PL 2012-2013] END AS 'English Proficiency PL 2012-2013'
	,CASE WHEN [ACCESS SCALE 2013-2014] IS NULL THEN 'Missing' ELSE [ACCESS SCALE 2013-2014] END AS 'English Proficiency SCALE 2013-2014'
	,CASE WHEN [ACCESS PL 2013-2014] IS NULL THEN 'Missing' ELSE [ACCESS PL 2013-2014] END AS 'English Proficiency PL 2013-2014'
	,CASE WHEN [ACCESS SCALE 2014-2015] IS NULL THEN 'Missing' ELSE [ACCESS SCALE 2014-2015] END AS 'English Proficiency SCALE 2014-2015'
	,CASE WHEN [ACCESS PL 2014-2015] IS NULL THEN 'Missing' ELSE [ACCESS PL 2014-2015] END AS 'English Proficiency PL 2014-2015'

	,CASE WHEN [SP LAS LINKS SCALE 2009-2010] IS NULL THEN 'Missing' ELSE [SP LAS LINKS SCALE 2009-2010] END AS 'SP_LAS_LINKS_SCALE 2009-2010'
	,CASE WHEN [SP LAS LINKS OVERALL LP 2009-2010] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL LP 2009-2010] END AS 'SP_LAS_LINKS_OVERALL 2009-2010'
	,CASE WHEN [SP LAS LINKS OVERALL NUM 2009-2010] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL NUM 2009-2010] END AS 'SP_LAS_LINKS_OVERALL_NUMERIC 2009-2010'
	,CASE WHEN [SP LAS LINKS SCALE 2010-2011] IS NULL THEN 'Missing' ELSE [SP LAS LINKS SCALE 2010-2011] END AS 'SP_LAS_LINKS_SCALE 2010-2011'
	,CASE WHEN [SP LAS LINKS OVERALL LP 2010-2011] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL LP 2010-2011] END AS 'SP_LAS_OVERALL 2010-2011'
	,CASE WHEN [SP LAS LINKS OVERALL NUM 2010-2011] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL NUM 2010-2011] END AS 'SP_LAS_LINKS_OVERALL_NUMERIC 2010-2011'
	,CASE WHEN [SP LAS LINKS SCALE 2011-2012] IS NULL THEN 'Missing' ELSE [SP LAS LINKS SCALE 2011-2012] END AS 'SP_LAS_LINKS_SCALE 2011-2012'
	,CASE WHEN [SP LAS LINKS OVERALL LP 2011-2012] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL LP 2011-2012] END AS 'SP_LAS_LINKS_OVERALL 2011-2012'
	,CASE WHEN [SP LAS LINKS OVERALL NUM 2011-2012] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL NUM 2011-2012] END AS 'SP_LAS_LINKS_OVERALL_NUMERIC 2011-2012'
	,CASE WHEN [SP LAS LINKS SCALE 2012-2013] IS NULL THEN 'Missing' ELSE [SP LAS LINKS SCALE 2012-2013] END AS 'SP_LAS_LINKS_SCALE 2012-2013'
	,CASE WHEN [SP LAS LINKS OVERALL LP 2012-2013] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL LP 2012-2013] END AS 'SP_LAS_LINKS_OVERALL 2012-2013'
	,CASE WHEN [SP LAS LINKS OVERALL NUM 2012-2013] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL NUM 2012-2013] END AS 'SP_LAS_LINKS_OVERALL_NUMERIC 2012-2013'
	,CASE WHEN [SP LAS LINKS SCALE 2013-2014] IS NULL THEN 'Missing' ELSE [SP LAS LINKS SCALE 2013-2014] END AS 'SP_LAS_LINKS_SCALE 2013-2014'
	,CASE WHEN [SP LAS LINKS OVERALL LP 2013-2014] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL LP 2013-2014] END AS 'SP_LAS_LINKS_OVERALL 2013-2014'
	,CASE WHEN [SP LAS LINKS OVERALL NUM 2013-2014] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL NUM 2013-2014] END AS 'SP_LAS_LINKS_OVERALL_NUMERIC 2013-2014'
	,CASE WHEN [SP LAS LINKS SCALE 2014-2015] IS NULL THEN 'Missing' ELSE [SP LAS LINKS SCALE 2014-2015] END AS 'SP_LAS_LINKS_SCALE 2014-2015'
	,CASE WHEN [SP LAS LINKS OVERALL LP 2014-2015] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL LP 2014-2015] END AS 'SP_LAS_LINKS_SCALE 2014-2015'
	,CASE WHEN [SP LAS LINKS OVERALL NUM 2014-2015] IS NULL THEN 'Missing' ELSE [SP LAS LINKS OVERALL NUM 2014-2015] END AS 'SP_LAS_LINKS_OVERALL_NUMERIC 2014-2015'
	,CASE WHEN [SP PRE LAS RAW 2009-2010] IS NULL THEN 'Missing' ELSE [SP PRE LAS RAW 2009-2010] END AS 'SP_PRE_LAS_RAW 2009-2010'
	,CASE WHEN [SP PRE LAS PL 2009-2010] IS NULL THEN 'Missing' ELSE [SP PRE LAS PL 2009-2010] END AS 'SP_PRE_LAS_PL 2009-2010'
	,CASE WHEN [SP PRE LAS RAW 2010-2011] IS NULL THEN 'Missing' ELSE [SP PRE LAS RAW 2010-2011] END AS 'SP_PRE_LAS_RAW 2010-2011'
	,CASE WHEN [SP PRE LAS PL 2010-2011] IS NULL THEN 'Missing' ELSE [SP PRE LAS PL 2010-2011] END AS 'SP_PRE_LAS_PL 2010-2011'
	,CASE WHEN [SP PRE LAS RAW 2011-2012] IS NULL THEN 'Missing' ELSE [SP PRE LAS RAW 2011-2012] END AS 'SP_PRE_LAS_RAW 2011-2012'
	,CASE WHEN [SP PRE LAS PL 2011-2012] IS NULL THEN 'Missing' ELSE [SP PRE LAS PL 2011-2012] END AS 'SP_PRE_LAS_PL 2011-2012'
	,CASE WHEN [SP PRE LAS RAW 2012-2013] IS NULL THEN 'Missing' ELSE [SP PRE LAS RAW 2012-2013] END AS 'SP_PRE_LAS_RAW 2012-2013'
	,CASE WHEN [SP PRE LAS PL 2012-2013] IS NULL THEN 'Missing' ELSE [SP PRE LAS PL 2012-2013] END AS 'SP_PRE_LAS_PL 2012-2013'
	,CASE WHEN [SP PRE LAS RAW 2013-2014] IS NULL THEN 'Missing' ELSE [SP PRE LAS RAW 2013-2014] END AS 'SP_PRE_LAS_RAW 2013-2014'
	,CASE WHEN [SP PRE LAS PL 2013-2014] IS NULL THEN 'Missing' ELSE [SP PRE LAS PL 2013-2014] END AS 'SP_PRE_LAS_PL 2013-2014'
	,CASE WHEN [SP PRE LAS RAW 2014-2015] IS NULL THEN 'Missing' ELSE [SP PRE LAS RAW 2014-2015] END AS 'SP_PRE_LAS_RAW 2014-2015'
	,CASE WHEN [SP PRE LAS PL 2014-2015] IS NULL THEN 'Missing' ELSE [SP PRE LAS PL 2014-2015] END AS 'SP_PRE_LAS_PL 2014-2015'
FROM
	stu_grade
LEFT JOIN
	SP_LAS_LINKS_SCALE 
	ON STU_GRADE.student_id = SP_LAS_LINKS_SCALE.STUDENT_ID
LEFT JOIN
	SP_LAS_LINKS_OVERALL
	ON STU_GRADE.student_id = SP_LAS_LINKS_OVERALL.STUDENT_ID
LEFT JOIN
	SP_LAS_LINKS_OVERALL_NUMBER
	ON SP_LAS_LINKS_OVERALL_NUMBER.STUDENT_ID = STU_GRADE.student_id
LEFT JOIN
	SP_PRE_LAS_RAW
	ON STU_GRADE.student_id = SP_PRE_LAS_RAW.STUDENT_ID
LEFT JOIN
	SP_PRE_LAS_PL
	ON STU_GRADE.student_id = SP_PRE_LAS_PL.STUDENT_ID
LEFT JOIN
	REV.EPC_STU AS STUDENT
	ON STU_GRADE.student_id = STUDENT.SIS_NUMBER
LEFT JOIN
	ACCESS_SCALE
	ON STU_GRADE.student_id = ACCESS_SCALE.STUDENT_ID
LEFT JOIN
	ACCESS_PL
	ON STU_GRADE.student_id = ACCESS_PL.STUDENT_ID
WHERE STATE_STUDENT_NUMBER IS NOT NULL
--and STATE_STUDENT_NUMBER = '862135423'
order by [SP PRE LAS PL 2012-2013] desc
--ORDER BY STUDENT.STATE_STUDENT_NUMBER