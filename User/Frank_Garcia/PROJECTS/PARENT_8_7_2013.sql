

/**
 * 
 * $LastChangedBy: Frank Garcia
 * $LastChangedDate: 6/14/2013 $
 *
 * Request By: SYNERGY CONVERSION
 * InitialRequestDate: 
 * 
 * Initial Request:
 * 
 * PARENT TEMPLATE CONVERSION
 * 
 *
 *	NOTES:  Synergy Parent template spells CUSTODY 'CUSTORY'
 *			Zip Codes are 5 digets
 *			
 *			4/25/2013 Changed query to update table instead to temporary table.
 *			5/14/2013 Changed GOODDWELL and GOODMAIL: Put conditions in join instead of sub-select
 *					  Made changes to eliminate NULL parent names
 *					  Made changes to eliminate duplicate phone numbers
 *					  Made changes to bad phone types
 *					  Made changes to area codes looking for 00 
 *			6/14/2013 Removed GOODDWELL and GOODMAIL comparison, added update for comparison  
 *			8/5/2013  Removed HOME_ADDRESS and MAIL_ADDRESS SQL and added join to student table to get ADDRESS and MAIL ADDRESS
 *
 */

USE
master
GO


TRUNCATE TABLE SynergyConversion.dbo.Parent

-- I TRIED USING THIS TEMP TABLE FOR RELATION. I LOST ALL RELATION_TYPE CODES. I WILL TRY AGAIN.
/*
-- CROSSWALK FOR FAMILY RELATION --
DECLARE @RELATION_CROSSWALK TABLE
	(
	SYNCERGY_CODE NVARCHAR (5)
	,SMAX_CODE NVARCHAR (5)
	)
INSERT INTO
	@RELATION_CROSSWALK
	VALUES
	('01','G')
	,('08','O')
	,('10','M')
	,('11','F')
	,('12','SF')
	,('13','SM')
	,('14','FF')
	,('15','FM')
	,('16','GF')
	,('17','GM')
	,('18','U')
	,('19','A')
	,('20','FA')
	,('21','CA')
	,('22','C')
	,('23','EC')
	,('24','S')
	,('25','AR')
	,('26','FEX')
*/		

INSERT INTO 
	SMAXDBPROD.SynergyConversion.dbo.Parent
		
SELECT
	SIS_NUMBER
	,RELATION_TYPE
	,LAST_NAME
	,FIRST_NAME
	,MIDDLE_NAME
	,SUFFIX
	,HOME_ADDRESS
	,HOME_CITY
	,HOME_STATE
	,HOME_ZIPCODE
	,MAIL_ADDRESS
	,MAIL_CITY
	,MAIL_STATE
	,MAIL_ZIPCODE
    ,PHONE
	,PHONE_TYPE
	,PHONE_EXTN
	,PHONE_LISTED
	,PHONE_CONTACT
	,PHONE_PRIMARY
	,PHONE2
	,PHONE2_TYPE
	,PHONE2_EXTN
	,PHONE2_LISTED
	,PHONE2_CONTACT
	,PHONE2_PRIMARY
	,PHONE3
	,PHONE3_TYPE
	,PHONE3_EXTN
	,PHONE3_LISTED
	,PHONE3_CONTACT
	,PHONE3_PRIMARY
	,PHONE4
	,PHONE4_TYPE
	,PHONE4_EXTN
	,PHONE4_LISTED
	,PHONE4_CONTACT
	,PHONE4_PRIMARY
	,GENDER
	,ETHNIC_CODE
	,RACE1
	,RACE2
	,RACE3
	,RACE4
	,RACE5
	,HISPANIC_INDICATOR
	,BIRTHDATE
	,BIRTHPLACE
	,SOCIAL_SECURITY_NUMBER
	,PRIMARY_LANGUAGE
	,US_CITIZEN
	,E_MAIL
	,TITLE
	,EMPLOYER
	,JOB_TITLE
	,ADDITIONALINFO
	,COMMENT
	,CONTACT_ALLOWED
	,EDUCATIONAL_RIGHTS
	,HAS_CUSTORY
	,LIVES_WITH
	,MAILINGS_ALLOWED
	,ORDERBY 
	,EDUCATION_CODE
	,WORK_ADDRESS
	,WORK_CITY
	,WORK_STATE
	,WORK_ZIPCODE
	,FEEDER_DISTRICT_ID
	,FEEDER_STUDENT_ID
	,RELEASE_TO
	,ENROLLING_PARENT
	,DI_Family_NBR
	,DI_Family_Id 

	
FROM
	(
		SELECT
		PARENT.HH_NBR AS ORDERBY
		,FAMILY.ID_NBR AS SIS_NUMBER
		,STUD_ADDRESS.DI_Family_Id 
		
		-- As per Jude Garcia, family members whose relationship is blank should be given the caregiver relationhip
		,CASE
			WHEN PARENT.HH_NBR = 1 AND FAMILY.RLTN_HH1 != 0  THEN 
				CASE FAMILY.RLTN_HH1
					WHEN '01' THEN 'G'
					WHEN '08' THEN 'O'
					WHEN '10' THEN 'M'
					WHEN '11' THEN 'F'
					WHEN '12' THEN 'SF'
					WHEN '13' THEN 'SM'
					WHEN '14' THEN 'FF'
					WHEN '15' THEN 'FM'
					WHEN '16' THEN 'GF'
					WHEN '17' THEN 'GM'
					WHEN '18' THEN 'U'
					WHEN '19' THEN 'A'
					WHEN '20' THEN 'FA'
					WHEN '21' THEN 'CA'
					WHEN '22' THEN 'C'
					WHEN '23' THEN 'EC'
					WHEN '24' THEN 'S'
					WHEN '25' THEN 'AR'
					WHEN '26' THEN 'FEX'
				END			
			WHEN PARENT.HH_NBR = 2 AND FAMILY.RLTN_HH2 != 0  THEN 
				CASE FAMILY.RLTN_HH2
					WHEN '01' THEN 'G'
					WHEN '08' THEN 'O'
					WHEN '10' THEN 'M'
					WHEN '11' THEN 'F'
					WHEN '12' THEN 'SF'
					WHEN '13' THEN 'SM'
					WHEN '14' THEN 'FF'
					WHEN '15' THEN 'FM'
					WHEN '16' THEN 'GF'
					WHEN '17' THEN 'GM'
					WHEN '18' THEN 'U'
					WHEN '19' THEN 'A'
					WHEN '20' THEN 'FA'
					WHEN '21' THEN 'CA'
					WHEN '22' THEN 'C'
					WHEN '23' THEN 'EC'
					WHEN '24' THEN 'S'
					WHEN '25' THEN 'AR'
					WHEN '26' THEN 'FEX'
					END			
			ELSE 'C'
			END
			AS RELATION_TYPE
			
		--,FAMILY.RLTN_HH2  -- FOR INFORMATIONAL PURPOSES
		--,FAMILY.HH_LGL  -- FOR INFORMATIONAL PURPOSES
		,CASE 
			WHEN PARENT.LST_NME = '' THEN 'NO NAME'
			WHEN PARENT.LST_NME LIKE '%HELP D%' THEN 'NO NAME' 
			WHEN PARENT.LST_NME IS NULL  THEN 'NO NAME'
			ELSE (PARENT.LST_NME) 
		END
		AS LAST_NAME
		
		,CASE 
			WHEN PARENT.FRST_NME = '' THEN 'NO NAME'
			WHEN PARENT.FRST_NME IS NULL THEN 'NO NAME'
			ELSE (PARENT.FRST_NME) 
		END
		AS FIRST_NAME
		,PARENT.M_NME AS MIDDLE_NAME
		,'' AS SUFFIX
		
		,STUD_ADDRESS.HOME_ADDRESS AS HOME_ADDRESS
		,STUD_ADDRESS.HOME_CITY AS HOME_CITY
		,STUD_ADDRESS.HOME_STATE AS HOME_STATE
		,STUD_ADDRESS.HOME_ZIPCODE AS HOME_ZIPCODE
		,STUD_ADDRESS.MAIL_ADDRESS AS MAIL_ADDRESS
		,STUD_ADDRESS.MAIL_CITY AS MAIL_CITY
		,STUD_ADDRESS.MAIL_STATE AS MAIL_STATE
		,STUD_ADDRESS.MAIL_ZIPCODE AS MAIL_ZIPCODE
		--,FAMILY.PRIM_FAM AS PRIMARY_FAMILY  -- FOR INFORMATIONAL PURPOSES
		,STUD_ADDRESS.PHONE AS PHONE
		,STUD_ADDRESS.PHONE_TYPE AS PHONE_TYPE
		,STUD_ADDRESS.PHONE_EXTN AS PHONE_EXTN
		,STUD_ADDRESS.PHONE_LISTED AS PHONE_LISTED
		,STUD_ADDRESS.PHONE_CONTACT AS PHONE_CONTACT
		,STUD_ADDRESS.PHONE_PRIMARY AS PHONE_PRIMARY

		,CASE 
			WHEN PARENT.F1_PHNE = 00 THEN '' 
			WHEN PARENT.F1_AREA_CD = 00 THEN ''
			--WHEN PARENT.F1_PHNE = STUD_ADDRESS.PHONE THEN ''
			ELSE (CAST (PARENT.F1_AREA_CD AS VARCHAR (3))+ CAST (PARENT.F1_PHNE AS VARCHAR (7))) 
		END 
		AS PHONE2
			
		,CASE 
			WHEN PARENT.F1_TYPE = 'E' THEN ''
			WHEN PARENT.F1_TYPE = 'T' THEN ''
			WHEN PARENT.F1_AREA_CD = 00 THEN ''
			--WHEN PARENT.F1_PHNE = STUD_ADDRESS.PHONE THEN ''
			ELSE PARENT.F1_TYPE
		END	
		AS PHONE2_TYPE
		,PARENT.F1_PH_EXT AS PHONE2_EXTN
		,'' AS PHONE2_LISTED
		
		,CASE WHEN PARENT.F1_DAY != '' THEN 'Y' ELSE '' END AS PHONE2_CONTACT
			
		,'' AS PHONE2_PRIMARY
		,CASE 
			WHEN PARENT.F2_PHNE = 00 THEN '' 
			--WHEN PARENT.F2_PHNE = STUD_ADDRESS.PHONE THEN ''
			WHEN PARENT.F2_PHNE = PARENT.F1_PHNE THEN ''
			WHEN PARENT.F2_AREA_CD = 00 THEN ''
			ELSE (CAST (PARENT.F2_AREA_CD AS VARCHAR (3))+ CAST (PARENT.F2_PHNE AS VARCHAR (7))) 
		END 
		AS PHONE3
			
		,CASE  
			WHEN PARENT.F2_TYPE = 'E' THEN ''
			WHEN PARENT.F2_TYPE = 'T' THEN ''
			WHEN PARENT.F2_AREA_CD = 00 THEN ''
			--WHEN PARENT.F2_PHNE = STUD_ADDRESS.PHONE THEN ''
			WHEN PARENT.F2_PHNE = PARENT.F1_PHNE THEN ''
			ELSE PARENT.F2_TYPE
		END
		AS PHONE3_TYPE
			
		,'' AS PHONE3_EXTN
		,'' AS PHONE3_LISTED
		,CASE WHEN PARENT.F2_DAY != '' THEN 'Y' ELSE '' END AS PHONE3_CONTACT
		,'' AS PHONE3_PRIMARY
		,CASE 
			WHEN PARENT.F3_PHNE = 00 THEN '' 
			WHEN PARENT.F3_PHNE = PARENT.F1_PHNE THEN ''
			WHEN PARENT.F3_PHNE = PARENT.F2_PHNE THEN ''
			--WHEN PARENT.F3_PHNE = STUD_ADDRESS.PHONE THEN ''
			WHEN PARENT.F3_AREA_CD = 00 THEN ''
			ELSE (CAST (PARENT.F3_AREA_CD AS VARCHAR (3))+ CAST (PARENT.F3_PHNE AS VARCHAR (7))) 
		END 
		AS PHONE4
			
		,CASE  
			WHEN PARENT.F3_TYPE = 'E' THEN 'H'
			WHEN PARENT.F3_TYPE = 'T' THEN 'H'
			WHEN PARENT.F3_AREA_CD = 00 THEN ''
			WHEN PARENT.F3_PHNE = PARENT.F1_PHNE THEN ''
			WHEN PARENT.F3_PHNE = PARENT.F2_PHNE THEN ''
			--WHEN PARENT.F3_PHNE = STUD_ADDRESS.PHONE THEN ''
			ELSE PARENT.F3_TYPE
		END
		AS PHONE4_TYPE
			
		,'' AS PHONE4_EXTN
		,'' AS PHONE4_LISTED
		,CASE WHEN PARENT.F3_DAY != '' THEN 'Y' ELSE '' END AS PHONE4_CONTACT
		,'' AS PHONE4_PRIMARY
		
		,CASE 
			WHEN PARENT.HH_GENDER = '' THEN 'F'
			WHEN PARENT.HH_GENDER = 'N' THEN 'F'
			ELSE PARENT.HH_GENDER
		END 
		AS GENDER
		,'' AS ETHNIC_CODE
		,'' AS RACE1
		,'' AS RACE2
		,'' AS RACE3
		,'' AS RACE4
		,'' AS RACE5
		,'' AS HISPANIC_INDICATOR
		,CASE WHEN PARENT.HH_BRTH != 0
			THEN
			CONVERT (VARCHAR(12),PARENT.HH_BRTH, 112) 
			ELSE '' 
		END 
		AS BIRTHDATE
			
		,'' AS BIRTHPLACE
		,'' AS SOCIAL_SECURITY_NUMBER	
		,RIGHT('00'+ CAST(PARENT.HH_LANG_CD AS VARCHAR),2)	AS PRIMARY_LANGUAGE	
		,'' AS US_CITIZEN
		,PARENT.EMAIL_LNG AS E_MAIL
		
		,'' AS TITLE
		/* -- PARENT.PRE_NAME HAS TO MANY WEIRD ENTRIES. DON'T USE
		,APS.FormatTitleCase (PARENT.PRE_NME) AS TITLE
		*/
		,CASE WHEN EMPLOYEE.EMP_ABBR IS NOT NULL THEN EMPLOYEE.EMP_ABBR ELSE '' END AS EMPLOYER
		
		--,PARENT.HH_OC_CD AS ACTIVE_MILITARY
		,CASE WHEN PARENT.HH_OC_CD = 'Y' THEN 'ACTIVE MILITARY' ELSE '' END AS JOB_TITLE
		,'' AS ADDITIONALINFO
		,'' AS COMMENT
		
		-- IF 0 NEITHER PARENT, LGL 1 = HH1, LGL 2 = HH2, LGL 3 = BOTH LGL
		,CASE 
			WHEN PARENT.HH_NBR = 1 AND FAMILY.RSTRCT_HH1 != 'X' THEN 'Y'
			WHEN PARENT.HH_NBR = 2 AND FAMILY.RSTRCT_HH2 != 'X' THEN 'Y'
			ELSE ''
		END 
		AS CONTACT_ALLOWED
			  
		,CASE WHEN FAMILY.HH_LGL != 0 THEN 'Y' ELSE 'N' END AS EDUCATIONAL_RIGHTS
		
		,CASE 
			WHEN FAMILY.HH_LGL = 0 AND (HH_NBR = 1 OR HH_NBR = 2) THEN ''
			WHEN FAMILY.HH_LGL = 1  AND (HH_NBR = 1) THEN 'Y'
			WHEN FAMILY.HH_LGL = 2  AND (HH_NBR = 2) THEN 'Y'
			WHEN FAMILY.HH_LGL = 3 AND (HH_NBR = 1 OR HH_NBR = 2) THEN 'Y'
			ELSE ''
		END 
		AS HAS_CUSTORY
			  
		,CASE WHEN FAMILY.LIVE_WITH = 'X' THEN 'Y' ELSE '' END AS LIVES_WITH
		,CASE WHEN FAMILY.LIVE_WITH = 'X' THEN 'Y' ELSE '' END AS MAILINGS_ALLOWED
		
		,'' AS EDUCATION_CODE
		-- SOME PARENTS HAVE AN EDUCATION CODE. DON'T USE!
		--,PARENT.HH_ED_CD AS EDUCATION_CODE
		
		,'' AS WORK_ADDRESS
		,'' AS WORK_CITY
		,'' AS WORK_STATE
		,'' AS WORK_ZIPCODE
		,'' AS FEEDER_DISTRICT_ID
		,'' AS FEEDER_STUDENT_ID
		,CASE 
			WHEN FAMILY.HH_LGL = 0 AND (HH_NBR = 1 OR HH_NBR = 2) AND (FAMILY.RSTRCT_HH1 = 'X' OR FAMILY.RSTRCT_HH2 = 'X') THEN ''
			WHEN FAMILY.HH_LGL = 1  AND (HH_NBR = 1) AND (FAMILY.RSTRCT_HH1 != 'X') THEN 'Y'
			WHEN FAMILY.HH_LGL = 2  AND (HH_NBR = 2) AND (FAMILY.RSTRCT_HH2 != 'X') THEN 'Y'
			WHEN FAMILY.HH_LGL = 3 AND (HH_NBR = 1 AND FAMILY.RSTRCT_HH1 != 'X') OR (HH_NBR = 2 AND FAMILY.RSTRCT_HH2 != 'X') THEN 'Y'
			ELSE ''
		 END 
		 AS  RELEASE_TO
		,'' AS ENROLLING_PARENT
		,PARENT.FAM_NBR AS DI_Family_NBR
		--,FAMINFO.[Family _Id] AS DI_Family_Id
		
	

	FROM
		SMAXDBPROD.PR.DBTSIS.CE810_V AS FAMILY
		--INNER HASH JOIN
		--SMAXDBPROD.PR.APS.FamilyInformation AS FAMINFO
		--ON
		--FAMILY.DST_NBR = FAMINFO.DST_NBR
		--AND FAMILY.FAM_NBR = FAMINFO.FAM_NBR
		
		INNER JOIN
		SMAXDBPROD.PR.DBTSIS.CE015_V AS PARENT
		ON
		FAMILY.FAM_NBR = PARENT.FAM_NBR
		AND FAMILY.DST_NBR = PARENT.DST_NBR
		
		-- FAMILY INFORMATION	
		--INNER JOIN -- ADDED HASH, NO TIME DIFFERENCE
		--SMAXDBPROD.PR.DBTSIS.CE010 AS MAIL WITH (NOLOCK) 
		--ON
		--MAIL._Id = FAMINFO.[Family _Id]	
		
		-- GETTING FEDERAL EMPLOYEE INFORMATION
		LEFT JOIN 
		SMAXDBPROD.PR.DBTSIS.CE055_V AS EMPLOYEE
		ON
		PARENT.HH_EMP_CD = EMPLOYEE.EMP_CD
		AND FAMILY.DST_NBR = EMPLOYEE.DST_NBR
		
		-- GETTING HOME_ADDRESS AND MAIL_ADDRESS FROM STUDENT TABLE
		INNER HASH JOIN
		SMAXDBPROD.SynergyConversion.dbo.Student AS STUD_ADDRESS
		ON
		FAMILY.ID_NBR = STUD_ADDRESS.SIS_NUMBER
		AND FAMILY.FAM_NBR = STUD_ADDRESS.DI_FAM_NBR
	
			
-- THIS IS USED TO JOIN TEMP TABLE TO HH RELATION			
/*			
		--- FAMILY RELATION
		LEFT JOIN
		@RELATION_CROSSWALK AS HH1_RELATION
		ON		
		FAMILY.RLTN_HH1 = HH1_RELATION.SMAX_CODE
		
		LEFT JOIN
		@RELATION_CROSSWALK AS HH2_RELATION
		ON
		FAMILY.RLTN_HH2 = HH2_RELATION.SMAX_CODE
*/		
			

	WHERE 
		FAMILY.DST_NBR = 1	
		
	)AS RN	


UPDATE 
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET 
	PHONE = ''
WHERE
	LEN(PHONE)NOT IN (7, 10)

UPDATE 
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET 
	PHONE2 = ''
WHERE
	LEN(PHONE2)NOT IN (7, 10)

UPDATE 
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET 
	PHONE3 = ''
WHERE
	LEN(PHONE3)NOT IN (7, 10)

UPDATE 
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET 
	PHONE4 = ''
WHERE
	LEN(PHONE4)NOT IN (7, 10)
	
UPDATE 
	SMAXDBPROD.SynergyConversion.DBO.Parent
SET 
	PHONE2_TYPE = ''
WHERE 
	PHONE2 = ''

UPDATE
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET
	PHONE2_CONTACT = ''
WHERE 
	PHONE2 = ''
	
UPDATE
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET
	PHONE3_TYPE = ''
WHERE
	PHONE3 = ''

UPDATE
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET
	PHONE3_CONTACT = ''
WHERE
	PHONE3 = ''
	
UPDATE
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET 
	PHONE4_TYPE = ''
WHERE
	PHONE4 = ''
	
UPDATE
	SMAXDBPROD.SynergyConversion.dbo.Parent
SET
	PHONE4_CONTACT = ''
WHERE
	PHONE4 = ''	
	
	

