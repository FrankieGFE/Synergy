BEGIN TRAN


SELECT
	--ROW_NUMBER () OVER (PARTITION BY STUDENTS.ID_NBR ORDER BY STUDENTS.ID_NBR DESC) AS RN
	ENROLLMENTS.SCH_NBR AS [School Number]
	,STUDENTS.ID_NBR AS [ID Number]
	,STUDENTS.STATE_ID AS [State ID]
	,STUDENTS.LST_NME AS [Last Name]
	,STUDENTS.FRST_NME AS [First Name]
	,STUDENTS.M_NME AS [Middle Name]
	,ENROLLMENTS.GRDE AS Grade
	
	,FAMINFO.HomePhone AS [Home Ph #]
	,FAMINFO.[HoH1 CellPhone] AS [Secondary Ph #]
	
	,GOODDWELL.HOUSE_NUMBER AS [House Number]
	,GOODDWELL.STR_NME AS [Street Name]
	,GOODDWELL.STR_TAG AS [Street Tag]
	,GOODDWELL.STR_DIR AS [Street Direction]
	--,GOODDWELL.RURAL_BOX AS [Rural Box Number]
	--,GOODDWELL.RURAL_RTE AS [Rural Route]
	,GOODDWELL.CITY AS City
	,GOODDWELL.STATE AS [State]
	,GOODDWELL.APT_UNIT AS [Apartment Number]
	,GOODDWELL.ZIP_CD AS [Zip Code]
	
	,STUDENTS.GENDER AS Gender
	
	,ALLSTU.ETHN_CD AS [Ethnic Code]
	,ALLSTU.ETHN_CD2 AS [Ethnic Code 2]
	,ALLSTU.ETHN_CD3 AS [Ethnic Code 3]
	,ALLSTU.ETHN_CD4 AS [Ethnic Code 4]
	,ALLSTU.ETHN_CD5 AS [Ethnic Code 5]
	,ALLSTU.ETHN_CD6 AS [Ethnic Code 6]
	,ALLSTU.HISPLAT
	,CASE
		WHEN TRIBE.IE_TRIBE IS NULL THEN ''
		ELSE TRIBE.IE_TRIBE 
		END
	AS [Tribal Affiliation]
	
	,ALLSTU.BRTH_DT AS [Birth Date]

	,CASE
		WHEN CEC.ID_NBR = STUDENTS.ID_NBR THEN 'X'
		ELSE ''
		END
	AS CEC
/*	
	,(CAST(PHLOTE.[Primary Language] AS NVARCHAR (3))) + ' - ' + LANG.LANG_DESCR AS [PHLOTE Desc]
*/	
	,CASE ALLSTU.LNCH_FLG
		WHEN 1 THEN 'F'
		WHEN 2 THEN 'R'
		WHEN 4 THEN 'F'
		ELSE 'N' 
		END 
	AS [New Lunch Flag]
	,CASE	
		WHEN ELL.ID_NBR IS NOT NULL THEN 'ELL'
		ELSE ''
		END
		AS [ELL Status]
	,CASE	
		WHEN SPED.ID_NBR IS NOT NULL THEN SPED.[Primary Disability]
		ELSE ''
		END
	AS [PRIM_DISAB]		
	,CASE
		WHEN SPED.[Funding Level] IS NULL THEN ''
		ELSE TRIBE.IE_TRIBE
		END
	AS [SPED Funding Level]
		
	,FAMINFO.FAM_NBR
	
	,GOODDWELL.DWELL AS [Dwelling Number]
	
	,FEEDER.ELEM_AREA
	,FEEDER.INTRM_AREA
	,FEEDER.JR_AREA
	,FEEDER.SR_AREA
	
	,FAMINFO.MailingAddress1 [Address 1]
	,FAMINFO.ApartmentUnit AS [Address 2]
	,FAMINFO.ADDR_TO AS [Address To]
	,FAMINFO.City AS [City_2]
	,FAMINFO.State AS State_2
	,FAMINFO.Zip AS [ZIP Code]
		
	,'' AS LAS_CAT
	,'' AS [SPANISH LAS_CAT]
	
	,ENROLLMENTS.BEG_ENR_DT AS [Begin Enrollment Date]
	,ENROLLMENTS.END_ENR_DT AS [End Enrolment Date]
	
	,ALL_ENROLLMENTS.[PREV SCHOOL]
	,ALL_ENROLLMENTS.[PREV BEG ENR DT]
	,ALL_ENROLLMENTS.[PREV END ENR DT]
	,ALL_ENROLLMENTS.[PREV SCH YR]
	
	
FROM
	APS.BasicStudent AS STUDENTS
	INNER JOIN
	APS.EnrollmentsAsOf (GETDATE()) AS ENROLLMENTS
	ON
	STUDENTS.DST_NBR = ENROLLMENTS.DST_NBR
	AND STUDENTS.ID_NBR = ENROLLMENTS.ID_NBR
	
------ Getting students at 592 and mark them as X for CEC.  -----	
	LEFT JOIN
	(
		SELECT	
		 ADA.ID_NBR
		 FROM
		 APS.EnrollmentsAsOf (GETDATE()) ADA
		 WHERE
		 SCH_NBR = '592'
		 AND ADA.SCH_YR = 2013
		 )AS CEC
		 
		ON
		STUDENTS.ID_NBR = CEC.ID_NBR
   ----------------------------------------------------------------------	
   
	LEFT JOIN
	DBTSIS.CE020_V AS ALLSTU
	ON
	STUDENTS.DST_NBR = ALLSTU.DST_NBR
	AND STUDENTS.ID_NBR = ALLSTU.ID_NBR
	
	LEFT JOIN
	APS.FamilyInformation AS FAMINFO
	ON
	STUDENTS.[Primary Family Number] = FAMINFO.FAM_NBR	
	AND STUDENTS.DST_NBR = FAMINFO.DST_NBR
	
	LEFT JOIN
	APS.CurrentELLStudents AS ELL
	ON
	STUDENTS.DST_NBR = ELL.DST_NBR
	AND STUDENTS.ID_NBR = ELL.ID_NBR
	AND ELL.SCH_YR = ENROLLMENTS.SCH_YR   	
	
	LEFT JOIN
	APS.SpedAsOf (GETDATE()) AS SPED
	ON
	STUDENTS.DST_NBR = SPED.DST_NBR
	AND STUDENTS.ID_NBR = SPED.ID_NBR
	AND ENROLLMENTS.SCH_YR = SPED.SCH_YR
	
	LEFT JOIN
	APS.PhloteStatusAsOf (GETDATE()) AS PHLOTE
	ON
	STUDENTS.DST_NBR = PHLOTE.DST_NBR
	AND STUDENTS.ID_NBR = PHLOTE.ID_NBR
	
	LEFT JOIN
	DBTSIS.NM021_V AS TRIBE
	ON
	STUDENTS.DST_NBR = TRIBE.DST_NBR
	AND STUDENTS.ID_NBR = TRIBE.ID_NBR
	
	
	
					-------------READ BAD DWELLINGS TO BLANK OUT--------------------------------
		LEFT HASH JOIN  -- REMOVED HASH, RAN ABOUT 20 SEC LONGER
			(
				SELECT
					DWL_NBR AS DWELL
					,LTRIM(HSE_NBR)+' '+STR_NME+' '+STR_TAG+' '+STR_DIR AS DWL_ADDR
					,LTRIM(HSE_NBR) AS HOUSE_NUMBER
					,STR_NME
					,STR_TAG
					,STR_DIR
					,APT_UNIT
					,RURAL_BOX
					,RURAL_RTE
					,CITY
					,STATE
					,ZIP_CD
				FROM
					DBTSIS.CE005_V
				WHERE
					DST_NBR = 1
					AND (
						HSE_NBR > ''
						OR STR_NME LIKE '%P.O. BOX%'
						OR STR_NME LIKE '%PO BOX%'
						)
					AND STR_NME NOT LIKE ''
					AND STR_NME NOT LIKE '%ABANDONED%'
					AND STR_NME NOT LIKE '%UNKNOWN%'
					AND ZIP_CD != 0
			) AS GOODDWELL

		ON
		FAMINFO.DWL_NBR = GOODDWELL.[DWELL]

	---- CE006 CONTAINS THE FEEDER SCHOOLS ----	
	LEFT JOIN DBTSIS.CE006_V AS FEEDER
	ON
	FEEDER.DWL_NBR = FAMINFO.DWL_NBR
	AND FEEDER.DST_NBR = FAMINFO.DST_NBR
/*	
	LEFT JOIN DBTSIS.CE030_V AS LANG
	ON
	PHLOTE.[Primary Language] = LANG.LANG_ST_CD		
	AND PHLOTE.DST_NBR = LANG.DST_NBR
*/

	LEFT JOIN
			(	
				SELECT
					ST010._Id,
					ROW_NUMBER() OVER (PARTITION BY ST010.DST_NBR, ST010.ID_NBR ORDER BY ST010.BEG_ENR_DT DESC) AS RN,
					ST010.DST_NBR,
					ST010.SCH_NBR AS [PREV SCHOOL],
					ST010.GRDE AS [PREV GRADE],
					ST010.ID_NBR,
					ST010.SCH_YR AS [PREV SCH YR],
					ST010.BEG_ENR_DT AS [PREV BEG ENR DT],
					ST010.END_ENR_DT AS [PREV END ENR DT]
				FROM
					DBTSIS.ST010 WITH(NOLOCK) 
				WHERE
					  -- Qualifications for Enrollment is that today's date needs to fall within beginning and end enrollment
					  -- dates AND the enrollment is marked primary (NONADA_SCH not X)
					  NONADA_SCH != 'X' 
					  AND  ST010.BEG_ENR_DT <= (CONVERT (VARCHAR (8), (GETDATE()), 112))
					  AND DST_NBR = 1
					  --AND (END_ENR_DT >= (CONVERT (VARCHAR (8), @asOfDate, 112)) OR END_ENR_DT = 0)
			) AS ALL_ENROLLMENTS
	ON
		STUDENTS.ID_NBR = ALL_ENROLLMENTS.ID_NBR
		AND STUDENTS.DST_NBR = ALL_ENROLLMENTS.DST_NBR	
		AND ALL_ENROLLMENTS.RN = 2
	
WHERE
	STUDENTS.DST_NBR = 1
	AND ENROLLMENTS.NONADA_SCH != 'X'
	
	
ORDER BY 
	[ID Number]	
ROLLBACK