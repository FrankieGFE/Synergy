
----DECLARE @STUDENT_GU UNIQUEIDENTIFIER = '5D7C83A7-1C85-4B9D-91CF-18C53FC267F5'
--DECLARE @STUDENT_GU UNIQUEIDENTIFIER = '71FA2CCE-45AA-4DA1-85D3-AE1EA6365FB6'
--DECLARE @SCHOOL_CODE VARCHAR(256) = '580'
----DECLARE @ACTIVE_DATE AS DATETIME = '06/01/2015'
--DECLARE @ACTIVE_DATE DATETIME = '11/18/2014'

CREATE FUNCTION [APS].[NearestStudentSchoolYear](@STUDENT_GU UNIQUEIDENTIFIER, @SCHOOL_CODE VARCHAR(5), @ACTIVE_DATE DATETIME)
RETURNS UNIQUEIDENTIFIER
BEGIN
DECLARE @STUDENT_SCHOOL_YEAR_GU UNIQUEIDENTIFIER
DECLARE @ENROLL TABLE ([STUDENT_GU] UNIQUEIDENTIFIER, [STUDENT_SCHOOL_YEAR_GU] UNIQUEIDENTIFIER, [SCHOOL_CODE] VARCHAR(5), [ENTER_DATE] DATETIME, [LEAVE_DATE] DATETIME )

INSERT INTO @ENROLL
SELECT
	[ENROLLMENTS].[STUDENT_GU]
	,[ENROLLMENTS].[STUDENT_SCHOOL_YEAR_GU]
	,[ENROLLMENTS].[SCHOOL_CODE]
	,[ENROLLMENTS].[ENTER_DATE]
	,CASE WHEN [ENROLLMENTS].[LEAVE_DATE] IS NULL THEN [CalendarOptions].[END_DATE] ELSE [ENROLLMENTS].[LEAVE_DATE] END AS [LEAVE_DATE]
FROM
	APS.StudentEnrollmentDetails AS [ENROLLMENTS]
	
	INNER JOIN
	rev.EPC_SCH_ATT_CAL_OPT AS CalendarOptions
	ON
	[ENROLLMENTS].[ORGANIZATION_YEAR_GU] = CalendarOptions.[ORG_YEAR_GU]
	
WHERE
	[ENROLLMENTS].[STUDENT_GU]=@STUDENT_GU
---------------------------------------------------------

SET @STUDENT_SCHOOL_YEAR_GU = (
SELECT
	CASE 
		WHEN [ENROLL_MATCH].[STUDENT_SCHOOL_YEAR_GU] IS NOT NULL THEN [ENROLL_MATCH].[STUDENT_SCHOOL_YEAR_GU]
		WHEN [ENROLL_PREV].[STUDENT_SCHOOL_YEAR_GU] IS NOT NULL THEN [ENROLL_PREV].[STUDENT_SCHOOL_YEAR_GU]
		WHEN [ENROLL_FUTURE].[STUDENT_SCHOOL_YEAR_GU] IS NOT NULL THEN [ENROLL_FUTURE].[STUDENT_SCHOOL_YEAR_GU]
		ELSE [ENROLL_ANY].[STUDENT_SCHOOL_YEAR_GU]
	END AS [STUDENT_SCHOOL_YEAR_GU]
	--,CASE 
	--	WHEN [ENROLL_MATCH].[STUDENT_SCHOOL_YEAR_GU] IS NOT NULL THEN 'MATCH'
	--	WHEN [ENROLL_PREV].[STUDENT_SCHOOL_YEAR_GU] IS NOT NULL THEN 'PREVIOUS'
	--	WHEN [ENROLL_FUTURE].[STUDENT_SCHOOL_YEAR_GU] IS NOT NULL THEN 'FUTURE'
	--	ELSE 'NO_MATCH'
	--END AS [STATUS]
FROM
(
SELECT TOP 1
	[STUDENT_SCHOOL_YEAR_GU]
	,[STUDENT_GU]
FROM
	@ENROLL
ORDER BY
	[ENTER_DATE] DESC
) AS [ENROLL_ANY]

LEFT OUTER JOIN
(	
SELECT
	[STUDENT_SCHOOL_YEAR_GU]
	,[STUDENT_GU]
FROM
	@ENROLL
WHERE
	[SCHOOL_CODE] = @SCHOOL_CODE
	AND @ACTIVE_DATE BETWEEN [ENTER_DATE] AND [LEAVE_DATE]
) AS [ENROLL_MATCH]
ON
[ENROLL_ANY].[STUDENT_GU] = [ENROLL_MATCH].[STUDENT_GU]


LEFT OUTER JOIN
(	
SELECT TOP 1
	[STUDENT_SCHOOL_YEAR_GU]
	,[STUDENT_GU]
FROM
	@ENROLL
WHERE
	[SCHOOL_CODE] = @SCHOOL_CODE
	AND @ACTIVE_DATE > [LEAVE_DATE]
ORDER BY
	[ENTER_DATE] DESC
) AS [ENROLL_PREV]
ON
[ENROLL_ANY].[STUDENT_GU] = [ENROLL_PREV].[STUDENT_GU]

LEFT OUTER JOIN
(
SELECT TOP 1
	[STUDENT_SCHOOL_YEAR_GU]
	,[STUDENT_GU]
FROM
	@ENROLL
WHERE
	[SCHOOL_CODE] = @SCHOOL_CODE
ORDER BY
	[ENTER_DATE] DESC
) AS [ENROLL_FUTURE]
ON
[ENROLL_ANY].[STUDENT_GU] = [ENROLL_FUTURE].[STUDENT_GU]
)

RETURN @STUDENT_SCHOOL_YEAR_GU

END
GO	
