

DECLARE @DEPARTMENT VARCHAR(10)  = 'Sci', @SUBJECTAREA1 VARCHAR(10) --= 'Sci',@SUBJECTAREA2 VARCHAR(10) = 'Sci'
DECLARE @SCHOOL VARCHAR(128) = '423D03F7-AE39-47D8-BF90-E5F07FED8265'

;WITH
-- From School of Record [EPC_STU_YR]
ASOF_ENROLLMENTS AS
(
SELECT
	[StudentSchoolYear].[STUDENT_GU]
	,[StudentSchoolYear].[ORGANIZATION_YEAR_GU]
	,[Organization].[ORGANIZATION_GU]
	,[Grades].[VALUE_DESCRIPTION] AS [GRADE]
	,[Grades].[LIST_ORDER]
	,[School].[SCHOOL_CODE]
	,[Organization].[ORGANIZATION_NAME] AS [SCHOOL_NAME]
	,[StudentSchoolYear].[ENTER_DATE]
	,[StudentSchoolYear].[LEAVE_DATE]
	,[StudentSchoolYear].[EXCLUDE_ADA_ADM]
	,[StudentSchoolYear].[ACCESS_504]
	,CASE WHEN [StudentSchoolYear].[EXCLUDE_ADA_ADM] = 2 THEN 'CONCURRENT'
		WHEN [StudentSchoolYear].[EXCLUDE_ADA_ADM] = 1 THEN 'NO ADA/ADM'
		ELSE '' END AS [CONCURRENT]
	,[RevYear].[SCHOOL_YEAR]
	,[RevYear].[EXTENSION]
FROM
	APS.PrimaryEnrollmentsAsOf(GETDATE()) AS [Enrollments]
	
	INNER JOIN
	rev.EPC_STU_SCH_YR AS [StudentSchoolYear]
	ON
	[Enrollments].[STUDENT_SCHOOL_YEAR_GU] = [StudentSchoolYear].[STUDENT_SCHOOL_YEAR_GU]
	
	INNER JOIN 
	rev.REV_ORGANIZATION_YEAR AS [OrgYear] -- Links between School and Year
	ON 
	[StudentSchoolYear].[ORGANIZATION_YEAR_GU] = [OrgYear].[ORGANIZATION_YEAR_GU]
	
	INNER JOIN 
	rev.REV_ORGANIZATION AS [Organization] -- Contains the School Name
	ON 
	[OrgYear].[ORGANIZATION_GU] = [Organization].[ORGANIZATION_GU]
	
	INNER JOIN 
	rev.REV_YEAR AS [RevYear] -- Contains the School Year
	ON 
	[OrgYear].[YEAR_GU] = [RevYear].[YEAR_GU]
	
	LEFT OUTER JOIN
	APS.LookupTable('K12','Grade') AS [Grades]
	ON
	[StudentSchoolYear].[GRADE] = [Grades].[VALUE_CODE]
	
	INNER JOIN 
	rev.EPC_SCH AS [School] -- Contains the School Code / Number
	ON 
	[Organization].[ORGANIZATION_GU] = [School].[ORGANIZATION_GU]
)

-- From APS.BasicStudent
, STUDENT_DETAILS AS
(
SELECT
	-- Basic Student Demographics
	[STUDENT].[STUDENT_GU]
	,[STUDENT].[SIS_NUMBER]
	,[STUDENT].[STATE_STUDENT_NUMBER]
	,[STUDENT].[LAST_NAME]
	,[STUDENT].[FIRST_NAME]
	,[STUDENT].[MIDDLE_NAME]
	,[STUDENT].[BIRTH_DATE]
	,[STUDENT].[GENDER]
	,[STUDENT].[CLASS_OF]	
	,[STUDENT].[HOME_ADDRESS] AS [HOME_ADDRESS]
	,[STUDENT].[HOME_ADDRESS_2] AS [HOME_ADDRESS_2]
	,[STUDENT].[HOME_CITY] AS [HOME_CITY]
	,[STUDENT].[HOME_STATE] AS [HOME_STATE]
	,[STUDENT].[HOME_ZIP] AS [HOME_ZIP]
	,[STUDENT].[MAIL_ADDRESS] AS [MAIL_ADDRESS]
	,[STUDENT].[MAIL_ADDRESS_2] AS [MAIL_ADDRESS_2]
	,[STUDENT].[MAIL_CITY] AS [MAIL_CITY]
	,[STUDENT].[MAIL_STATE] AS [MAIL_STATE]
	,[STUDENT].[MAIL_ZIP] AS [MAIL_ZIP]
	
	-- Format Primary Phone
	,'(' + left([PERSON].[PRIMARY_PHONE],3) + ')' 
       + substring([PERSON].[PRIMARY_PHONE], 4,3)+ '-'
                   + RIGHT([PERSON].[PRIMARY_PHONE],4) AS [PRIMARY_PHONE]
    
    -- Most Recent Lunch Status
    ,[FRMHistory].[FRM_CODE]
    
    -- Most Recent ELL Status
    ,CASE WHEN [ELL_PGM].[PROGRAM_CODE] = '1' AND [ELL_PGM].[EXIT_DATE] IS NULL THEN 'Y' ELSE 'N' END AS [ELL_STATUS]
    
    -- Current SPED or Gifted Status
    ,[CurrentSPED].[PRIMARY_DISABILITY_CODE]
    -- SPED Not Gifted
    ,CASE WHEN [CurrentSPED].[PRIMARY_DISABILITY_CODE] != 'GI' AND [CurrentSPED].[PRIMARY_DISABILITY_CODE] IS NOT NULL THEN 'Y' ELSE 'N' END AS [SPED_STATUS]
    ,CASE WHEN [CurrentSPED].[PRIMARY_DISABILITY_CODE] = 'GI' OR [CurrentSPED].[SECONDARY_DISABILITY_CODE] = 'GI' THEN 'Y' ELSE 'N' END AS [GIFTED_STATUS]
    
    -- Prefered Home Contact Language
    ,CASE WHEN [Contact_Language].[VALUE_DESCRIPTION] IS NULL THEN [STUDENT].[HOME_LANGUAGE] ELSE [Contact_Language].[VALUE_DESCRIPTION] END AS [HOME_LANGUAGE2]
    
    ,[STUDENT].[HISPANIC_INDICATOR]
    ,[ETHNIC_CODES].[RACE_1]
    ,[ETHNIC_CODES].[RACE_2]
    ,[ETHNIC_CODES].[RACE_3]
    ,[ETHNIC_CODES].[RACE_4]
    ,[ETHNIC_CODES].[RACE_5]
    
FROM
	APS.BasicStudent AS [STUDENT]
	
	INNER JOIN
	rev.REV_PERSON AS [PERSON]
	ON
	[STUDENT].[STUDENT_GU] = [PERSON].[PERSON_GU]
	
	LEFT JOIN
    (
    SELECT
               *
    FROM
                REV.EP_STUDENT_SPECIAL_ED AS SPED
    WHERE
                NEXT_IEP_DATE IS NOT NULL
                AND (
                            EXIT_DATE IS NULL 
                            OR EXIT_DATE >= CONVERT(DATE, GETDATE())
                            )
    ) AS [CurrentSPED]
    ON
    [STUDENT].[STUDENT_GU] = [CurrentSPED].[STUDENT_GU]
    
    LEFT JOIN
    rev.EPC_STU_PGM_ELL AS [ELL_PGM]
    ON
    [STUDENT].[STUDENT_GU] = [ELL_PGM].[STUDENT_GU] 
    
    LEFT JOIN
    (
	SELECT
		  ROW_NUMBER() OVER (PARTITION BY [STU].[STUDENT_GU] order by [FRM].[ENTER_DATE],[STU].[STUDENT_GU]) [RN]
		, [STU].[STUDENT_GU]
		, [FRM].[FRM_CODE]
	FROM 
		rev.EPC_STU [STU]
		
		LEFT JOIN 
		rev.EPC_STU_PGM_FRM_HIS [FRM] 
		ON
		[FRM].[STUDENT_GU] = [STU].[STUDENT_GU]
		AND [FRM].[ENTER_DATE] IS NOT NULL 
		AND ([FRM].[EXIT_DATE] IS NOT NULL OR [FRM].[EXIT_DATE] > GETDATE())
	) AS [FRMHistory]
	ON
	[STUDENT].[STUDENT_GU] = [FRMHistory].[STUDENT_GU]
	AND [FRMHistory].[RN] = 1
	
	-- Get Home Contact Language
	LEFT JOIN
	APS.LookupTable ('K12', 'Language') AS [Contact_Language]	
	ON
	[ELL_PGM].[LANGUAGE_TO_HOME] = [Contact_Language].[VALUE_CODE]
	
	-- Get All Racial Codes
	LEFT JOIN
	(
	SELECT
		[ETHNIC_PIVOT].[PERSON_GU]
		,(SELECT [VALUE_DESCRIPTION] FROM APS.LookupTable ('Revelation', 'ETHNICITY') WHERE [VALUE_CODE] = [ETHNIC_PIVOT].[1]) AS [RACE_1]
		,(SELECT [VALUE_DESCRIPTION] FROM APS.LookupTable ('Revelation', 'ETHNICITY') WHERE [VALUE_CODE] = [ETHNIC_PIVOT].[2]) AS [RACE_2]
		,(SELECT [VALUE_DESCRIPTION] FROM APS.LookupTable ('Revelation', 'ETHNICITY') WHERE [VALUE_CODE] = [ETHNIC_PIVOT].[3]) AS [RACE_3]
		,(SELECT [VALUE_DESCRIPTION] FROM APS.LookupTable ('Revelation', 'ETHNICITY') WHERE [VALUE_CODE] = [ETHNIC_PIVOT].[4]) AS [RACE_4]
		,(SELECT [VALUE_DESCRIPTION] FROM APS.LookupTable ('Revelation', 'ETHNICITY') WHERE [VALUE_CODE] = [ETHNIC_PIVOT].[5]) AS [RACE_5]
	FROM
		(
		SELECT
			[SECONDARY_ETHNIC_CODES].[PERSON_GU]
			,[SECONDARY_ETHNIC_CODES].[ETHNIC_CODE]
			,ROW_NUMBER() OVER(PARTITION by [SECONDARY_ETHNIC_CODES].[PERSON_GU] order by [SECONDARY_ETHNIC_CODES].[ETHNIC_CODE]) [RN]
		FROM
			rev.REV_PERSON_SECONDRY_ETH_LST AS [SECONDARY_ETHNIC_CODES]
		) [PVT]
		PIVOT (MIN(ETHNIC_CODE) FOR [RN] IN ([1],[2],[3],[4],[5])) AS [ETHNIC_PIVOT]
	) AS [ETHNIC_CODES]
	ON
	[STUDENT].[STUDENT_GU] = [ETHNIC_CODES].[PERSON_GU]
	
)

SELECT --DISTINCT
	--[DISTRICT_COURSE].[COURSE_GU]
	--[DISTRICT_COURSE].[COURSE_ID]
	--,[SECTION_SCHOOL_YEAR].[SECTION_ID]
	--[DISTRICT_COURSE].[COURSE_TITLE]
	--,[DISTRICT_COURSE].[DEPARTMENT] AS [COURSE_DEPARTMENT]
	--,[DISTRICT_COURSE].[SUBJECT_AREA_1]
	--,[DISTRICT_COURSE].[SUBJECT_AREA_2]
	--,[DISTRICT_COURSE].[SUBJECT_AREA_3]
	--,[DISTRICT_COURSE].[SUBJECT_AREA_4]
	--,[DISTRICT_COURSE].[SUBJECT_AREA_5]
	--,[DISTRICT_COURSE].[STATE_COURSE_CODE]
	
	--,[SECTION_SCHOOL_YEAR].[SECTION_GU]
	--,[COURSE_SCHOOL_YEAR].[SCHOOL_YEAR_COURSE_GU]
	--,[STAFF].[STAFF_GU]
	
	--,[Organization].[ORGANIZATION_NAME] AS [School Name]
	--,[OrgYear].[ORGANIZATION_GU]
	--[PERSON].[FIRST_NAME]
	--,[PERSON].[LAST_NAME]
	--,[PERSON].[EMAIL]	
	
	--,[DISTRICT_COURSE].[COURSE_TITLE]
	--,[PERSON].[JOB_TITLE]
	--,[PERSON].[PRIMARY_PHONE]
	--,SUBSTRING([STAFF].[BADGE_NUM],2,99) AS [BADGE_NUM]
	--,[STAFF].[STATE_ID]
	--,CASE WHEN [ALL_STAFF_SCH_YR].[PRIMARY_STAFF] = 1 THEN 'Y' ELSE 'N' END AS [PRIMARY_STAFF]
	--,[STAFF_SCHOOL_YEAR].*
	--,[SECTION_SCHOOL_YEAR].*
	
	[STUDENT_DETAILS].[FIRST_NAME]
	,[STUDENT_DETAILS].[LAST_NAME]
	,[STUDENT_DETAILS].[SIS_NUMBER]
	,[STUDENT_DETAILS].[BIRTH_DATE]
	
	,[ASOF_ENROLLMENTS].[GRADE]
	
	,[PERSON].[FIRST_NAME] +' '+ [PERSON].[LAST_NAME] +' '+ CONVERT(VARCHAR,[SECTION_SCHOOL_YEAR].[SECTION_ID]) AS [CLASS NAME]	
	
	--,CASE WHEN [ALL_STAFF_SCH_YR].[PRIMARY_STAFF] = 1 THEN 'Y' ELSE 'N' END AS [PRIMARY_STAFF]
	
	--,[SECTION_SCHOOL_YEAR].*
	
FROM
	rev.[EPC_CRS] AS [DISTRICT_COURSE]
	
	INNER JOIN
    rev.[EPC_SCH_YR_CRS] AS [COURSE_SCHOOL_YEAR]
    ON
    [DISTRICT_COURSE].[COURSE_GU] = [COURSE_SCHOOL_YEAR].[COURSE_GU]
    
    INNER JOIN
    rev.[EPC_SCH_YR_SECT] AS [SECTION_SCHOOL_YEAR]
    ON
    [SECTION_SCHOOL_YEAR].[SCHOOL_YEAR_COURSE_GU] = [COURSE_SCHOOL_YEAR].[SCHOOL_YEAR_COURSE_GU]
    
    --INNER JOIN
    --rev.[EPC_STAFF_SCH_YR] AS [STAFF_SCHOOL_YEAR]
    --ON
    --[SECTION_SCHOOL_YEAR].[STAFF_SCHOOL_YEAR_GU] = [STAFF_SCHOOL_YEAR].[STAFF_SCHOOL_YEAR_GU]
    
    -- Get both primary and secodary staff
    INNER JOIN
    (
    SELECT
		[STAFF_SCHOOL_YEAR_GU]
		,[STAFF_GU]
		,[ORGANIZATION_YEAR_GU]
		,1 AS [PRIMARY_STAFF]
	FROM
		rev.[EPC_STAFF_SCH_YR] AS [STAFF_SCHOOL_YEAR]
		
	UNION ALL
		
	SELECT
		[STAFF_SCHOOL_YEAR].[STAFF_SCHOOL_YEAR_GU]
		,[STAFF_SCHOOL_YEAR].[STAFF_GU]
		,[STAFF_SCHOOL_YEAR].[ORGANIZATION_YEAR_GU]
		,0 AS [PRIMARY_STAFF]
	FROM
		rev.[EPC_SCH_YR_SECT_STF] AS [SECONDARY_STAFF]
		
		INNER JOIN
		rev.[EPC_STAFF_SCH_YR] AS [STAFF_SCHOOL_YEAR]
		ON
		[SECONDARY_STAFF].[STAFF_SCHOOL_YEAR_GU] = [STAFF_SCHOOL_YEAR].[STAFF_SCHOOL_YEAR_GU]
    ) AS [ALL_STAFF_SCH_YR]
    ON
   [SECTION_SCHOOL_YEAR].[STAFF_SCHOOL_YEAR_GU] = [ALL_STAFF_SCH_YR].[STAFF_SCHOOL_YEAR_GU]
    
    INNER JOIN 
	rev.REV_ORGANIZATION_YEAR AS [OrgYear] -- Links between School and Year
	ON 
	[ALL_STAFF_SCH_YR].[ORGANIZATION_YEAR_GU] = [OrgYear].[ORGANIZATION_YEAR_GU]
    
    INNER JOIN 
	rev.REV_ORGANIZATION AS [Organization] -- Contains the School Name
	ON 
	[OrgYear].[ORGANIZATION_GU] = [Organization].[ORGANIZATION_GU]
	
	LEFT JOIN 
	rev.REV_YEAR AS [RevYear] -- Contains the School Year
	ON 
	[OrgYear].[YEAR_GU] = [RevYear].[YEAR_GU]
    
    INNER JOIN
    rev.[EPC_STAFF] AS [STAFF]
    ON
    [ALL_STAFF_SCH_YR].[STAFF_GU] = [STAFF].[STAFF_GU]
    
    INNER JOIN
    rev.[REV_PERSON] AS [PERSON]
    ON
    [STAFF].[STAFF_GU] = [PERSON].[PERSON_GU]
    
    INNER JOIN
    APS.ScheduleAsOf(GETDATE()) AS [SCHEDULE]
    ON
    [SECTION_SCHOOL_YEAR].[SECTION_GU] = [SCHEDULE].[SECTION_GU]
    
    INNER JOIN
    STUDENT_DETAILS AS [STUDENT_DETAILS]
    ON
    [SCHEDULE].[STUDENT_GU] = [STUDENT_DETAILS].[STUDENT_GU]
    
    INNER JOIN
    ASOF_ENROLLMENTS AS [ASOF_ENROLLMENTS]
    ON
    [STUDENT_DETAILS].[STUDENT_GU] = [ASOF_ENROLLMENTS].[STUDENT_GU]
    
	
WHERE
	[DISTRICT_COURSE].[INACTIVE] = 'N'
	AND [RevYear].[YEAR_GU] = '26f066a3-abfc-4edb-b397-43412edabc8b'
	--AND [RevYear].[EXTENSION] = 'R'
		
	AND [OrgYear].[ORGANIZATION_GU] LIKE @SCHOOL
	--AND [STAFF].[STATE_ID] = '32614'
	
	AND [PERSON].[LAST_NAME] != 'Not Found'
	
	AND [SECTION_SCHOOL_YEAR].[PERIOD_BEGIN] = 1
	
	--AND [Organization].[ORGANIZATION_NAME] LIKE 'Eubank Elementary School'
	
ORDER BY
	--[SECTION_SCHOOL_YEAR].[SECTION_ID]
	--[Organization].[ORGANIZATION_NAME]
	--,[PERSON].[LAST_NAME]
	[STUDENT_DETAILS].[SIS_NUMBER]
	
	
