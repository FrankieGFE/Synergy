



EXECUTE AS LOGIN='QueryFileUser'
GO

DECLARE @GRADE_PERIOD TABLE (
	GRADE_PERIOD VARCHAR(10)
	,LIST_ORDER INT
	)
	
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('S2 Grade', 1)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('S1 Grade', 2)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('Q4', 3)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('Q3', 4)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('Q2', 5)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('Q1', 6)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('P4', 7)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('P3', 8)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('P2', 9)
INSERT @GRADE_PERIOD (GRADE_PERIOD,LIST_ORDER) VALUES ('P1', 10)

--SELECT * FROM @GRADE_PERIOD

--/*
SELECT
	*
	,CASE WHEN [TRANS_MARK] IS NULL THEN [SCHED_MARK] ELSE [TRANS_MARK] END AS [FINAL_MARK]
	,CASE WHEN [TRANS_CREDIT] IS NULL THEN [SCHED_CREDIT] ELSE [TRANS_CREDIT] END AS [FINAL_CREDIT]
	
FROM
(
SELECT DISTINCT
	[COURSES].[Location]
	,[COURSES].[ID]
	,[COURSES].[ALTERNATE STUDENT ID]
	,[COURSES].[PED Course]
	,[COURSES].[Section]
	,[COURSES].[MARK] AS [TRANS_MARK]
	,[COURSES].[CREDIT_COMPLETED] AS [TRANS_CREDIT]
	--,[SCHEDULE].[COURSE_ID]
	--,[SCHEDULE].[SECTION_ID]
	--,[SCHEDULE].[TERM_CODE]
	,[SCHEDULE].[COURSE_ENTER_DATE]
	,[SCHEDULE].[COURSE_LEAVE_DATE]
	--,[RevYear].[SCHOOL_YEAR]
	--,[RevYear].[EXTENSION]
	--,[SCHEDULE].[TERM_CODE]
	----,[SCHEDULE].[S
	--,[Class].[TEACHER_AIDE]
	
	,[GRADES].[GRADE_PERIOD] AS [SCHED_PERIOD]
	,[GRADE_PERIOD].[LIST_ORDER] AS [SCHED_ORDER]
	,[GRADES].[MARK] AS [SCHED_MARK]
	,[GRADES].[CREDIT] AS [SCHED_CREDIT]
	
	,ROW_NUMBER() OVER (PARTITION BY [COURSES].[ALTERNATE STUDENT ID], [COURSES].[FILE_COURSE_ID], [COURSES].[FILE_SECTION_ID] ORDER BY [GRADE_PERIOD].[LIST_ORDER]) AS RN
	
	--,CASE WHEN [COURSES].[MARK] IS NULL THEN 
FROM
	(
	SELECT
		[FILE].*
		,SUBSTRING([FILE].[Section],0,CHARINDEX('-',[FILE].[Section])) AS [FILE_COURSE_ID]
		,SUBSTRING([FILE].[Section],CHARINDEX('-',[FILE].[Section])+1,4) AS [FILE_SECTION_ID]
		,[STUDENT].[STUDENT_GU]
		--,[COURSE_HISTORY].[SCHOOL_YEAR]
		--,[COURSE_HISTORY].[CALENDAR_YEAR]
		--,[COURSE_HISTORY].[CALENDAR_MONTH]
		----,[School].[ORGANIZATION_GU]
		--,[COURSE_HISTORY].[COURSE_ID]
		--,[COURSE_HISTORY].[COURSE_TITLE]
		,[COURSE_HISTORY].[MARK]
		,[COURSE_HISTORY].[CREDIT_COMPLETED]
		
		--,[COURSE_HISTORY].*
	FROM
		OPENROWSET (
			'Microsoft.ACE.OLEDB.12.0', 
			'Text;Database=\\SynTempSSIS\Files\TempQuery\;', 
			'SELECT * FROM tbl1461.csv'  
		)AS [FILE]
		
		INNER JOIN
		APS.BasicStudent AS [STUDENT]
		ON
		[FILE].[ALTERNATE STUDENT ID] = [STUDENT].[SIS_NUMBER]
		
		--LEFT OUTER JOIN
		--rev.EPC_SCH AS [School] -- Contains the School Code / Number
		--ON 
		--CONVERT(NVARCHAR,[FILE].[Location]) = [School].[SCHOOL_CODE]
		
		LEFT OUTER JOIN
		-- Get Course details
		rev.[EPC_STU_CRS_HIS] AS [COURSE_HISTORY]
		ON
		SUBSTRING([FILE].[Section],0,CHARINDEX('-',[FILE].[Section])) LIKE [COURSE_HISTORY].[COURSE_ID]
		AND [STUDENT].[STUDENT_GU] = [COURSE_HISTORY].[STUDENT_GU]
		AND [COURSE_HISTORY].[SCHOOL_YEAR] = '2014'
		
	--WHERE
	--	[COURSE_HISTORY].[COURSE_ID] IS NULL
	--	[FILE].[ALTERNATE STUDENT ID] = '112217'
		
	--ORDER BY
	--	[FILE].[ALTERNATE STUDENT ID]
	) AS [COURSES]
	
	LEFT OUTER HASH JOIN
	APS.StudentScheduleDetails AS [SCHEDULE]
	ON
	[COURSES].[STUDENT_GU] = [SCHEDULE].[STUDENT_GU]
	AND [COURSES].[FILE_COURSE_ID] = [SCHEDULE].[COURSE_ID]
	AND [COURSES].[FILE_SECTION_ID] = [SCHEDULE].[SECTION_ID]
	AND [COURSES].[MARK] IS NULL
	
	--LEFT OUTER JOIN
	--rev.REV_YEAR AS [RevYear] -- Contains the School Year
	--ON 
	--[SCHEDULE].[YEAR_GU] = [RevYear].[YEAR_GU]
	
	--LEFT OUTER HASH JOIN
	--rev.[EPC_STU_CLASS] AS [Class]
	--ON
	--[SCHEDULE].[SECTION_GU] = [Class].[SECTION_GU]
	
	LEFT OUTER HASH JOIN
	APS.StudentGrades AS [GRADES]
	ON
	[SCHEDULE].[COURSE_ID] = [GRADES].[COURSE_ID]
	AND [SCHEDULE].[SECTION_GU] = [GRADES].[SECTION_GU]
	AND [SCHEDULE].[STUDENT_GU] = [GRADES].[STUDENT_GU]
	--AND [GRADES].[GRADE_PERIOD] = 'S1 Grade'
	AND [GRADES].[GRADE_PERIOD] IN ('S1 Grade','S2 Grade','Q1','Q2','Q3','Q4')
	
	LEFT OUTER JOIN
	@GRADE_PERIOD AS [GRADE_PERIOD]
	ON
	[GRADES].[GRADE_PERIOD] = [GRADE_PERIOD].[GRADE_PERIOD]
	
) AS [GRADES]

WHERE
	RN = 1
	
--*/

REVERT
GO