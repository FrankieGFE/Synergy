

DECLARE @School VARCHAR = '%'
DECLARE @Year VARCHAR = '%'

SELECT --DISTINCT
	[STUDENT].[SIS_NUMBER]
	,[STUDENT].[STATE_STUDENT_NUMBER]
	,[STUDENT].[LAST_NAME]
	,[STUDENT].[FIRST_NAME]
	,[STUDENT].[MIDDLE_NAME]
	,[STUDENT].[BIRTH_DATE]
	,[STUDENT].[GENDER]
	,[Organization].[ORGANIZATION_NAME] AS [SCHOOL_NAME]
	,[HEALTH].[HEALTH_CODE]
	,[HEALTH_CODES].[VALUE_DESCRIPTION] AS [HEALTH DESCRIPTION]
	,CASE WHEN [HEALTH].[DISPOSITION] IS NULL THEN '<NONE>' ELSE [HEALTH].[DISPOSITION] END AS [DISPOSITION]
	,[DISPOSITION_CODE].[VALUE_DESCRIPTION] AS [DISPOSITION DESCRIPTION]
	,CONVERT(VARCHAR(10),[HEALTH].[EFFECTIVE_DATE],101) AS [EFFECTIVE_DATE]
	--,COUNT([HEALTH].[STUDENT_GU]) AS [TOTAL]
	
	--,[HEALTH].*
		
FROM
	rev.EPC_STU_HEALTH AS [HEALTH]
	
	INNER JOIN
	rev.EPC_STU_SCH_YR AS [StudentSchoolYear]
	ON
	[HEALTH].[STUDENT_SCHOOL_YEAR_GU] = [StudentSchoolYear].[STUDENT_SCHOOL_YEAR_GU]
	
	INNER JOIN 
	rev.REV_ORGANIZATION_YEAR AS [OrgYear] -- Links between School and Year
	ON 
	[StudentSchoolYear].[ORGANIZATION_YEAR_GU] = [OrgYear].[ORGANIZATION_YEAR_GU]
	
	INNER JOIN 
	rev.REV_ORGANIZATION AS [Organization] -- Contains the School Name
	ON 
	[OrgYear].[ORGANIZATION_GU] = [Organization].[ORGANIZATION_GU]
	
	INNER JOIN 
	rev.REV_YEAR AS [RevYear] -- Contains the School Year
	ON 
	[OrgYear].[YEAR_GU] = [RevYear].[YEAR_GU]
	
	INNER JOIN
	APS.BasicStudent AS [STUDENT]
	ON
	[HEALTH].[STUDENT_GU] = [STUDENT].[STUDENT_GU]
	
	LEFT OUTER JOIN
	APS.LookupTable ('K12.HealthIncident', 'DISPOSITION_CODE') AS [DISPOSITION_CODE]
	ON
	[HEALTH].[DISPOSITION] = [DISPOSITION_CODE].[VALUE_CODE]
	
	LEFT OUTER JOIN
	APS.LookupTable ('K12.HealthIncident', 'INCIDENT_CODE') AS [HEALTH_CODES]
	ON
	[HEALTH].[HEALTH_CODE] = [HEALTH_CODES].[VALUE_CODE]
	
WHERE
	[OrgYear].[ORGANIZATION_GU] LIKE @School
	AND [OrgYear].[YEAR_GU] LIKE @Year
	--AND [HEALTH].[STUDENT_GU] = '03EB58BD-AE14-48CB-992C-6DF7C457BB46'
	--AND [OrgYear].[ORGANIZATION_GU] = '92D69649-D681-4555-AC85-5CCD88FF575B'
	--AND [HEALTH].[DISPOSITION] IS NULL
	
--GROUP BY
--	[Organization].[ORGANIZATION_NAME]	
--	,[HEALTH].[DISPOSITION]
--	,[DISPOSITION_CODE].[VALUE_DESCRIPTION]
	--,[HEALTH].[HEALTH_CODE]
	--,[HEALTH_CODES].[VALUE_DESCRIPTION]
	
ORDER BY
	[Organization].[ORGANIZATION_NAME]
	--,[HEALTH].[DISPOSITION]
	

--UNION
/*	
SELECT
	'<Totals>' AS [SCHOOL_NAME]
	--,CASE WHEN [HEALTH].[DISPOSITION] IS NULL THEN '<NONE>' ELSE [HEALTH].[DISPOSITION] END AS [DISPOSITION]
	,[HEALTH].[HEALTH_CODE]
	,COUNT([HEALTH].[STUDENT_GU]) AS [TOTAL]
		
FROM
	rev.EPC_STU_HEALTH AS [HEALTH]
	
	INNER JOIN
	rev.EPC_STU_SCH_YR AS [StudentSchoolYear]
	ON
	[HEALTH].[STUDENT_SCHOOL_YEAR_GU] = [StudentSchoolYear].[STUDENT_SCHOOL_YEAR_GU]
	
	INNER JOIN 
	rev.REV_ORGANIZATION_YEAR AS [OrgYear] -- Links between School and Year
	ON 
	[StudentSchoolYear].[ORGANIZATION_YEAR_GU] = [OrgYear].[ORGANIZATION_YEAR_GU]
	
	INNER JOIN 
	rev.REV_ORGANIZATION AS [Organization] -- Contains the School Name
	ON 
	[OrgYear].[ORGANIZATION_GU] = [Organization].[ORGANIZATION_GU]
	
	INNER JOIN 
	rev.REV_YEAR AS [RevYear] -- Contains the School Year
	ON 
	[OrgYear].[YEAR_GU] = [RevYear].[YEAR_GU]
	
	--INNER JOIN
	--APS.BasicStudent AS [STUDENT]
	--ON
	--[HEALTH].[STUDENT_GU] = [STUDENT].[STUDENT_GU]
	
WHERE
	[OrgYear].[ORGANIZATION_GU] LIKE @School
	AND [OrgYear].[YEAR_GU] LIKE @Year
	
GROUP BY
	--[HEALTH].[DISPOSITION]
	[HEALTH].[HEALTH_CODE]
	
ORDER BY
--	[Organization].[ORGANIZATION_NAME]
	[HEALTH].[HEALTH_CODE]
--*/